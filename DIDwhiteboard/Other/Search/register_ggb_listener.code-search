# Query: ggb.*register
# Flags: RegExp
# Including: ./DIDwhiteboard
# Excluding: Answer Key not working.json, ROL.js
# ContextLines: 1

2158 results - 697 files

DIDwhiteboard • 7A/M1/whatIsThisForslide1.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('B', updateText);
  5: ggb1.instance.registerObjectUpdateListener('D', updateText);
  6  

DIDwhiteboard • 7A/M1/whatIsThisForslide2.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('time', updateText);
  5  

DIDwhiteboard • 7A/M1/TD L18 - Perfect Squares and Perfect Cubes/slide1.js:
  5  
  6: ggb2.instance.registerObjectUpdateListener('blockNum', updateGGBs);
  7: ggb2.instance.registerObjectUpdateListener('baseLength', updateGGBs);
  8  

DIDwhiteboard • 7A/M1/TD L21 - Approximate Values of Roots/OLD3slide1.js:
  4  
  5: ggb1.instance.registerObjectUpdateListener('timeStudentSquare', showComps);
  6  

DIDwhiteboard • 7A/M1/TD L21 - Approximate Values of Roots/slide2.js:
    5  
    6: ggb1.instance.registerObjectUpdateListener('timeScreenAdjust', timeScreenAdjustListener);
    7: ggb2.instance.registerObjectUpdateListener('DragLeft', dragLeftRightUpdate);
    8: ggb2.instance.registerObjectUpdateListener('DragRight', dragLeftRightUpdate);
    9  

   46    ggb1.instance.setAnimating('timeStudentSquare', true);
   47:   ggb1.instance.registerObjectUpdateListener('timeStudentSquare', timeStudentSquareListener);
   48    ggb1.instance.startAnimation();

   57    ggb1.instance.setAnimating('timeStudentSquare', false);
   58:   ggb1.instance.unregisterObjectUpdateListener('timeStudentSquare');
   59    text3.updateData({ visible: false });

  116    ggb1.instance.setAnimating('timeStudentSquare', false);
  117:   ggb1.instance.unregisterObjectUpdateListener('timeStudentSquare');
  118    text2.updateData({ text: `$${low}^2<(\\sqrt{${hypotSquared}})^2<${high}^2$\n\n$${round(low ** 2, 3)}<8<${round(high ** 2, 3)}$` });

  139      ggb1.instance.setAnimating('timeScreenAdjust', false);
  140:     ggb1.instance.unregisterObjectUpdateListener('timeScreenAdjust');
  141    }

  151      buttonGroup1.updateSingleButton({ disabled: false }, 2);
  152:     ggb1.instance.unregisterObjectUpdateListener('timeStudentSquareListener');
  153    }

DIDwhiteboard • 7A/M1/TD L21 - Approximate Values of Roots/slide4.js:
    5  
    6: ggb2.instance.registerObjectUpdateListener('time', timeGGB2Listener);
    7: ggb2.instance.registerObjectUpdateListener('DragLeft', dragLeftRightUpdate);
    8: ggb2.instance.registerObjectUpdateListener('DragRight', dragLeftRightUpdate);
    9  

   76    ggb1.instance.setAnimating('timeStudentSquare', true);
   77:   ggb1.instance.registerObjectUpdateListener('timeStudentSquare', timeStudentSquareListener);
   78    ggb1.instance.startAnimation();

   87    ggb1.instance.setAnimating('timeStudentSquare', false);
   88:   ggb1.instance.unregisterObjectUpdateListener('timeStudentSquare');
   89    text3.updateData({ visible: false });

  143      ggb1.instance.setAnimating('timeStudentSquare', false);
  144:     ggb1.instance.unregisterObjectUpdateListener('timeStudentSquare');
  145      text2.updateData({ visible: true });

  190      saveData({ animationComplete: true }, 'ggb2');
  191:     ggb1.instance.unregisterObjectUpdateListener('timeStudentSquareListener');
  192    }

DIDwhiteboard • 7A/M1/TD L21 - Approximate Values of Roots/slide5.js:
    5  
    6: ggb2.instance.registerObjectUpdateListener('time', timeGGB2Listener);
    7: ggb2.instance.registerObjectUpdateListener('DragLeft', dragLeftRightUpdate);
    8: ggb2.instance.registerObjectUpdateListener('DragRight', dragLeftRightUpdate);
    9  

   76    ggb1.instance.setAnimating('timeStudentSquare', true);
   77:   ggb1.instance.registerObjectUpdateListener('timeStudentSquare', timeStudentSquareListener);
   78    ggb1.instance.startAnimation();

   87    ggb1.instance.setAnimating('timeStudentSquare', false);
   88:   ggb1.instance.unregisterObjectUpdateListener('timeStudentSquare');
   89    text3.updateData({ visible: false });

  143      ggb1.instance.setAnimating('timeStudentSquare', false);
  144:     ggb1.instance.unregisterObjectUpdateListener('timeStudentSquare');
  145      text2.updateData({ visible: true });

  190      saveData({ animationComplete: true }, 'ggb2');
  191:     ggb1.instance.unregisterObjectUpdateListener('timeStudentSquareListener');
  192    }

DIDwhiteboard • 7A/M2/TC L14 - Exploring Graphs of Proportional Relationships/slide1.js:
   27  
   28: ggb1.instance.registerObjectUpdateListener('time', timeListener);
   29: ggb1.instance.registerClientListener(clientListener);
   30  

  110      }
  111:     ggb1.instance.unregisterObjectUpdateListener('time');
  112    }

DIDwhiteboard • 7A/M2/TC L14 - Exploring Graphs of Proportional Relationships/slide2.js:
   42  
   43: ggb1.instance.registerObjectUpdateListener('time', timeListener);
   44: ggb1.instance.registerClientListener(clientListener);
   45  

  140      // }
  141:     ggb1.instance.unregisterObjectUpdateListener('time');
  142    }

DIDwhiteboard • 7A/M2/TC L14 - Exploring Graphs of Proportional Relationships/slide3.js:
   42  
   43: ggb1.instance.registerObjectUpdateListener('time', timeListener);
   44: ggb1.instance.registerClientListener(clientListener);
   45  

  140      // }
  141:     ggb1.instance.unregisterObjectUpdateListener('time');
  142    }

DIDwhiteboard • 7A/M2/TC L14 - Exploring Graphs of Proportional Relationships/slide4.js:
   42  
   43: ggb1.instance.registerObjectUpdateListener('time', timeListener);
   44: ggb1.instance.registerClientListener(clientListener);
   45  

  140      // }
  141:     ggb1.instance.unregisterObjectUpdateListener('time');
  142    }

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide1.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide2.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide3.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide4.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide5.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide6.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide7.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide8.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide9.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L02 - Demo - The Communative Associative and Distributive Properties/slide10.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • A1/M1/TA L05 - Multiplying Polynomial Expressions/slide2.js:
   8  });
   9: ggb1.instance.registerObjectUpdateListener("number1", update);
  10: ggb1.instance.registerObjectUpdateListener("number2", update);
  11: ggb1.instance.registerObjectUpdateListener("number3", update);
  12: ggb1.instance.registerObjectUpdateListener("number4", update);
  13  

DIDwhiteboard • A1/M1/TA L05 - Multiplying Polynomial Expressions/slide3.js:
  37  
  38: ggb1.instance.registerObjectUpdateListener("number5", update);
  39: ggb1.instance.registerObjectUpdateListener("number6", update);
  40: ggb1.instance.registerObjectUpdateListener("number7", update);
  41  

DIDwhiteboard • A1/M1/TA L05 - Multiplying Polynomial Expressions/slide10.js:
  26    button2.updateData({ text: "Submitted", disabled: true });
  27:   ggb1.instance.registerUpdateListener(update);
  28  });

  41    button2.updateData({ text: "Submit", disabled: false });
  42:   ggb1.instance.unregisterUpdateListener(update);
  43  }

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 1.js:
   21  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   22:   ggb1.instance.registerClickListener(clicks);
   23  }

   70    // resetCheck();
   71:   ggb1.instance.unregisterClickListener(clicks);
   72    let allGGB = ggb1.instance.getAllObjectNames();

  387    }
  388:   ggb1.instance.registerClickListener(clicks);
  389  }

  391  // GGB section
  392: ggb1.instance.registerClientListener((a) => {
  393    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 2.js:
   21  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   22:   ggb1.instance.registerClickListener(clicks);
   23  }

   71    // resetCheck();
   72:   ggb1.instance.unregisterClickListener(clicks);
   73    let allGGB = ggb1.instance.getAllObjectNames();

  388    }
  389:   ggb1.instance.registerClickListener(clicks);
  390  }

  392  // GGB section
  393: ggb1.instance.registerClientListener((a) => {
  394    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 3.js:
  97  
  98: ggb1.instance.registerClientListener((a) => {
  99    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 5.js:
  173  
  174: ggb1.instance.registerClientListener((a) => {
  175    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 6.js:
  180  
  181: ggb1.instance.registerClientListener((a) => {
  182    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 7.js:
   18  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   19:   ggb1.instance.registerClickListener(clicks);
   20  }

   38  select3.on("change", ({ selected }) => {
   39:   ggb1.instance.unregisterClickListener(clicks);
   40    let allGGB = ggb1.instance.getAllObjectNames();

  324    }
  325:   ggb1.instance.registerClickListener(clicks);
  326  }

  328  // GGB section
  329: ggb1.instance.registerClientListener((a) => {
  330    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 8.js:
   18  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   19:   ggb1.instance.registerClickListener(clicks);
   20  }

  109  select3.on("change", ({ selected }) => {
  110:   ggb1.instance.unregisterClickListener(clicks);
  111    let allGGB = ggb1.instance.getAllObjectNames();

  397    }
  398:   ggb1.instance.registerClickListener(clicks);
  399  }

  401  // GGB section
  402: ggb1.instance.registerClientListener((a) => {
  403    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 9.js:
   18  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   19:   ggb1.instance.registerClickListener(clicks);
   20  }

  160  select3.on("change", ({ selected }) => {
  161:   ggb1.instance.unregisterClickListener(clicks);
  162    let allGGB = ggb1.instance.getAllObjectNames();

  448    }
  449:   ggb1.instance.registerClickListener(clicks);
  450  }

  452  // GGB section
  453: ggb1.instance.registerClientListener((a) => {
  454    switch (a.type) {

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 10.js:
   18  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   19:   ggb1.instance.registerClickListener(clicks);
   20  }

  217    resetAnim();
  218:   ggb1.instance.unregisterClickListener(clicks);
  219    let allGGB = ggb1.instance.getAllObjectNames();

  527    }
  528:   ggb1.instance.registerClickListener(clicks);
  529  }

  531  // GGB section
  532: ggb1.instance.registerClientListener((a) => {
  533    switch (a.type) {

DIDwhiteboard • A1/M1/TD L18 - Distributions and Their Shapes/slide2.js:
  57  
  58: ggb1.instance.registerObjectUpdateListener("time", updateTime);
  59: ggb1.instance.registerObjectUpdateListener("time1", updateRight);
  60  

DIDwhiteboard • A1/M1/TD L18 - Distributions and Their Shapes/slide3.js:
  79  // }
  80: ggb1.instance.registerObjectUpdateListener("time", updateTime);
  81: ggb1.instance.registerObjectUpdateListener("time1", updateRight);
  82  

DIDwhiteboard • A1/M1/TD L21 - Demo - Standard Deviation/slide1.js:
  16  for (let i = 0, L = ggbObjects.length; i < L; i++) {
  17:   ggb1.instance.registerObjectUpdateListener(ggbObjects[i], () => {
  18      let num = Math.round(ggb1.instance.getValue(ggbObjects[0]) * 100) / 100;

DIDwhiteboard • A1/M1/TD L21 - Demo - Standard Deviation/slide2.js:
  2  
  3: ggb1.instance.registerObjectUpdateListener('standardDeviation', textWork);
  4  

DIDwhiteboard • A1/M1/TD L21 and L23 - Demo - Summary Stats Tool/slide1.js:
  16  for (let i = 0, L = ggbObjects.length; i < L; i++) {
  17:   ggb1.instance.registerObjectUpdateListener(ggbObjects[i], () => {
  18      let num = Math.round(ggb1.instance.getValue(ggbObjects[0]) * 100) / 100;

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 4.js:
  249  
  250: ggb1.instance.registerObjectUpdateListener("enablePrompt", update);
  251  

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 9.js:
  22  
  23: ggb1.instance.registerObjectUpdateListener("time", update);
  24  

  30  
  31: ggb1.instance.registerObjectUpdateListener("count", labelStuff);
  32  

  40  
  41: ggb1.instance.registerObjectUpdateListener("showPurple", update2);
  42  

  49  
  50: ggb1.instance.registerObjectUpdateListener("submitted", buttonStuff);
  51  

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 10.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener("count", labelStuff);
  13  

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 12.js:
  49  
  50: ggb1.instance.registerObjectUpdateListener("distance", update);
  51  

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 14.js:
  85  
  86: ggb2.instance.registerStoreUndoListener(() => {
  87    ggb2.updateData({ save64: ggb2.instance.getBase64() });

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 16.js:
  49  
  50: ggb1.instance.registerObjectUpdateListener("distance", update);
  51  

DIDwhiteboard • A1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/Slide 18.js:
  72  
  73: /*ggb2.instance.registerStoreUndoListener(getDoodles);
  74  getDoodles();

  83  
  84: ggb2.instance.registerStoreUndoListener(() => {
  85    ggb2.updateData({ save64: ggb2.instance.getBase64() });

DIDwhiteboard • A1/M2/TA L04 - Solutions Sets of Linear Inequalites in Two Variables/slide6.js:
  249  
  250: ggb1.instance.registerObjectUpdateListener("enablePrompt", update);
  251  

DIDwhiteboard • A1/M2/TA L04 - Solutions Sets of Linear Inequalites in Two Variables/slide8.js:
  17  
  18: ggb1.instance.registerStoreUndoListener(getDoodles);
  19  getDoodles();

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide1.js:
  55  
  56: ggb1.instance.registerClientListener(clientFunction);
  57  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide2.js:
  53  
  54: ggb1.instance.registerClientListener(clientFunction);
  55  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide3.js:
  46  
  47: ggb1.instance.registerClientListener(clientFunction);
  48  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide4.js:
  46  
  47: ggb1.instance.registerClientListener(clientFunction);
  48  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide6.js:
  13  
  14: ggb1.instance.registerObjectUpdateListener("time", timeFunction);
  15  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide8.js:
   9  ggb1.instance.setErrorDialogsActive(false);
  10: ggb1.instance.registerClientListener(clientListenerFunction);
  11: ggb1.instance.registerObjectUpdateListener("follow", booleanListener);
  12  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide9.js:
  40  
  41: ggb1.instance.registerClientListener(clientFunction);
  42  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide11.js:
  13  ggb1.instance.setErrorDialogsActive(false);
  14: ggb1.instance.registerClientListener(clientFunction);
  15  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide12.js:
    5  ggb1.instance.setErrorDialogsActive(false);
    6: ggb1.instance.registerObjectUpdateListener('P1A', movedPoints);
    7: ggb1.instance.registerObjectUpdateListener('P1B', movedPoints);
    8: ggb1.instance.registerObjectUpdateListener('P2A', movedPoints);
    9: ggb1.instance.registerObjectUpdateListener('P2B', movedPoints);
   10  

  199  
  200: ggb1.instance.registerClientListener(clientFunction);
  201  

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide13.js:
  118  ggb1.instance.setErrorDialogsActive(false);
  119: ggb1.instance.registerClientListener(clientFunction);
  120: ggb1.instance.registerObjectUpdateListener('P1A', movedPoints);
  121: ggb1.instance.registerObjectUpdateListener('P1B', movedPoints);
  122: ggb1.instance.registerObjectUpdateListener('P2A', movedPoints);
  123: ggb1.instance.registerObjectUpdateListener('P2B', movedPoints);
  124  

DIDwhiteboard • A1/M2/TC L15 - Relationships Between Quantitative Variables/Slide 2.js:
  304  
  305: ggb1.instance.registerObjectUpdateListener("count", update);
  306  

DIDwhiteboard • A1/M2/TC L15 - Relationships Between Quantitative Variables/Slide 6.js:
  23  
  24: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  25  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 4.js:
  18  
  19: ggb1.instance.registerObjectUpdateListener('show', update);
  20  

  28  
  29: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  30  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 6.js:
  16  
  17: ggb1.instance.registerObjectUpdateListener("show", update);
  18  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 9.js:
  72  
  73: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  74  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 10.js:
  36  
  37: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  38  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 11.js:
  36  
  37: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  38  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 12.js:
  43  
  44: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  45  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 15.js:
  138  
  139: ggb1.instance.registerObjectUpdateListener('fake', fakeStuff);
  140  

DIDwhiteboard • A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/Slide 16.js:
  92  
  93: ggb2.instance.registerObjectUpdateListener('fake', fakeStuff);
  94  

DIDwhiteboard • A1/M2/TC L17 - Modeling Relationships with a Line/Slide 10.js:
  29  
  30: ggb1.instance.registerObjectUpdateListener('enableButton', update);
  31  

DIDwhiteboard • A1/M2/TC L20 - Interpreting Correlation/slide4.js:
  14  
  15: ggb2.instance.registerObjectUpdateListener('enable', buttonWork);
  16  

DIDwhiteboard • A1/M2/TD L22 - Summarizing Bivariate Categorical Data with Two-Way Tables/Slide 15.js:
  113  
  114: ggb1.instance.registerObjectUpdateListener("cell01", updateB1);
  115: ggb1.instance.registerObjectUpdateListener("cell02", updateB2);
  116: ggb1.instance.registerObjectUpdateListener("cell03", updateB3);
  117: ggb1.instance.registerObjectUpdateListener("cell04", updateB4);
  118: ggb1.instance.registerObjectUpdateListener("cell11", updateR1);
  119: ggb1.instance.registerObjectUpdateListener("cell12", updateR2);
  120: ggb1.instance.registerObjectUpdateListener("cell13", updateR3);
  121: ggb1.instance.registerObjectUpdateListener("cell14", updateR4);
  122  

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide1.js:
  132  
  133: ggb1.instance.registerObjectUpdateListener("l4", update);
  134  

  215  
  216: ggb1.instance.registerObjectUpdateListener("A", updateRight);
  217: ggb1.instance.registerObjectUpdateListener("B", updateRight);
  218  

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide8.js:
  64  ggb1.instance.setMode(62);
  65: ggb1.instance.registerStoreUndoListener(getDoodles);
  66  getDoodles();

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide10.js:
  68  
  69: ggb2.instance.registerObjectUpdateListener('box1Done', update);
  70: ggb2.instance.registerObjectUpdateListener('box2Done', update);
  71: ggb2.instance.registerObjectUpdateListener('box3Done', update);
  72: ggb2.instance.registerObjectUpdateListener('box4Done', update);
  73: ggb2.instance.registerObjectUpdateListener('box5Done', update);
  74: ggb2.instance.registerObjectUpdateListener('box6Done', update);
  75: ggb2.instance.registerObjectUpdateListener('box7Done', update);
  76: ggb2.instance.registerObjectUpdateListener('box8Done', update);
  77: ggb2.instance.registerObjectUpdateListener('box9Done', update);
  78: ggb2.instance.registerObjectUpdateListener('box10Done', update);
  79: ggb2.instance.registerObjectUpdateListener('box11Done', update);
  80: ggb2.instance.registerObjectUpdateListener('box12Done', update);
  81: ggb2.instance.registerObjectUpdateListener('box13Done', update);
  82: ggb2.instance.registerObjectUpdateListener('box14Done', update);
  83: ggb2.instance.registerObjectUpdateListener('box15Done', update);
  84: ggb2.instance.registerObjectUpdateListener('box16Done', update);
  85: ggb2.instance.registerObjectUpdateListener('box17Done', update);
  86: ggb2.instance.registerObjectUpdateListener('box18Done', update);
  87: ggb2.instance.registerObjectUpdateListener('box19Done', update);
  88: ggb2.instance.registerObjectUpdateListener('box20Done', update);
  89: ggb2.instance.registerObjectUpdateListener('box21Done', update);
  90  
  91: ggb1.instance.registerStoreUndoListener(getDoodles);
  92  getDoodles();

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide11.js:
   22  
   23: ggb1.instance.registerStoreUndoListener(getDoodles);
   24  getDoodles();

  118  
  119: ggb2.instance.registerObjectUpdateListener('box1Done', update);
  120: ggb2.instance.registerObjectUpdateListener('box2Done', update);
  121: ggb2.instance.registerObjectUpdateListener('box3Done', update);
  122: ggb2.instance.registerObjectUpdateListener('box4Done', update);
  123: ggb2.instance.registerObjectUpdateListener('box5Done', update);
  124: ggb2.instance.registerObjectUpdateListener('box6Done', update);
  125: ggb2.instance.registerObjectUpdateListener('box7Done', update);
  126: ggb2.instance.registerObjectUpdateListener('box8Done', update);
  127: ggb2.instance.registerObjectUpdateListener('box9Done', update);
  128: ggb2.instance.registerObjectUpdateListener('box10Done', update);
  129: ggb2.instance.registerObjectUpdateListener('box11Done', update);
  130: ggb2.instance.registerObjectUpdateListener('box12Done', update);
  131: ggb2.instance.registerObjectUpdateListener('box13Done', update);
  132: ggb2.instance.registerObjectUpdateListener('box14Done', update);
  133: ggb2.instance.registerObjectUpdateListener('box15Done', update);
  134: ggb2.instance.registerObjectUpdateListener('box16Done', update);
  135: ggb2.instance.registerObjectUpdateListener('box17Done', update);
  136: ggb2.instance.registerObjectUpdateListener('box18Done', update);
  137: ggb2.instance.registerObjectUpdateListener('box19Done', update);
  138: ggb2.instance.registerObjectUpdateListener('box20Done', update);
  139: ggb2.instance.registerObjectUpdateListener('box21Done', update);
  140  

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide12.js:
   20  
   21: ggb1.instance.registerStoreUndoListener(getDoodles);
   22  getDoodles();

  132  
  133: ggb2.instance.registerObjectUpdateListener('box1Done', update);
  134: ggb2.instance.registerObjectUpdateListener('box2Done', update);
  135: ggb2.instance.registerObjectUpdateListener('box3Done', update);
  136: ggb2.instance.registerObjectUpdateListener('box4Done', update);
  137: ggb2.instance.registerObjectUpdateListener('box5Done', update);
  138: ggb2.instance.registerObjectUpdateListener('box6Done', update);
  139: ggb2.instance.registerObjectUpdateListener('box7Done', update);
  140: ggb2.instance.registerObjectUpdateListener('box8Done', update);
  141: ggb2.instance.registerObjectUpdateListener('box9Done', update);
  142: ggb2.instance.registerObjectUpdateListener('box10Done', update);
  143: ggb2.instance.registerObjectUpdateListener('box11Done', update);
  144: ggb2.instance.registerObjectUpdateListener('box12Done', update);
  145: ggb2.instance.registerObjectUpdateListener('box13Done', update);
  146: ggb2.instance.registerObjectUpdateListener('box14Done', update);
  147: ggb2.instance.registerObjectUpdateListener('box15Done', update);
  148: ggb2.instance.registerObjectUpdateListener('box16Done', update);
  149: ggb2.instance.registerObjectUpdateListener('box17Done', update);
  150: ggb2.instance.registerObjectUpdateListener('box18Done', update);
  151: ggb2.instance.registerObjectUpdateListener('box19Done', update);
  152: ggb2.instance.registerObjectUpdateListener('box20Done', update);
  153: ggb2.instance.registerObjectUpdateListener('box21Done', update);
  154  

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide14.js:
  30  
  31: ggb1.instance.registerStoreUndoListener(getDoodles);
  32  getDoodles();

  68  
  69: ggb2.instance.registerObjectUpdateListener('count', updateRight);
  70  function updateRight() {

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide19.js:
  18  });
  19: ggb1.instance.registerObjectUpdateListener("rangemin", update);
  20: ggb1.instance.registerObjectUpdateListener("rangemax", update);
  21: ggb1.instance.registerObjectUpdateListener("domainmin", update);
  22: ggb1.instance.registerObjectUpdateListener("domainmax", update);
  23  

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide23.js:
  29  
  30: ggb1.instance.registerObjectUpdateListener("zoomOutRegion", update);
  31: ggb1.instance.registerObjectUpdateListener("zoomInRegion", update);
  32  function update() {

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide2.js:
    9  
   10: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   11: ggb2.instance.registerRemoveListener(parseStrokes);
   12  
   13: ggb2.instance.registerClientListener((a) => {
   14    if (a.type == "select" && a.target == "Scrubber") {

   18    } else if (a.type == "undo") {
   19:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   20      linkGGB();

  123  
  124: ggb2.instance.registerAddListener(adds);
  125  

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide3.js:
   25  
   26: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   27  
   28: /* ggb2.instance.registerClientListener((a) => {
   29    if (a.type == "select" && a.target == "Scrubber") {

   33    } else if (a.type == "undo") {
   34:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   35      linkGGB();

  104  
  105: //ggb2.instance.registerAddListener(adds);
  106  

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide5.js:
  19  
  20: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
  21  

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide6.js:
  23  
  24: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
  25  

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide14.js:
    9  
   10: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   11  
   12: ggb2.instance.registerClientListener((a) => {
   13    if (a.type == "select" && a.target == "Scrubber") {

   17    } else if (a.type == "undo") {
   18:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   19      linkGGB();

  165  
  166: ggb2.instance.registerAddListener(adds);
  167  

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide16.js:
    9  
   10: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   11  
   12: ggb2.instance.registerClientListener((a) => {
   13    if (a.type == "select" && a.target == "Scrubber") {

   17    } else if (a.type == "undo") {
   18:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   19      linkGGB();

  165  
  166: ggb2.instance.registerAddListener(adds);
  167  

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide2.js:
   9  
  10: ggb1.instance.registerAddListener(adds);
  11  

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide5.js:
   9  
  10: ggb1.instance.registerAddListener(adds);
  11  

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide8.js:
  39  
  40: ggb1.instance.registerAddListener(adds);
  41  

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide10.js:
  53  
  54: ggb1.instance.registerAddListener(adds);
  55  

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide12.js:
  53  
  54: ggb1.instance.registerAddListener(adds);
  55  

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide14.js:
  63  
  64: ggb1.instance.registerAddListener(adds);
  65  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide1.js:
  4  
  5: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  6: ggb1.instance.registerObjectUpdateListener('timeA', restart);
  7  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide2.js:
  21  
  22: ggb1.instance.registerObjectClickListener('Drive', startTime);
  23: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
  24: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  25  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide3.js:
   7  
   8: ggb1.instance.registerObjectClickListener('Drive', startTime);
   9: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
  10: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  11  
  12: ggb1.instance.registerClientListener(point);
  13: ggb2.instance.registerClientListener(horizontalEvent);
  14: ggb2.instance.registerClientListener(verticalEvent);
  15  

  19      if (a.hits[0] == 'DragPoint') {
  20:       ggb1.instance.registerObjectUpdateListener('DragPoint', update1);
  21        resetTime();

  29      if (a.hits[0] == 'tHori') {
  30:       ggb2.instance.registerObjectUpdateListener('tHori', update2);
  31        resetTime();

  39      if (a.hits[0] == 'tVert') {
  40:       ggb2.instance.registerObjectUpdateListener('tVert', update2);
  41        resetTime();

  46  function update1() {
  47:   ggb2.instance.unregisterObjectUpdateListener('tHori');
  48:   ggb2.instance.unregisterObjectUpdateListener('tVert');
  49    let horizontal1 = ggb1.instance.getValue('tFakeHori');

  56  function update2() {
  57:   ggb1.instance.unregisterObjectUpdateListener('DragPoint');
  58    let horizontal2 = ggb2.instance.getValue('tHori');

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide4.js:
   7  
   8: ggb1.instance.registerObjectClickListener('Drive', startTime);
   9: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
  10: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  11  
  12: ggb1.instance.registerClientListener(point);
  13: ggb2.instance.registerClientListener(horizontalEvent);
  14: ggb2.instance.registerClientListener(verticalEvent);
  15  

  19      if (a.hits[0] == 'DragPoint') {
  20:       ggb1.instance.registerObjectUpdateListener('DragPoint', update1);
  21        resetTime();

  29      if (a.hits[0] == 'tHori') {
  30:       ggb2.instance.registerObjectUpdateListener('tHori', update2);
  31        resetTime();

  39      if (a.hits[0] == 'tVert') {
  40:       ggb2.instance.registerObjectUpdateListener('tVert', update2);
  41        resetTime();

  46  function update1() {
  47:   ggb2.instance.unregisterObjectUpdateListener('tHori');
  48:   ggb2.instance.unregisterObjectUpdateListener('tVert');
  49    let horizontal1 = ggb1.instance.getValue('tFakeHori');

  56  function update2() {
  57:   ggb1.instance.unregisterObjectUpdateListener('DragPoint');
  58    let horizontal2 = ggb2.instance.getValue('tHori');

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide5.js:
   6  
   7: ggb1.instance.registerObjectClickListener('Drive', startTime);
   8: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
   9: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  10: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  11: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  12  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide6.js:
   6  
   7: ggb1.instance.registerObjectClickListener('Drive', startTime);
   8: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
   9: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  10: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  11: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  12  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide8.js:
   6  
   7: ggb1.instance.registerObjectClickListener('Drive', startTime);
   8: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
   9: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  10: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  11  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide9.js:
  28  
  29: ggb1.instance.registerObjectClickListener('Drive', startTime);
  30: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
  31: ggb1.instance.registerObjectUpdateListener('ScalePoint', resetTime);
  32: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  33  ggb1.instance.setAnimating('tScal', false);

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide10.js:
   7  
   8: ggb1.instance.registerObjectClickListener('Drive', startTime);
   9: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
  10: ggb1.instance.registerObjectUpdateListener('ScalePoint', resetTime);
  11: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  12  ggb1.instance.setAnimating('tScal', false);

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide11.js:
   7  
   8: ggb1.instance.registerObjectClickListener('Drive', startTime);
   9: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
  10: ggb1.instance.registerObjectUpdateListener('ScalePoint', resetTime);
  11: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  12  ggb1.instance.setAnimating('tScal', false);

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide12.js:
   6  
   7: ggb1.instance.registerObjectClickListener('Drive', startTime);
   8: ggb1.instance.registerObjectUpdateListener('DragPoint', resetTime);
   9: ggb1.instance.registerObjectUpdateListener('time', lightFuse);
  10: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  11: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  12: // ggb2.instance.registerObjectUpdateListener("tScal", update1);
  13  

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide14.js:
   9  
  10: ggb2.instance.registerUpdateListener(() => {
  11    ggb1.instance.setValue('showInput', false);

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide15.js:
  27  
  28: ggb2.instance.registerUpdateListener(() => {
  29    ggb1.instance.setValue('showInput', false);

DIDwhiteboard • A1/M3/TD L18 - Exploring Transformations of the Graphs of Functions/slide16.js:
  54  
  55: ggb2.instance.registerUpdateListener(() => {
  56    ggb1.instance.setValue('showInput', false);

DIDwhiteboard • A1/M4/TA L03 - Analyzing Functions that Model Projectile Motion/slide1.js:
  73  
  74: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  75  
  76: ggb1.instance.registerObjectUpdateListener(
  77    "SpringDraggerLaunchUp",

  79  );
  80: ggb1.instance.registerObjectUpdateListener(
  81    "SpringDraggerLaunchDown",

  83  );
  84: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  85  

DIDwhiteboard • A1/M4/TA L03 - Analyzing Functions that Model Projectile Motion/slide2.js:
  78  
  79: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  80: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  81: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchUp", setText);
  82: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchDown", setText);
  83  

DIDwhiteboard • A1/M4/TA L03 - Analyzing Functions that Model Projectile Motion/slide3.js:
  83  
  84: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  85: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  86: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchUp", setText);
  87: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchDown", setText);
  88  

DIDwhiteboard • A1/M4/TA L03 - Analyzing Functions that Model Projectile Motion/slide4.js:
  70  
  71: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  72: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  73  

DIDwhiteboard • A1/M4/TA L03 - Analyzing Functions that Model Projectile Motion/slide10.js:
  26  
  27: ggb1.instance.registerObjectUpdateListener("Point1", setTableColor);
  28: ggb1.instance.registerObjectUpdateListener("Point2", setTableColor);
  29  

DIDwhiteboard • A1/M4/TA L03 - Analyzing Functions that Model Projectile Motion/slide12.js:
  25  
  26: ggb1.instance.registerObjectUpdateListener("Point1", setTableColor);
  27: ggb1.instance.registerObjectUpdateListener("Point2", setTableColor);
  28  

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide6.js:
  2  
  3: ggb1.instance.registerObjectUpdateListener("numOfTickets", update);
  4  ggb1.instance.setErrorDialogsActive(false);

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide15.js:
  149  
  150: ggb1.instance.registerObjectUpdateListener('show', update);
  151  

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide16.js:
  149  
  150: ggb1.instance.registerObjectUpdateListener('show', update);
  151  

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide17.js:
  149  
  150: ggb1.instance.registerObjectUpdateListener('show', update);
  151  

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide18.js:
  149  
  150: ggb1.instance.registerObjectUpdateListener('show', update);
  151  

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/slide3-4.js:
  253  
  254: ggb2.instance.registerStoreUndoListener(() => {
  255  	ggb2.updateData({ next64: ggb2.instance.getBase64() });

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/slide3.js:
  82   * function ggbOnInit() {
  83:     ggbApplet.registerClickListener("changeColor");
  84      ggbApplet.setSize(590, 590);

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/slide4.js:
  306  
  307: ggb1.instance.registerStoreUndoListener(() => {
  308    ggb1.updateData({ next64: ggb1.instance.getBase64() });

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/archive/Art with Transformations.js:
    1  function ggbOnInit() {
    2:   ggbApplet.registerObjectUpdateListener("addLin", "addLinear");
    3:   ggbApplet.registerObjectUpdateListener("addQuad", "addQuadratic");
    4:   ggbApplet.registerObjectUpdateListener("addAbsVal", "addAbsVal");
    5:   ggbApplet.registerObjectUpdateListener("addCubic", "addCubic");
    6:   ggbApplet.registerObjectUpdateListener("addSqrt", "addSqrt");
    7:   ggbApplet.registerObjectUpdateListener("addCbrt", "addCbrt");
    8:   ggbApplet.registerObjectUpdateListener("addExpDecay", "addExpDecay");
    9:   ggbApplet.registerObjectUpdateListener("addExpGrowth", "addExpGrowth");
   10  
   11:   ggbApplet.registerAddListener("pointConditions");
   12:   ggbApplet.registerClientListener("tuck");
   13  
   14:   ggbApplet.registerObjectClickListener("button6", "trash");
   15:   ggbApplet.registerClickListener("grab");
   16    ggbApplet.setSize(590, 590);
   17:   ggbApplet.registerClickListener("changeColor");
   18  }

  442        let number = grabbed.target.replace("CMid_", "");
  443:       ggbApplet.registerObjectUpdateListener("CMid_" + number, () => {
  444          ggbApplet.setCoords("CLeft_" + number, ggbApplet.getXcoord("CMid_" + number) - 1, ggbApplet.getYcoord("CMid_" + number) - 1);

  449        let number = grabbed.target.replace("SROrigin_", "");
  450:       ggbApplet.registerObjectUpdateListener("SROrigin_" + number, () => {
  451          ggbApplet.setCoords("SROuter_" + number, ggbApplet.getXcoord("SROrigin_" + number) + 4, ggbApplet.getYcoord("SROrigin_" + number) + 2);

  455        let number = grabbed.target.replace("CROrigin_", "");
  456:       ggbApplet.registerObjectUpdateListener("CROrigin_" + number, () => {
  457          ggbApplet.setCoords("CRLeft_" + number, ggbApplet.getXcoord("CROrigin_" + number) - 1, ggbApplet.getYcoord("CROrigin_" + number) - 1);

  462        let number = grabbed.target.replace("EDOrigin_", "");
  463:       ggbApplet.registerObjectUpdateListener("EDOrigin_" + number, () => {
  464          ggbApplet.setCoords("EDLeft_" + number, ggbApplet.getXcoord("EDOrigin_" + number) - 3, ggbApplet.getYcoord("EDOrigin_" + number) + 8);

  469        let number = grabbed.target.replace("EGOrigin_", "");
  470:       ggbApplet.registerObjectUpdateListener("EGOrigin_" + number, () => {
  471          ggbApplet.setCoords("EGLeft_" + number, ggbApplet.getXcoord("EGOrigin_" + number) - 1, ggbApplet.getYcoord("EGOrigin_" + number) - (1 / 2));

DIDwhiteboard • A1/M4/TD L23 - Creating Equations of Quadratic Functions to Model Contexts/slide1.js:
  50  
  51: ggb1.instance.registerObjectUpdateListener("time", update);
  52  

DIDwhiteboard • A1/M4/TD L23 - Creating Equations of Quadratic Functions to Model Contexts/slide2.js:
  92  
  93: ggb2.instance.registerObjectUpdateListener("time", update);
  94  

DIDwhiteboard • A1/M4/TD L23 - Creating Equations of Quadratic Functions to Model Contexts/slide11.js:
  38  
  39: ggb1.instance.registerStoreUndoListener(getDoodles);
  40  getDoodles();

DIDwhiteboard • A1/M5/TB L08 - Exponential Functions/slide9.js:
  27    let visPoints = allPoints.filter((point) => point.includes("Vis"));
  28:   ggb1.instance.registerObjectUpdateListener("Follow", () => {
  29      for (let i = 0, L = visPoints.length; i < L; i++) {

  31          ggb1.instance.setValue("showHint", false);
  32:         ggb1.instance.unregisterObjectUpdateListener("Follow");
  33          break;

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide10.js:
  14  
  15: ggb2.instance.registerObjectUpdateListener('start', updateLeft);
  16: ggb2.instance.registerObjectUpdateListener('rate', updateLeft);
  17  

DIDwhiteboard • A1/M5/TC L17 - Demo - Exponential Decay/slide1.js:
  37  
  38: ggb1.instance.registerObjectUpdateListener('clickCount', graph);
  39: ggb1.instance.registerObjectUpdateListener('noPoints', off);
  40  

DIDwhiteboard • A1/M6/TA L01 - Analyzing Paint Splatters/slide2.js:
  182  
  183: ggb1.instance.registerObjectUpdateListener("balloonDilation", updateRight);
  184  

  241  
  242: ggb1.instance.registerObjectUpdateListener("time2", update2);
  243  function update2() {

DIDwhiteboard • A1/M6/TA L01 - Analyzing Paint Splatters/slide4.js:
  299  
  300: ggb1.instance.registerObjectUpdateListener('balloonDilation', updateRight);
  301  

  356  
  357: ggb1.instance.registerObjectUpdateListener('time2', update2);
  358  function update2() {

DIDwhiteboard • A1/M6/TA L01 - Analyzing Paint Splatters/slide5.js:
  321  
  322: ggb1.instance.registerObjectUpdateListener('balloonDilation', updateRight);
  323  

  366  
  367: ggb1.instance.registerObjectUpdateListener('time2', update2);
  368  

DIDwhiteboard • A1/Regression Tool/slide1.js:
  16  
  17: ggb1.instance.registerObjectUpdateListener('showResiduals', showResiduals);
  18: ggb2.instance.registerObjectUpdateListener(
  19    'showResidualPlot',

DIDwhiteboard • G2/3Reg PVC G2 v2.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("organize", "organize");
  5:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  6:   ggbApplet.registerObjectUpdateListener("radius", "scoop");
  7:   ggbApplet.registerObjectUpdateListener("InputBox1", "scatter");
  8  }

DIDwhiteboard • G2/3Reg PVC G2 v3.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:   ggbApplet.registerObjectClickListener("organize", "organize");
  4:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  5:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  6:   ggbApplet.registerObjectUpdateListener("time2", "slideToTheLeft");
  7:   ggbApplet.registerObjectUpdateListener("time3", "takeItBackNowYall");
  8:   ggbApplet.registerObjectClickListener("reset", "reset");
  9:   // ggbApplet.registerObjectUpdateListener("InputBox1", "reset");
  10  }

DIDwhiteboard • G2/3Reg PVC G2 v12.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:   ggbApplet.registerObjectClickListener("organize", "organize");
  4:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  5:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  6:   ggbApplet.registerObjectUpdateListener("time2", "slideToTheLeft");
  7:   ggbApplet.registerObjectUpdateListener("time3", "takeItBackNowYall");
  8:   ggbApplet.registerObjectClickListener("reset", "reset");
  9:   // ggbApplet.registerObjectUpdateListener("InputBox1", "reset");
  10  }

DIDwhiteboard • G2/3Reg PVC G2 v13.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:   ggbApplet.registerObjectClickListener("organize", "organize");
  4:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  5:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  6:   ggbApplet.registerObjectUpdateListener("time2", "slideToTheLeft");
  7:   ggbApplet.registerObjectUpdateListener("time3", "takeItBackNowYall");
  8:   ggbApplet.registerObjectClickListener("reset", "reset");
  9  }

DIDwhiteboard • G2/3Reg PVC G2 v14.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:   ggbApplet.registerObjectClickListener("organize", "organize");
  4:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  5:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  6:   ggbApplet.registerObjectUpdateListener("time2", "slideToTheLeft");
  7:   ggbApplet.registerObjectUpdateListener("time3", "takeItBackNowYall");
  8:   ggbApplet.registerObjectClickListener("reset", "reset");
  9  }

DIDwhiteboard • G2/3Reg PVC G2 v15.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:   ggbApplet.registerObjectClickListener("organize", "organize");
  4:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  5:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  6:   ggbApplet.registerObjectUpdateListener("time2", "slideToTheLeft");
  7:   ggbApplet.registerObjectUpdateListener("time3", "takeItBackNowYall");
  8:   ggbApplet.registerObjectClickListener("reset", "reset");
  9  }

DIDwhiteboard • G2/3Reg PVC G2.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerClientListener("popul8");
  3:     ggbApplet.registerClientListener("unbundle");
  4:     ggbApplet.registerObjectClickListener("reset", "reset");
  5:     ggbApplet.registerObjectClickListener("bundleButton", "bundleTens");
  6:     ggbApplet.registerObjectClickListener("bundleButton2", "bundleOnes");
  7  }

DIDwhiteboard • G2/G2 M1 TB L8 - Measuring Stick.js:
  23  
  24: ggb1.instance.registerObjectUpdateListener("time", bounce);
  25: ggb1.instance.registerObjectUpdateListener("shift", shift);
  26  

DIDwhiteboard • G2/G2 M1 TF L24 - Place Value with Sticks.js:
  19  
  20: ggb1.instance.registerClientListener(copy);
  21: ggb1.instance.registerObjectUpdateListener("time", bundle);
  22  

DIDwhiteboard • G2/G2 M3 TD L15 - Timer.js:
  29  buttonGroup1.on("click:3", () => {
  30: 	ggb1.instance.unregisterObjectUpdateListener("MinutePoint");
  31: 	ggb1.instance.unregisterObjectUpdateListener("SecondPoint");
  32  	buttonGroup1.updateSingleButton({ disabled: false }, 1);

  58  	tick();
  59: 	ggb1.instance.registerObjectUpdateListener("MinutePoint", justOneMinute);
  60: 	ggb1.instance.registerObjectUpdateListener("SecondPoint", justOneMinute);
  61  	buttonGroup1.updateSingleButton({ disabled: true }, 1);

DIDwhiteboard • G2/measureObjects.js:
  1  function ggbOnInit() {
  2:     ggb1.instance.registerObjectClickListener("measure", "measure");
  3:     ggb1.instance.registerObjectClickListener("reset", "reset");
  4:     ggb1.instance.registerObjectClickListener("stop", "stop");
  5:     ggb1.instance.registerObjectUpdateListener("time", "bounce");
  6:     ggb1.instance.registerObjectUpdateListener("InputBox2", "count");
  7:     ggb1.instance.registerObjectUpdateListener("InputBox1", "count");
  8:     ggb1.instance.registerObjectClickListener("save", "save");
  9:     ggb1.instance.registerObjectUpdateListener("clickNumber", "buttonClick");
  10  }

DIDwhiteboard • G2/PVC Three Region G2.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerObjectClickListener("scatter", "scatter");
  3:     ggbApplet.registerObjectClickListener("reset", "reset");
  4:     ggbApplet.registerObjectClickListener("organize", "organize");
  5:     ggbApplet.registerObjectClickListener("bundle", "bundle");
  6:     ggbApplet.registerObjectUpdateListener("radius", "scoop");
  7:     ggbApplet.registerObjectUpdateListener("InputBox1", "scatter");
  8  }

DIDwhiteboard • G2/RubberBandPVC.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectUpdateListener("OnesBand", "bundleOne");
  3:   ggbApplet.registerObjectUpdateListener("TensBand", "bundleTen");
  4:   ggbApplet.registerObjectUpdateListener("HundredsBand", "bundleHundred");
  5  }

DIDwhiteboard • G3/Connect4ish.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerClientListener("dropIt");
  3  }

DIDwhiteboard • G3/Counting On.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectUpdateListener("InputBox1", "getSet");
  3:   ggbApplet.registerClientListener("copy");
  4:   ggbApplet.registerObjectClickListener("button2", "organize");
  5:   ggbApplet.registerObjectUpdateListener("time", "bundle");
  6:   ggbApplet.registerObjectUpdateListener("time2", "bundle");
  7  }

DIDwhiteboard • G3/CountingCollection.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerClientListener("snap");
  3:   ggbApplet.registerObjectClickListener("button2", "showCounters");
  4:   ggbApplet.registerObjectUpdateListener("time", "showHide");
  5  }

DIDwhiteboard • G3/Levi Panda.js:
  2    ggbApplet.setSize(590, 590);
  3:   ggbApplet.registerClientListener("press");
  4    //hover state listeners below

DIDwhiteboard • G3/MeasurementObjects.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("measure", "measure");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("stop", "stop");
  5:   ggbApplet.registerObjectUpdateListener("time", "bounce");
  6:   ggbApplet.registerObjectUpdateListener("InputBox2", "count");
  7:   ggbApplet.registerObjectUpdateListener("InputBox1", "count");
  8:   ggbApplet.registerObjectClickListener("save", "save");
  9  }

DIDwhiteboard • G3/MeasurementOneTenHundred.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("measure", "measure");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("stop", "stop");
  5:   ggbApplet.registerObjectUpdateListener("time", "bounce");
  6:   ggbApplet.registerObjectUpdateListener("InputBox2", "count");
  7:   ggbApplet.registerObjectUpdateListener("InputBox1", "count");
  8  }

DIDwhiteboard • G3/Multiplication JS Two Regions.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerClientListener("popul8");
  3:     ggbApplet.registerObjectUpdateListener("MultiplierDot", "multiplyIt");
  4:     ggbApplet.registerObjectClickListener("button2", "reset");
  5  }

DIDwhiteboard • G3/Multiply by 10 PVC old.js:
  2    ggbApplet.setSize(590, 590);
  3:   ggbApplet.registerObjectUpdateListener("step", "hup234");
  4:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  5  }

DIDwhiteboard • G3/Multiply by 10 PVC.js:
  2  	ggbApplet.setSize(590, 590);
  3: 	ggbApplet.registerObjectUpdateListener("step", "hup234");
  4: 	ggbApplet.registerObjectUpdateListener("time", "moveIt");
  5  }

DIDwhiteboard • G3/PVC Addition vs.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("addButton", "organize");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  8  }

DIDwhiteboard • G3/PVC Addition with Crazy Animation 3.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("addButton", "organize");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  8:   ggbApplet.registerObjectUpdateListener("timeShrink", "shrink");
  9:   ggbApplet.registerObjectUpdateListener("timeGrow", "grow");
  10  }

DIDwhiteboard • G3/PVC Addition with Crazy Animation 4.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("addButton", "organize");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  8:   ggbApplet.registerObjectUpdateListener("timeShrink", "shrink");
  9:   //ggbApplet.registerObjectUpdateListener("timeGrow", "grow");
  10  }

DIDwhiteboard • G3/PVC Addition with Crazy Animation 5.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("addButton", "organize");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  8:   ggbApplet.registerObjectUpdateListener("timeShrink", "shrink");
  9:   ggbApplet.registerObjectUpdateListener("timeGrow", "grow");
  10  }

DIDwhiteboard • G3/PVC Addition with Crazy Animation 6.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("addButton", "organize");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  8:   ggbApplet.registerObjectUpdateListener("timeShrink", "shrink");
  9:   ggbApplet.registerObjectUpdateListener("timeGrow", "grow");
  10  }

DIDwhiteboard • G3/PVC Addition with Crazy Animation.js:
  1    function ggbOnInit() {
  2:     ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:     ggbApplet.registerObjectClickListener("reset", "reset");
  4:     ggbApplet.registerObjectClickListener("addButton", "organize");
  5:     ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:     ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:     ggbApplet.registerObjectClickListener("bundle", "bundle");
  8    }

DIDwhiteboard • G3/PVC Addition.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("addButton", "organize");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  7:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  8  }

DIDwhiteboard • G3/PVC Decimals v3.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("x10Button", "multiply");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  7:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  8  }

DIDwhiteboard • G3/PVC Decimals.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("x10Button", "multiply");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  7:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  8  }

DIDwhiteboard • G3/PVC Multiply Two Region Final.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerClientListener("popul8");
  3:     ggbApplet.registerClientListener("unbundle");
  4:     ggbApplet.registerObjectClickListener("reset", "reset");
  5:     ggbApplet.registerObjectClickListener("bundleButton", "bundle");
  6:     ggbApplet.registerObjectUpdateListener("MultiplierDot", "multiplyIt");
  7  }

DIDwhiteboard • G3/PVC times ten.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("popul8Button", "popul8");
  3:   ggbApplet.registerObjectClickListener("reset", "reset");
  4:   ggbApplet.registerObjectClickListener("x10Button", "multiply");
  5:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  6:   ggbApplet.registerObjectClickListener("bundle", "bundle");
  7:   ggbApplet.registerObjectUpdateListener("time", "moveIt");
  8  }

DIDwhiteboard • G3/PVCFinal.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerClientListener("vacuumIt");
  3:     ggbApplet.registerObjectClickListener("dump", "dumpVac");
  4:     ggbApplet.registerObjectClickListener("multiply", "multiplyIt");
  5:     ggbApplet.registerObjectClickListener("reset", "resetAll");
  6:     ggbApplet.registerObjectUpdateListener("mult1", "resetAll");
  7:     ggbApplet.registerObjectUpdateListener("mult2", "resetAll");
  8  }

DIDwhiteboard • G3/PVCSubtJS.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerObjectClickListener("subtractReady", "popul8");
  3:     ggbApplet.registerClientListener("breakOut");
  4:     ggbApplet.registerObjectClickListener("reset", "reset");
  5:     ggbApplet.registerObjectClickListener("subtract", "matchIt");
  6:     ggbApplet.registerObjectUpdateListener("InputBox2", "reset");
  7:     ggbApplet.registerObjectUpdateListener("InputBox3", "reset");
  8  

DIDwhiteboard • G3/PVCVacuumJS.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerClientListener("vacuumIt");
  3:     ggbApplet.registerObjectClickListener("dump", "dumpVac");
  4  }

DIDwhiteboard • G3/PVCwithJS.js:
  1  function ggbOnInit() {
  2:     ggbApplet.registerObjectClickListener("button1", "multiplyIt");
  3:     ggbApplet.registerObjectClickListener("button2", "reset");
  4:     ggbApplet.registerClientListener("breakOut");
  5:     ggbApplet.registerClientListener("vacuumIt");
  6:     ggbApplet.registerObjectClickListener("dump", "dumpVac");
  7  }

DIDwhiteboard • G3/PVCWorld.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerClientListener("popul8");
  3:   ggbApplet.registerClientListener("unbundle");
  4:   ggbApplet.registerObjectClickListener("reset", "reset");
  5:   ggbApplet.registerObjectClickListener("bundleButton", "bundle");
  6:   ggbApplet.registerObjectUpdateListener("MultiplierDot", "multiplyIt");
  7:   ggbApplet.registerObjectUpdateListener("DivisorDot", "update");
  8:   ggbApplet.registerObjectClickListener("share", "divideIt");
  9  }

DIDwhiteboard • G4/G4 M1 TC L14 - Vertical Number Line Rounding.js:
  35  
  36: ggb1.instance.registerObjectUpdateListener("InputBox1", allCommas);
  37: ggb1.instance.registerObjectUpdateListener("E", allCommas);
  38  

DIDwhiteboard • G4/G4 M1 TD L16 - PVC Addition.js:
  44  
  45: ggb1.instance.registerObjectUpdateListener("time", moveIt);
  46  

DIDwhiteboard • G4/G4 M1 TD L18 - PVC Subtraction.js:
  53  
  54: ggb1.instance.registerClientListener(breakOut);
  55  

DIDwhiteboard • G4/G4 M2 TB L5 - PVC Multiplication.js:
  131  
  132: ggb1.instance.registerClientListener(breakOut);
  133  

DIDwhiteboard • G4/G4 M2 TC L14 - Distributing Pencils.js:
  2  
  3: ggb1.instance.registerClientListener(breakOut);
  4  ggb1.instance.setErrorDialogsActive(false);

DIDwhiteboard • G4/G4 M2 TC L15 - PVC Division.js:
  2  
  3: ggb1.instance.registerClientListener(breakOut);
  4  buttonGroup1.updateSingleButton({ disabled: true }, 1);

DIDwhiteboard • G4/G4 M2 TD L18 - Arranging Rectangle Side Lengths.js:
  21  
  22: ggb1.instance.registerObjectUpdateListener("time", playable);
  23  fib1.updateInput(0, { text: "7", type: "math" });

DIDwhiteboard • G4/G4 M5 TA L4 - Decimal PVC Tenths and Ones.js:
  3  //register listeners for moving points
  4: ggb1.instance.registerObjectUpdateListener("time", moveIt);
  5: ggb1.instance.registerObjectUpdateListener("untime", unMoveIt);
  6  

DIDwhiteboard • G4/G4 M5 TC L11 - Rube Goldberg Machine - Slide 1.js:
  1  const { ggb1, text1 } = components;
  2: ggb1.instance.registerClientListener(tilt);
  3  

DIDwhiteboard • G4/G4 M5 TC L11 - Rube Goldberg Machine - Slide 3.js:
  2  
  3: ggb3.instance.registerClientListener(weighOptions);
  4  ggb3.instance.evalCommand("hangHeavy=false");

DIDwhiteboard • G4/G4 M5 TC L11 - Rube Goldberg Machine - Slide 6.js:
  25  
  26: ggb6.instance.registerObjectUpdateListener("time", section1);
  27: ggb6.instance.registerObjectUpdateListener("time_2", section2);
  28: ggb6.instance.registerObjectUpdateListener("time_3", section3);
  29: ggb6.instance.registerObjectUpdateListener("δ", pass);
  30: // ggb6.instance.registerObjectUpdateListener("B_4", weighOptions);
  31: // ggb6.instance.registerObjectUpdateListener("C_4", weighOptions);
  32: ggb6.instance.registerObjectUpdateListener("Z_3", pew);
  33: ggb6.instance.registerObjectUpdateListener("R_4", thump);
  34: ggb6.instance.registerObjectUpdateListener("M_4", pew);
  35: ggb6.instance.registerObjectUpdateListener("J_4", pew);
  36: ggb6.instance.registerObjectUpdateListener("K_4", pew);
  37: ggb6.instance.registerObjectUpdateListener("L_4", pew);
  38: ggb6.instance.registerObjectUpdateListener("lean1", dominoes);
  39: ggb6.instance.registerObjectUpdateListener("lean2", dominoes2);
  40: ggb6.instance.registerObjectUpdateListener("lean3", dominoes3);
  41: ggb6.instance.registerObjectUpdateListener("lean4", kickoff);
  42: ggb6.instance.registerObjectUpdateListener("β", zoom);
  43: ggb6.instance.registerObjectUpdateListener("H_5", sooperDooper);
  44: ggb6.instance.registerObjectUpdateListener("γ", weeee);
  45: ggb6.instance.registerObjectUpdateListener("I_5", drop);
  46: ggb6.instance.registerObjectUpdateListener("U_5", boing);
  47: ggb6.instance.registerObjectUpdateListener("N_5", kaboom);
  48  

DIDwhiteboard • G4/G4 M6 TB L8 - Circles and Angles.js:
  17  
  18: ggb2.instance.registerObjectUpdateListener("β", updateLeft);
  19  let beta;

DIDwhiteboard • G4/G4M4 MAv1 Item 10 v3.js:
  14      if (click > 4) {
  15:         ggbApplet.unregisterClientListener("xMarksTheSpot");
  16      }

  41      xList = [];
  42:     ggbApplet.registerClientListener("xMarksTheSpot");
  43  }

DIDwhiteboard • G4/Line Plot.js:
  3  function ggbOnInit() {
  4:   ggbApplet.registerClientListener("xMarksTheSpot");
  5:   ggbApplet.registerObjectUpdateListener("Slider", "mischiefManaged");
  6    ggbcanvas.addEventListener("mouseup", deselect);

DIDwhiteboard • G4/RubeGoldberg Rebuild.js:
   6  function ggbOnInit() {
   7:   ggbApplet.registerObjectClickListener("button1", "rollBall");
   8:   ggbApplet.registerObjectClickListener("button2", "reset");
   9:   ggbApplet.registerObjectUpdateListener("time", "section1");
  10:   ggbApplet.registerObjectUpdateListener("time_2", "section2");
  11:   ggbApplet.registerObjectUpdateListener("time_3", "section3");
  12:   ggbApplet.registerObjectUpdateListener("D_1", "checkSpring");
  13:   ggbApplet.registerObjectUpdateListener("F_1", "checkSpring");
  14:   ggbApplet.registerObjectUpdateListener("G_1", "checkSpring");
  15:   ggbApplet.registerObjectUpdateListener("M", "tilt");
  16:   ggbApplet.registerObjectUpdateListener("K", "tilt");
  17:   ggbApplet.registerObjectUpdateListener("J_2", "pass");
  18:   ggbApplet.registerObjectUpdateListener("B_4", "weighOptions");
  19:   ggbApplet.registerObjectUpdateListener("C_4", "weighOptions");
  20:   ggbApplet.registerObjectUpdateListener("Z_3", "pew");
  21:   ggbApplet.registerObjectUpdateListener("R_4", "thump");
  22:   ggbApplet.registerObjectUpdateListener("M_4", "pew");
  23:   ggbApplet.registerObjectUpdateListener("J_4", "pew");
  24:   ggbApplet.registerObjectUpdateListener("K_4", "pew");
  25:   ggbApplet.registerObjectUpdateListener("L_4", "pew");
  26:   ggbApplet.registerObjectUpdateListener("lean1", "dominoes");
  27:   ggbApplet.registerObjectUpdateListener("lean2", "dominoes2");
  28:   ggbApplet.registerObjectUpdateListener("lean3", "dominoes3");
  29:   ggbApplet.registerObjectUpdateListener("lean4", "kickoff");
  30:   ggbApplet.registerObjectUpdateListener("β", "zoom");
  31:   ggbApplet.registerObjectUpdateListener("H_5", "sooperDooper");
  32:   ggbApplet.registerObjectUpdateListener("γ", "weeee");
  33:   ggbApplet.registerObjectUpdateListener("I_5", "drop");
  34:   ggbApplet.registerObjectUpdateListener("U_5", "boing");
  35:   ggbApplet.registerObjectUpdateListener("N_5", "kaboom");
  36  }

DIDwhiteboard • G4/RubeGoldberg Set Up 1.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectUpdateListener("M", "tilt");
  3:   ggbApplet.registerObjectUpdateListener("K", "tilt");
  4  }

DIDwhiteboard • G4/RubeGoldberg.js:
   1  function ggbOnInit() {
   2:   ggbApplet.registerObjectClickListener("button1", "rollBall");
   3:   ggbApplet.registerObjectClickListener("button2", "reset");
   4:   ggbApplet.registerObjectUpdateListener("time", "section1");
   5:   ggbApplet.registerObjectUpdateListener("time_2", "section2");
   6:   ggbApplet.registerObjectUpdateListener("time_3", "section3");
   7:   ggbApplet.registerObjectUpdateListener("D_1", "checkSpring");
   8:   ggbApplet.registerObjectUpdateListener("F_1", "checkSpring");
   9:   ggbApplet.registerObjectUpdateListener("G_1", "checkSpring");
  10:   ggbApplet.registerObjectUpdateListener("M", "tilt");
  11:   ggbApplet.registerObjectUpdateListener("K", "tilt");
  12:   ggbApplet.registerObjectUpdateListener("B_4", "weighOptions");
  13:   ggbApplet.registerObjectUpdateListener("C_4", "weighOptions");
  14:   ggbApplet.registerObjectUpdateListener("J_2", "pass");
  15  }

DIDwhiteboard • G4/SubtractionPVCG4.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectClickListener("subtract", "popul8");
  3:   ggbApplet.registerClientListener("breakOut");
  4:   ggbApplet.registerObjectClickListener("reset", "reset");
  5:   ggbApplet.registerObjectClickListener("button1", "matchIt");
  6:   ggbApplet.registerObjectUpdateListener("InputBox2", "popul8");
  7:   ggbApplet.registerObjectUpdateListener("InputBox3", "popul8");
  8  }

DIDwhiteboard • G4/WaterFactory v2.js:
  1  function ggbOnInit() {
  2:   ggbApplet.registerObjectUpdateListener("galBool", "start");
  3:   ggbApplet.registerObjectUpdateListener("quartBool", "start");
  4:   ggbApplet.registerObjectUpdateListener("pintBool", "start");
  5:   ggbApplet.registerObjectUpdateListener("conveyorTime", "pour");
  6:   ggbApplet.registerObjectUpdateListener("vesselH2OHeight", "moveOn");
  7:   ggbApplet.registerObjectClickListener("button1", "startOver");
  8  }

DIDwhiteboard • G4/WaterFactory.js:
   1  function ggbOnInit() {
   2:     ggbApplet.registerObjectUpdateListener("galBool", "start");
   3:     ggbApplet.registerObjectUpdateListener("quartBool", "start");
   4:     ggbApplet.registerObjectUpdateListener("pintBool", "start");
   5:     ggbApplet.registerObjectUpdateListener("conveyorTime", "pour");
   6:     ggbApplet.registerObjectUpdateListener("vesselH2OHeight", "moveOn");
   7:     ggbApplet.registerObjectUpdateListener("vesselH2OHeight2", "moveOn2");
   8:     ggbApplet.registerObjectUpdateListener("vesselH2OHeight3", "moveOn3");
   9:     ggbApplet.registerObjectUpdateListener("vesselH2OHeight4", "moveOn4");
  10:     ggbApplet.registerObjectClickListener("button1", "startOver");
  11  }

DIDwhiteboard • G4/G4 M3 TE L20 - Water Factory/G4 M3 TE L20 - Water Factory.js:
  1  const { ggb1, select1, buttonGroup1 } = components;
  2: ggb1.instance.registerObjectUpdateListener("galBool", start);
  3: ggb1.instance.registerObjectUpdateListener("quartBool", start);
  4: ggb1.instance.registerObjectUpdateListener("pintBool", start);
  5: ggb1.instance.registerObjectUpdateListener("conveyorTime", pour);
  6: ggb1.instance.registerObjectUpdateListener("vesselH2OHeight", moveOn);
  7  

DIDwhiteboard • G5/G5 M1 TD L17 - Tape Diagram Expressions.js:
  2  
  3: ggb1.instance.registerClientListener(spawn);
  4: ggb1.instance.registerObjectUpdateListener("D", reset);
  5: ggb1.instance.registerObjectUpdateListener("C", reset);
  6  

DIDwhiteboard • G5/G5 M2 TB L5 - Vertical Block Drop.js:
  6  
  7: ggb1.instance.registerClientListener(springBack);
  8  

DIDwhiteboard • G5/G5 M2 TD L15 - Line Plot Tool.js:
  2  
  3: ggb1.instance.registerClientListener(xMarksTheSpot);
  4: ggb1.instance.registerObjectUpdateListener("Slider", mischiefManaged);
  5  

DIDwhiteboard • G5/G5 M3 TD L20 - Comparative Relationships.js:
  1  const { ggb1 } = components;
  2: ggb1.instance.registerClientListener(controlSpacing);
  3  

DIDwhiteboard • G5/G5 M4 TA L8 - Rounding on Vertical Number Line.js:
  53  
  54: ggb1.instance.registerObjectUpdateListener("E", setTextValues);
  55  

DIDwhiteboard • G5/G5 M5 TA L4 - Geometry World Symmetry Explorer.js:
  11  })
  12: ggb1.instance.registerClientListener(fold);
  13  
  14:     ggb1.instance.registerObjectUpdateListener("A", deleteThem);
  15:     ggb1.instance.registerObjectUpdateListener("B", deleteThem);
  16:     ggb1.instance.registerObjectUpdateListener("C", deleteThem);
  17:     ggb1.instance.registerObjectUpdateListener("D", deleteThem);
  18  

DIDwhiteboard • G5/G5 M5 TA L4 - Symmetry Explorer Rhombus Emphasis.js:
  11  })
  12: ggb1.instance.registerClientListener(fold);
  13  
  14:     ggb1.instance.registerObjectUpdateListener("A", deleteThem);
  15:     ggb1.instance.registerObjectUpdateListener("B", deleteThem);
  16:     ggb1.instance.registerObjectUpdateListener("C", deleteThem);
  17:     ggb1.instance.registerObjectUpdateListener("D", deleteThem);
  18  

DIDwhiteboard • G5/G5 M5 TB L8 - Fractional Tiles.js:
   2  
   3: ggb1.instance.registerClientListener(spawn);
   4: ggb1.instance.registerObjectUpdateListener("Denom", makeDragger);
   5: ggb1.instance.registerObjectUpdateListener("D", reset);
   6  

  19  
  20: ggb2.instance.registerObjectUpdateListener("Denom", moveSlider);
  21  function moveSlider() {

DIDwhiteboard • G5/G5 M5 TC L19 - Volume with Layers.js:
  25  
  26: ggb1.instance.registerClientListener(homeView);
  27  

DIDwhiteboard • G6/M1/TA L04 - Exploring Ratios by Making Batches/slide-73a422614d1e.js:
  15  ggb2.instance.setErrorDialogsActive(false);
  16: ggb2.instance.registerObjectUpdateListener('totalAmount', update);
  17: ggb2.instance.registerObjectUpdateListener('totalBlue', update);
  18: ggb2.instance.registerObjectUpdateListener('totalPurp', update);
  19: ggb2.instance.registerObjectUpdateListener('extraBlue', update);
  20: ggb2.instance.registerObjectUpdateListener('extraPurple', update);
  21: ggb2.instance.registerObjectUpdateListener('time', update);
  22: ggb2.instance.registerObjectUpdateListener('blueTestNumber', update);
  23: ggb2.instance.registerObjectUpdateListener('purpTestNumber', update);
  24: ggb2.instance.registerObjectUpdateListener(
  25    'extraPurpleRhomBlackOutlineShown',

  27  );
  28: ggb2.instance.registerObjectUpdateListener('counter', update);
  29  

DIDwhiteboard • G6/M1/TA L04 - Exploring Ratios by Making Batches/slide-82c409cae606.js:
  5  ggb2.instance.setErrorDialogsActive(false);
  6: ggb2.instance.registerObjectUpdateListener('bluePaintToAdd', update);
  7: ggb2.instance.registerObjectUpdateListener('redPaintToAdd', update);
  8: ggb2.instance.registerObjectUpdateListener('blueTotal', update);
  9: ggb2.instance.registerObjectUpdateListener('time', update);
  10  

DIDwhiteboard • G6/M1/TA L04 - Exploring Ratios by Making Batches/slide-934c81c7905a.js:
  12  ggb1.instance.setErrorDialogsActive(false);
  13: ggb1.instance.registerObjectUpdateListener('numOfTiles', update);
  14: ggb1.instance.registerObjectUpdateListener('time', update);
  15  

DIDwhiteboard • G6/M1/TA L04 - Exploring Ratios by Making Batches/slide-dbbabd10eca9.js:
  11  ggb1.instance.setErrorDialogsActive(false);
  12: ggb1.instance.registerObjectUpdateListener('numOfTiles', update);
  13: ggb1.instance.registerObjectUpdateListener('time', update);
  14  

DIDwhiteboard • G6/M1/TA L04 - Exploring Ratios by Making Batches/slide-ed3177f3fd8a.js:
  5  ggb2.instance.setErrorDialogsActive(false);
  6: ggb1.instance.registerObjectUpdateListener('tapeNumbers', update);
  7  

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-31b2d67da206.js:
  11  ggb1.instance.setErrorDialogsActive(false);
  12: ggb1.instance.registerObjectUpdateListener('A', updateRight);
  13  

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-eb7da8aaf525.js:
   5  ggb1.instance.setAxisLabels(1, '$\\mathit{x}$', '$\\mathit{y}$');
   6: ggb2.instance.registerObjectUpdateListener('t1Num', update);
   7: ggb2.instance.registerObjectUpdateListener('b1Num', update);
   8: ggb2.instance.registerObjectUpdateListener('t2Num', update);
   9: ggb2.instance.registerObjectUpdateListener('b2Num', update);
  10: ggb2.instance.registerObjectUpdateListener('t3Num', update);
  11: ggb2.instance.registerObjectUpdateListener('b3Num', update);
  12: ggb2.instance.registerObjectUpdateListener('t4Num', update);
  13: ggb2.instance.registerObjectUpdateListener('b4Num', update);
  14: ggb2.instance.registerObjectUpdateListener('t5Num', update);
  15: ggb2.instance.registerObjectUpdateListener('b5Num', update);
  16  

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide3.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('count', update);
  5: ggb1.instance.registerObjectUpdateListener('tenTime', update);
  6: ggb1.instance.registerObjectUpdateListener('time', setBack);
  7  

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide6.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('count', update);
  5: ggb1.instance.registerObjectUpdateListener('twentyTime', update);
  6: ggb1.instance.registerObjectUpdateListener('time', setBack);
  7  

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide11.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('time1', update);
  5  

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide12.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("time1", update);
  5  

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide13.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('time1', update);
  5  

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide20.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('count', update);
  5: ggb1.instance.registerObjectUpdateListener('tenTime', update);
  6: ggb1.instance.registerObjectUpdateListener('time', setBack);
  7  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide3.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb1.instance.registerObjectUpdateListener('percent', update1);
  6: ggb2.instance.registerObjectUpdateListener('percent', update2);
  7  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide4.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb1.instance.registerObjectUpdateListener('percent', update1);
  6: ggb2.instance.registerObjectUpdateListener('percent', update2);
  7  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide5.js:
  13  ggb2.instance.setErrorDialogsActive(false);
  14: ggb2.instance.registerObjectUpdateListener('percent', update);
  15  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide6.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('percent', update);
  6  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide8.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('percent', update);
  6  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide11.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('quarterCount', updateQuarter);
  5: ggb1.instance.registerObjectUpdateListener('dimeCount', updateDime);
  6: ggb1.instance.registerObjectUpdateListener('nickelCount', updateNickel);
  7: ggb1.instance.registerObjectUpdateListener('pennyCount', updatePenny);
  8  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide12.js:
  12  ggb1.instance.setErrorDialogsActive(false);
  13: ggb1.instance.registerObjectUpdateListener('numberOfPennies', update);
  14  

DIDwhiteboard • G6/M1/TE L22 - Introduction to Percents/slide13.js:
  12  ggb1.instance.setErrorDialogsActive(false);
  13: ggb1.instance.registerObjectUpdateListener('numberOfPennies', update);
  14  

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide1.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('enableButton', buttonWork);
  5  

DIDwhiteboard • G6/M2/TB L08 - Demo - Dividing Fractions by Making Common Denominators/slide1.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('enableButton', buttonWork);
  11  

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide9.js:
  19  ggb1.instance.setErrorDialogsActive(false);
  20: ggb2.instance.registerObjectUpdateListener('sliderVal', unsubmit);
  21  

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide10.js:
  20  ggb1.instance.setErrorDialogsActive(false);
  21: ggb1.instance.registerObjectUpdateListener('time2', updateRight);
  22: ggb2.instance.registerObjectUpdateListener('sliderVal', unsubmit);
  23  

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide11.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('T', updateRight);
  5  

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide3Orig.js:
  156  
  157: // ggb1.instance.registerObjectUpdateListener("time", updateRight);
  158: // ggb1.instance.registerObjectUpdateListener("time2", updateRight);
  159  

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide8Orig.js:
  913    }
  914:   ggb1.instance.registerStoreUndoListener(snap);
  915    function snap() {

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide10Orig.js:
  125  
  126: ggb1.instance.registerObjectUpdateListener('time2', updateRight);
  127  

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide11Orig.js:
  125  
  126: ggb1.instance.registerObjectUpdateListener('time2', updateRight);
  127  

DIDwhiteboard • G6/M2/TD L14 - Patterns in Multiplying Decimals/slide5.js:
   9  ggb1.instance.setErrorDialogsActive(false);
  10: ggb1.instance.registerObjectUpdateListener('lengthSliderPoint', update);
  11: ggb1.instance.registerObjectUpdateListener('widthSliderPoint', update);
  12  

DIDwhiteboard • G6/M2/TD L14 - Patterns in Multiplying Decimals/slide6.js:
   9  ggb1.instance.setErrorDialogsActive(false);
  10: ggb1.instance.registerObjectUpdateListener('lengthSliderPoint', update);
  11: ggb1.instance.registerObjectUpdateListener('widthSliderPoint', update);
  12  

DIDwhiteboard • G6/M2/TE L17 -Parital Quotients/slide2.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('enableButton', buttonWork);
  5: ggb1.instance.registerStoreUndoListener(snap);
  6  

DIDwhiteboard • G6/M2/TE L17 -Parital Quotients/slide10.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('fraction', updateRight);
  5  

DIDwhiteboard • G6/M3/TA L02 - Integers/slide6.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('xSliderPoint', update);
  5: ggb1.instance.registerObjectUpdateListener('time', updateRight);
  6  

DIDwhiteboard • G6/M3/TA L02 - Integers/slide7.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('xSliderPoint', update);
  5: ggb1.instance.registerObjectUpdateListener('time', updateRight);
  6  

DIDwhiteboard • G6/M3/TA L02 - Integers/slide15.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('textA', update);
  5: ggb1.instance.registerObjectUpdateListener('textB', update);
  6  

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide6.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('val1', update);
  5: ggb1.instance.registerObjectUpdateListener('val2', update2);
  6  

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide1.js:
  23    button1.updateData({ text: "Submitted", disabled: true });
  24:   ggb1.instance.registerUpdateListener(update);
  25  });

  28    button1.updateData({ text: "Submit", disabled: false });
  29:   ggb1.instance.unregisterUpdateListener(update);
  30  }

  36  
  37: ggb1.instance.registerStoreUndoListener(() => {
  38    ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide3.js:
  43  
  44: ggb1.instance.registerStoreUndoListener(() => {
  45    ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide8.js:
  10  ggb1.instance.setErrorDialogsActive(false);
  11: ggb1.instance.registerObjectUpdateListener('inRegC', update);
  12  

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide9.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('BIG', update);
  5  

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide11.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('BIG', update);
  5  

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide13.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('BIG', update);
  5  

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide15.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('BIG', update);
  5  

DIDwhiteboard • G6/M3/TC L13 - Demo/slide1.js:
  5  
  6: ggb2.instance.registerObjectUpdateListener('winXVal', changeX);
  7: ggb2.instance.registerObjectUpdateListener('winYVal', changeY);
  8  

DIDwhiteboard • G6/M3/TD L15 - Distance in the Coordinate Plane/slide4.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('length', updateRight);
  6  

DIDwhiteboard • G6/M3/TD L15 - Distance in the Coordinate Plane/slide5.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('length', updateRight);
  6: ggb1.instance.registerObjectUpdateListener('C', update);
  7: ggb1.instance.registerObjectUpdateListener('D', update);
  8: ggb1.instance.registerObjectUpdateListener('A', update);
  9: ggb1.instance.registerObjectUpdateListener('B', update);
  10  

DIDwhiteboard • G6/M3/TD L15 - Distance in the Coordinate Plane/slide10.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('length', updateRight);
  6: ggb1.instance.registerObjectUpdateListener('C', update);
  7: ggb1.instance.registerObjectUpdateListener('D', update);
  8: ggb1.instance.registerObjectUpdateListener('A', update);
  9: ggb1.instance.registerObjectUpdateListener('B', update);
  10  

DIDwhiteboard • G6/M4/TA L03 - Exploring Exponents/slide10.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('DragPoint3', updateRight);
  6: ggb2.instance.registerObjectUpdateListener('DragPoint4', updateRight);
  7: ggb2.instance.registerObjectUpdateListener('DragPoint6', updateRight);
  8: ggb1.instance.registerObjectUpdateListener('showButton3', updateButton);
  9  

DIDwhiteboard • G6/M4/TB L11 - Modeling Real-World Situations with Expressions/slide1.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('distance', update);
  5: ggb1.instance.registerObjectUpdateListener('cost', update);
  6: ggb1.instance.registerObjectUpdateListener('time', update);
  7: ggb1.instance.registerObjectUpdateListener('timeStop', update);
  8  

DIDwhiteboard • G6/M4/TB L11 - Modeling Real-World Situations with Expressions/slide2.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("time", updateStop);
  5  

DIDwhiteboard • G6/M4/TB L11 - Modeling Real-World Situations with Expressions/slide4.js:
  24  ggb1.instance.setErrorDialogsActive(false);
  25: ggb1.instance.registerObjectUpdateListener('time', update);
  26  

DIDwhiteboard • G6/M4/TB L11 - Modeling Real-World Situations with Expressions/slide9.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('show', buttonWork);
  5  

DIDwhiteboard • G6/M4/TB L11 - Modeling Real-World Situations with Expressions/slide10.js:
  10  ggb1.instance.setErrorDialogsActive(false);
  11: ggb1.instance.registerObjectUpdateListener('show', buttonWork);
  12  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide1.js:
  25  
  26: ggb1.instance.registerObjectUpdateListener("gallons", update);
  27: ggb1.instance.registerObjectUpdateListener("cost1", update);
  28  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide2.js:
  114  
  115: ggb2.instance.registerObjectUpdateListener("cost", update);
  116: ggb2.instance.registerObjectUpdateListener("cost2", update);
  117  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide6.js:
  19  ggb1.instance.setAxisLabels(1, "$\\mathit{n}$", "$\\mathit{t}$");
  20: ggb1.instance.registerObjectUpdateListener("D", update);
  21  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide7.js:
  13  
  14: ggb2.instance.registerObjectUpdateListener("ratio", updateRight);
  15  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide9.js:
  98  
  99: ggb1.instance.registerObjectUpdateListener("J", updateRight);
  100  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide10.js:
  109  
  110: ggb1.instance.registerObjectUpdateListener("J", updateRight);
  111  

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide11.js:
  40  
  41: ggb1.instance.registerObjectUpdateListener("Point5", updateRight);
  42  

DIDwhiteboard • G6/M5/TA L01 - The Area of a Parallelogram/slide1.js:
  19  button1.on("click", () => {
  20:   ggb1.instance.registerUpdateListener(update);
  21    button1.updateData({ text: "Submitted", disabled: true });

  29    button1.updateData({ text: "Submit", disabled: false });
  30:   ggb1.instance.unregisterUpdateListener(update);
  31  }

DIDwhiteboard • G6/M5/TA L01 - The Area of a Parallelogram/slide2.js:
  18  
  19: ggb1.instance.registerStoreUndoListener(() => {
  20    ggb1.updateData({ save64: ggb1.instance.getBase64() });

  24    button1.updateData({ text: "Submitted", disabled: true });
  25:   ggb1.instance.registerUpdateListener(update);
  26    button2.updateData({ visible: true });

  34    button1.updateData({ text: "Submit", disabled: false });
  35:   ggb1.instance.unregisterUpdateListener(update);
  36  }

DIDwhiteboard • G6/M5/TA L01 - The Area of a Parallelogram/slide4.js:
  37  
  38: ggb1.instance.registerStoreUndoListener(() => {
  39    ggb1.updateData({ save64: ggb1.instance.getBase64() });

  41  
  42: /*ggb1.instance.registerObjectUpdateListener("Follow", updateRight);
  43    

DIDwhiteboard • G6/M5/TA L01 - The Area of a Parallelogram/slide8.js:
  45  
  46: ggb1.instance.registerObjectUpdateListener("Slide", updateRight);
  47  

DIDwhiteboard • G6/M5/TA L01 - The Area of a Parallelogram/slide10.js:
  6  
  7: ggb1.instance.registerObjectUpdateListener("B", update);
  8: ggb1.instance.registerObjectUpdateListener("C", update);
  9  

DIDwhiteboard • G6/M5/TA L01 - The Area of a Parallelogram/slide11.js:
  6  
  7: ggb1.instance.registerObjectUpdateListener("B", update);
  8: ggb1.instance.registerObjectUpdateListener("C", update);
  9  

DIDwhiteboard • G6/M5/TC L09 - Properties of Solids/slide2.js:
  23  button1.on('click', () => {
  24:   ggb1.instance.registerClientListener(update);
  25    button2.updateData({ visible: true });

  33    button1.updateData({ text: 'Submit', disabled: false });
  34:   ggb1.instance.unregisterClientListener(update);
  35  }

DIDwhiteboard • G6/M5/TC L09 - Properties of Solids/slide3.js:
  4  button2.updateData({ disabled: true });
  5: ggb2.instance.registerObjectUpdateListener('number', updateRight);
  6  

DIDwhiteboard • G6/M5/TC L09 - Properties of Solids/slide4.js:
  18  button2.updateData({ disabled: true });
  19: ggb2.instance.registerObjectUpdateListener('number', updateRight);
  20  

DIDwhiteboard • G6/M5/TC L09 - Properties of Solids/slide5.js:
  18  button2.updateData({ disabled: true });
  19: ggb2.instance.registerObjectUpdateListener('number', updateRight);
  20  

DIDwhiteboard • G6/M5/TC L09 - Properties of Solids/slide6.js:
  27  
  28: ggb1.instance.registerObjectUpdateListener('C', updateRight);
  29: ggb1.instance.registerObjectUpdateListener('F', updateRight);
  30: ggb1.instance.registerObjectUpdateListener('I', updateRight);
  31  

  68    );
  69:   ggb1.instance.registerObjectUpdateListener('C', updateRight);
  70:   ggb1.instance.registerObjectUpdateListener('F', updateRight);
  71:   ggb1.instance.registerObjectUpdateListener('I', updateRight);
  72    ggb2.instance.setVisible('C', false);

DIDwhiteboard • G6/M5/TC L09 - Properties of Solids/slide8.js:
  17      buttonGroup1.updateSingleButton({ disabled: true }, 1);
  18:     ggb2.instance.registerObjectUpdateListener('number', updateRight);
  19      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide1.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('height', update);
  11: ggb1.instance.registerObjectUpdateListener('leng', update);
  12: ggb1.instance.registerObjectUpdateListener('width', update);
  13: ggb1.instance.registerObjectUpdateListener('time', update);
  14: ggb1.instance.registerObjectUpdateListener('B', update);
  15: ggb1.instance.registerObjectUpdateListener('D', update);
  16  

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide3.js:
  52  
  53: ggb1.instance.registerObjectUpdateListener('time3', time);
  54  

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide6.js:
  29  
  30: ggb1.instance.registerObjectUpdateListener("time3", update);
  31: ggb1.instance.registerObjectUpdateListener("count", update);
  32  

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide7.js:
  59  
  60: ggb1.instance.registerObjectUpdateListener("time3", time);
  61  

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide8.js:
  47  
  48: ggb1.instance.registerObjectUpdateListener("time3", time);
  49: ggb1.instance.registerObjectUpdateListener("height", time);
  50  

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide9.js:
  91  
  92: ggb1.instance.registerObjectUpdateListener("time3", time);
  93  

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide10.js:
  48  
  49: ggb1.instance.registerObjectUpdateListener("time3", time);
  50  

DIDwhiteboard • G6/M6/TD L20 - Choosing a Measure of Center/slide-79b74f58c047.js:
  22  
  23: ggb1.instance.registerObjectUpdateListener('show', reveal);
  24  

DIDwhiteboard • G6/M6/TD L20 - Choosing a Measure of Center/slide-c4393d6ad27a.js:
  20  
  21: ggb1.instance.registerObjectUpdateListener('time', startTime2);
  22: ggb1.instance.registerObjectUpdateListener('time2', startTime3);
  23: ggb1.instance.registerObjectUpdateListener('time3', startTime4);
  24: ggb1.instance.registerObjectUpdateListener('time4', startBreak);
  25: ggb1.instance.registerObjectUpdateListener('animationDone', enableButton);
  26  

DIDwhiteboard • G7/M1/TB L09 - Comparing Proportional Relationships/slide13.js:
  30  
  31: ggb1.instance.registerObjectUpdateListener("B", update);
  32  

DIDwhiteboard • G7/M1/TB L09 - Comparing Proportional Relationships/slide15.js:
  30  
  31: ggb1.instance.registerObjectUpdateListener("B", update);
  32  

DIDwhiteboard • G7/M1/TB L09 - Comparing Proportional Relationships/slide17.js:
  30  
  31: ggb1.instance.registerObjectUpdateListener("B", update);
  32  

DIDwhiteboard • G7/M1/TB L09 - Comparing Proportional Relationships/slide22.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener("A", update);
  11  

DIDwhiteboard • G7/M2/TA L02 - Adding Integers/slide26.js:
  17  
  18: ggb1.instance.registerObjectUpdateListener('showPrevious', buttonWork);
  19  

DIDwhiteboard • G7/M2/TB L09 - Demo - Subtracting Negative Values/slide1.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('time', updateText);
  5  

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide6.js:
  12  
  13: ggb1.instance.registerStoreUndoListener(getDoodles);
  14  getDoodles();

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide14.js:
  13  
  14: ggb1.instance.registerStoreUndoListener(getDoodles);
  15  getDoodles();

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide3.js:
  42  
  43: ggb1.instance.registerObjectUpdateListener("WL1", update);
  44: ggb1.instance.registerObjectUpdateListener("WL2", update);
  45: ggb1.instance.registerObjectUpdateListener("WL3", update);
  46: ggb1.instance.registerObjectUpdateListener("WL4", update);
  47: ggb1.instance.registerObjectUpdateListener("WL5", update);
  48: ggb1.instance.registerObjectUpdateListener("CL1", update);
  49: ggb1.instance.registerObjectUpdateListener("CL2", update);
  50: ggb1.instance.registerObjectUpdateListener("CL3", update);
  51: ggb1.instance.registerObjectUpdateListener("CL4", update);
  52: ggb1.instance.registerObjectUpdateListener("CL5", update);
  53: ggb1.instance.registerObjectUpdateListener("TL1", update);
  54: ggb1.instance.registerObjectUpdateListener("TL2", update);
  55: ggb1.instance.registerObjectUpdateListener("TL3", update);
  56: ggb1.instance.registerObjectUpdateListener("TL4", update);
  57: ggb1.instance.registerObjectUpdateListener("TL5", update);
  58  

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide10.js:
  23  
  24: ggb1.instance.registerObjectUpdateListener('time', update);
  25  

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide11.js:
  24  }
  25: ggb1.instance.registerObjectUpdateListener("emptyInt1", update);
  26: ggb1.instance.registerObjectUpdateListener("emptyInt2", update);
  27: ggb1.instance.registerObjectUpdateListener("emptyL1", update);
  28: ggb1.instance.registerObjectUpdateListener("emptyT1", update);
  29: ggb1.instance.registerObjectUpdateListener("emptyT2", update);
  30  
  31: ggb1.instance.registerObjectUpdateListener("TL5", update);
  32  

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide13.js:
  24  }
  25: ggb1.instance.registerObjectUpdateListener("emptyInt1", update);
  26: ggb1.instance.registerObjectUpdateListener("emptyInt2", update);
  27: ggb1.instance.registerObjectUpdateListener("emptyL1", update);
  28: ggb1.instance.registerObjectUpdateListener("emptyT1", update);
  29: ggb1.instance.registerObjectUpdateListener("emptyT2", update);
  30  

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide16.js:
  24  }
  25: ggb1.instance.registerObjectUpdateListener("emptyInt1", update);
  26: ggb1.instance.registerObjectUpdateListener("emptyInt2", update);
  27: ggb1.instance.registerObjectUpdateListener("emptyL1", update);
  28: ggb1.instance.registerObjectUpdateListener("emptyT1", update);
  29: ggb1.instance.registerObjectUpdateListener("emptyT2", update);
  30  

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide18.js:
  24  }
  25: ggb1.instance.registerObjectUpdateListener("emptyInt1", update);
  26: ggb1.instance.registerObjectUpdateListener("emptyInt2", update);
  27: ggb1.instance.registerObjectUpdateListener("emptyL1", update);
  28: ggb1.instance.registerObjectUpdateListener("emptyT1", update);
  29: ggb1.instance.registerObjectUpdateListener("emptyT2", update);
  30  

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide20.js:
  24  }
  25: ggb1.instance.registerObjectUpdateListener("emptyInt1", update);
  26: ggb1.instance.registerObjectUpdateListener("emptyInt2", update);
  27: ggb1.instance.registerObjectUpdateListener("emptyL1", update);
  28: ggb1.instance.registerObjectUpdateListener("emptyT1", update);
  29: ggb1.instance.registerObjectUpdateListener("emptyT2", update);
  30  

DIDwhiteboard • G7/M3/TB L08 - Strategies to Determine Unknown Angle Measures/slide4.js:
   52  
   53: ggb1.instance.registerObjectUpdateListener('β', updateRight);
   54: ggb1.instance.registerObjectUpdateListener('locked', updateRight);
   55: ggb1.instance.registerObjectUpdateListener('showBracket', updateRight);
   56: ggb2.instance.registerObjectUpdateListener('set', updateRight);
   57  

   91  
   92: ggb2.instance.registerObjectUpdateListener('C1', update);
   93: ggb2.instance.registerObjectUpdateListener('C2', update);
   94: ggb2.instance.registerObjectUpdateListener('C3', update);
   95: ggb2.instance.registerObjectUpdateListener('C4', update);
   96: ggb2.instance.registerObjectUpdateListener('C5', update);
   97: ggb2.instance.registerObjectUpdateListener('W1', update);
   98: ggb2.instance.registerObjectUpdateListener('W2', update);
   99: ggb2.instance.registerObjectUpdateListener('W3', update);
  100: ggb2.instance.registerObjectUpdateListener('W4', update);
  101: ggb2.instance.registerObjectUpdateListener('W5', update);
  102  

DIDwhiteboard • G7/M3/TB L08 - Strategies to Determine Unknown Angle Measures/slide9.js:
   23  
   24: ggb1.instance.registerObjectUpdateListener('β', update);
   25  

  166  
  167: ggb1.instance.registerObjectUpdateListener('A', move);
  168  function move() {

DIDwhiteboard • G7/M3/TB L08 - Strategies to Determine Unknown Angle Measures/slide11.js:
   66  
   67: ggb1.instance.registerObjectUpdateListener('β', updateRight);
   68: ggb1.instance.registerObjectUpdateListener('locked', updateRight);
   69: ggb1.instance.registerObjectUpdateListener('showBracket', updateRight);
   70: ggb2.instance.registerObjectUpdateListener('set', updateRight);
   71  

  105  
  106: ggb2.instance.registerObjectUpdateListener('C1', update);
  107: ggb2.instance.registerObjectUpdateListener('C2', update);
  108: ggb2.instance.registerObjectUpdateListener('C3', update);
  109: ggb2.instance.registerObjectUpdateListener('C4', update);
  110: ggb2.instance.registerObjectUpdateListener('C5', update);
  111: ggb2.instance.registerObjectUpdateListener('W1', update);
  112: ggb2.instance.registerObjectUpdateListener('W2', update);
  113: ggb2.instance.registerObjectUpdateListener('W3', update);
  114: ggb2.instance.registerObjectUpdateListener('W4', update);
  115: ggb2.instance.registerObjectUpdateListener('W5', update);
  116  

DIDwhiteboard • G7/M3/TB L08 - Strategies to Determine Unknown Angle Measures/slide16.js:
  138  
  139: /*ggb1.instance.registerObjectUpdateListener("β", update);
  140  

  143  };*/
  144: ggb1.instance.registerObjectUpdateListener('A', move);
  145  function move() {

DIDwhiteboard • G7/M3/TB L08 - Strategies to Determine Unknown Angle Measures/slide18.js:
  45  });
  46: ggb2.instance.registerObjectUpdateListener('C1', update);
  47: ggb2.instance.registerObjectUpdateListener('C2', update);
  48: ggb2.instance.registerObjectUpdateListener('C3', update);
  49: ggb2.instance.registerObjectUpdateListener('C4', update);
  50: ggb2.instance.registerObjectUpdateListener('C5', update);
  51: ggb2.instance.registerObjectUpdateListener('W1', update);
  52: ggb2.instance.registerObjectUpdateListener('W2', update);
  53: ggb2.instance.registerObjectUpdateListener('W3', update);
  54: ggb2.instance.registerObjectUpdateListener('W4', update);
  55: ggb2.instance.registerObjectUpdateListener('W5', update);
  56  

DIDwhiteboard • G7/M3/TB L08 - Strategies to Determine Unknown Angle Measures/slide23.js:
  180  
  181: ggb1.instance.registerObjectUpdateListener('Y', move);
  182  

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide1 PA.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("timePump", keepGoing);
  5  

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide14.js:
   6  
   7: ggb14.instance.registerStoreUndoListener(() => {
   8    ggb14.updateData({ save64: ggb14.instance.getBase64() });
   9  });
  10: ggb15.instance.registerStoreUndoListener(() => {
  11    ggb15.updateData({ save64: ggb15.instance.getBase64() });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide1.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide3.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide4.js:
  11  
  12: ggb1.instance.registerAddListener(adds);
  13  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide6.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide7.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide9.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide10.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  
  13: ggb1.instance.registerObjectUpdateListener("madeOne", () => {
  14    //autorun(() => {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide11.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  
  13: ggb1.instance.registerObjectUpdateListener("madeOne", () => {
  14    //autorun(() => {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide13.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide14.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide16.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide18.js:
  11  
  12: ggb1.instance.registerAddListener(adds);
  13  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide20.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide21.js:
  11  
  12: ggb1.instance.registerAddListener(adds);
  13  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide23.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide24.js:
  11  
  12: ggb1.instance.registerAddListener(adds);
  13  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide26.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide27.js:
  26  
  27: ggb1.instance.registerAddListener(adds);
  28  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide28.js:
  26  
  27: ggb1.instance.registerAddListener(adds);
  28  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide29.js:
  25  
  26: ggb1.instance.registerAddListener(adds);
  27  

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide30.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide31.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide32.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide1.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide3.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide4.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide6.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide7.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide9.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide11.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide13.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide14.js:
  10  
  11: ggb1.instance.registerAddListener(adds);
  12  

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide16.js:
  14  
  15: ggb1.instance.registerAddListener((a) => {
  16    switch (ggb1.instance.getObjectType(a)) {

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide2.js:
  25  
  26: ggb1.instance.registerStoreUndoListener(() => {
  27    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide3.js:
  39  
  40: ggb1.instance.registerStoreUndoListener(() => {
  41    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide7.js:
  37  
  38: ggb1.instance.registerStoreUndoListener(() => {
  39    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide8.js:
  49  
  50: ggb1.instance.registerStoreUndoListener(() => {
  51    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide11.js:
  37  
  38: ggb1.instance.registerStoreUndoListener(() => {
  39    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide1.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide2.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide3.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9: ggb1.instance.registerClientListener(testFunction);
  10  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide5.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9: ggb1.instance.registerClientListener(testFunction);
  10  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide7.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide8.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide9.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide10.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide11.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide12.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide13.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide14.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide15.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide16.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide17.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide19.js:
   4  ggb2.instance.setErrorDialogsActive(false);
   5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
   6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
   7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
   8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
   9: ggb2.instance.registerObjectUpdateListener('numOfSides', updateGGB1);
  10: ggb2.instance.registerObjectUpdateListener('height', updateGGB1);
  11: ggb2.instance.registerObjectUpdateListener('radius', updateGGB1);
  12  

DIDwhiteboard • G7/M5/TD L19 - Applying Percent Error/slide4.js:
  201  
  202: ggb1.instance.registerObjectUpdateListener("count", update);
  203: ggb1.instance.registerObjectUpdateListener("time", update);
  204  

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide2.js:
  4  
  5: ggb1.instance.registerStoreUndoListener(() => {
  6    ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide18.js:
  8  
  9: ggb1.instance.registerStoreUndoListener(() => {
  10    ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • G7/M6/TA L03 - Outcomes of Chance Experiments/Slide 6.js:
  45  
  46: ggb1.instance.registerClickListener(applet64);
  47  function applet64(a) {

  83  
  84: //ggb1.instance.registerStoreUndoListener(snap);
  85  

DIDwhiteboard • G7/M6/TA L03 - Outcomes of Chance Experiments/Slide 10.js:
  17  
  18: ggb1.instance.registerObjectUpdateListener("rightSideUpCount", rightSideUp);
  19  

  24  
  25: ggb1.instance.registerObjectUpdateListener("upsideDownCount", upsideDown);
  26  

  31  
  32: ggb1.instance.registerObjectUpdateListener("sideCount", side);
  33  

  38  
  39: ggb1.instance.registerObjectUpdateListener("totalCount", update);
  40  

DIDwhiteboard • G7/M6/TB L07 - Relative Frequency Graph (Demo)/slide1.js:
  53  
  54: ggb1.instance.registerObjectUpdateListener('show', buttonWork);
  55  

  63  
  64: ggb1.instance.registerObjectUpdateListener('count', updateRight);
  65  

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 5.js:
  70  
  71: ggb1.instance.registerObjectUpdateListener("count", updateRight);
  72  

  98  
  99: ggb2.instance.registerStoreUndoListener(snap);
  100  

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 7.js:
  70  
  71: ggb1.instance.registerObjectUpdateListener("count", updateRight);
  72  

  98  
  99: ggb2.instance.registerStoreUndoListener(snap);
  100  

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 10.js:
  91  
  92: ggb1.instance.registerObjectUpdateListener("gamesPlayed", update);
  93  

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 13.js:
  32  
  33: ggb1.instance.registerObjectUpdateListener("blueCount", addBlue);
  34  

  40  
  41: ggb1.instance.registerObjectUpdateListener("redCount", addRed);
  42  

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 14.js:
   98  
   99: ggb1.instance.registerObjectUpdateListener("blueCount", clearOut);
  100  

  123  
  124: ggb1.instance.registerObjectUpdateListener("count", updateRight);
  125  

DIDwhiteboard • G7/M6/TD L19 - Memory Games/Slide 2.js:
  16  
  17: ggb1.instance.registerObjectUpdateListener("load", promptSet);
  18  

  47  
  48: ggb1.instance.registerObjectUpdateListener("count", updateOne);
  49  

  57  
  58: ggb1.instance.registerObjectUpdateListener("finalCountTen", updateTen);
  59  

  67  
  68: ggb1.instance.registerObjectUpdateListener("finalCountTwenty", updateTwenty);
  69  

DIDwhiteboard • G7/M6/TD L19 - Memory Games/Slide 7.js:
  56  
  57: ggb1.instance.registerObjectUpdateListener("mean10SecData", tableVals);
  58: ggb1.instance.registerObjectUpdateListener("mean20SecData", tableVals);
  59: ggb1.instance.registerObjectUpdateListener("mad10SecData", tableVals);
  60: ggb1.instance.registerObjectUpdateListener("mad20SecData", tableVals);
  61  

DIDwhiteboard • G8/M1/TA L01 - Large and Small Positive Numbers/slide1.js:
  15  
  16: ggb2.instance.registerObjectUpdateListener("selPower", playIt);
  17  

DIDwhiteboard • G8/M1/TC L11 - Small Positive Numbers in Scientific Notation/slide1.js:
  15  
  16: ggb2.instance.registerObjectUpdateListener("selPower", playIt);
  17  

DIDwhiteboard • G8/M1/TD L16 - Demo - Perfect Squares and Perfect Cubes/slide1.js:
   2  
   3: ggb2.instance.registerObjectUpdateListener('baseLength', updateGGB1);
   4  

   8  
   9: ggb2.instance.registerObjectUpdateListener('blockNum', updateGGB1Again);
  10  

  14  
  15: ggb1.instance.registerObjectUpdateListener('cap', updateGGB2);
  16  

DIDwhiteboard • G8/M1/TD L16 - Demo - Perfect Squares and Perfect Cubes/slide2.js:
  2  
  3: ggb2.instance.registerObjectUpdateListener('tileNum', updateGGB1);
  4  

  8  
  9: ggb1.instance.registerObjectUpdateListener('maxTile', updateGGB2);
  10  

DIDwhiteboard • G8/M1/TE L21 - Approximate Values of Roots and π²/slide13.js:
  31  
  32: ggb1.instance.registerObjectUpdateListener("Dragger", () => {
  33    if (ggb1.instance.getValue("trailEnd")) {

  37      ggb1.instance.setValue("showHint", false);
  38:     ggb1.instance.unregisterObjectUpdateListener("Dragger");
  39    }

DIDwhiteboard • G8/M2/TA L04 - Translations and Reflections on the Coordinate Plane/slide6.js:
  54  
  55: ggb1.instance.registerObjectUpdateListener('allMoved', buttonWork);
  56  

DIDwhiteboard • G8/M2/TA L04 - Translations and Reflections on the Coordinate Plane/slide11.js:
  45  
  46: ggb1.instance.registerObjectUpdateListener('allMoved', buttonWork);
  47  

DIDwhiteboard • G8/M2/TA L04 - Translations and Reflections on the Coordinate Plane/slide14.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time2', tableWork);
  12  

  46  
  47: ggb1.instance.registerObjectUpdateListener('animatedVerticalDistance', update);
  48: ggb1.instance.registerObjectUpdateListener(
  49    'animatedHorizontalDistance',

DIDwhiteboard • G8/M2/TA L04 - Translations and Reflections on the Coordinate Plane/slide15.js:
  47  
  48: ggb1.instance.registerObjectUpdateListener('allMoved', buttonWork);
  49  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide2.js:
  18  
  19: ggb1.instance.registerClientListener(enablecheck);
  20  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide3.js:
  18  
  19: ggb1.instance.registerClientListener(enablecheck);
  20  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide4.js:
   24  
   25: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
   26  

  126  
  127: ggb1.instance.registerObjectUpdateListener("flag",tableupdate);
  128  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide5.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
  13  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide6.js:
  34  
  35: ggb1.instance.registerObjectUpdateListener("flag", tableupdate);
  36  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide7.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
  11  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide8.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
  11  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide9.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
  11  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide10.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
  11  

DIDwhiteboard • G8/M2/TB L08 - Sequencing The Rigid Motions/slide11.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('flag', tableupdate);
  11  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide1.js:
  61  });
  62: ggb1.instance.registerObjectUpdateListener("A", updateRight);
  63: ggb1.instance.registerObjectUpdateListener("C", updateRight);
  64: ggb1.instance.registerObjectUpdateListener("B", updateRight);
  65  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide2.js:
  22  
  23: ggb1.instance.registerObjectUpdateListener('time', update);
  24  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide3.js:
  23  
  24: ggb1.instance.registerObjectUpdateListener('timeTran', update);
  25: ggb1.instance.registerObjectUpdateListener('A', update);
  26: ggb1.instance.registerObjectUpdateListener('B', update);
  27: ggb1.instance.registerObjectUpdateListener('C', update);
  28  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide4.js:
  25  
  26: ggb1.instance.registerObjectUpdateListener('A', update);
  27: ggb1.instance.registerObjectUpdateListener('B', update);
  28: ggb1.instance.registerObjectUpdateListener('C', update);
  29: ggb1.instance.registerObjectUpdateListener('timeExpand', update);
  30  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide5.js:
  23  
  24: ggb1.instance.registerObjectUpdateListener('A', update);
  25: ggb1.instance.registerObjectUpdateListener('B', update);
  26: ggb1.instance.registerObjectUpdateListener('C', update);
  27: ggb1.instance.registerObjectUpdateListener('timeSweep3', update);
  28  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide7.js:
  11  
  12: // ggb1.instance.registerStoreUndoListener(() => {
  13  //   ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide10.js:
  21  }
  22: ggb1.instance.registerObjectUpdateListener('time', update);
  23  

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide11.js:
  29  
  30: ggb1.instance.registerObjectUpdateListener('time', getTime);
  31  function getTime() {

DIDwhiteboard • G8/M2/TC L13 - Angle Sum of a Triangle/slide12.js:
  75  
  76: ggb1.instance.registerObjectUpdateListener('A', updateRight);
  77: ggb1.instance.registerObjectUpdateListener('C', updateRight);
  78: ggb1.instance.registerObjectUpdateListener('B', updateRight);
  79  

DIDwhiteboard • G8/M2/TD L17 - Proving the Pythagorean Theorem/slide1.js:
  31  
  32: ggb1.instance.registerObjectUpdateListener('enableButton', buttonWork);
  33  

DIDwhiteboard • G8/M2/TD L17 - Proving the Pythagorean Theorem/slide4.js:
  42  
  43: ggb2.instance.registerObjectUpdateListener('enableButton', buttonWork);
  44  

DIDwhiteboard • G8/M2/TD L17 - Proving the Pythagorean Theorem/slide17.js:
  55  
  56: ggb2.instance.registerObjectUpdateListener("enableButton", buttonWork);
  57  

DIDwhiteboard • G8/M2/TD L17 - Proving the Pythagorean Theorem/slide24.js:
  103  
  104: /*ggb1.instance.registerObjectUpdateListener('enableButton', buttonWork);
  105  

DIDwhiteboard • G8/M2/TD L18 - Proving the Converse of the Pythagorean Theorem/slide9.js:
    5  
    6: ggb2.instance.registerObjectUpdateListener('a', aUpdate);
    7: ggb2.instance.registerObjectUpdateListener('b', bUpdate);
    8  

   15  
   16: ggb1.instance.registerClientListener(clients);
   17: ggb1.instance.registerClickListener(switchIt);
   18: ggb1.instance.registerAddListener(burySegs);
   19  

  156      }
  157:     ggb1.instance.unregisterUpdateListener('snipePoly');
  158      ggb1.instance.setValue('madeOne', false);

DIDwhiteboard • G8/M2/TD L18 - Proving the Converse of the Pythagorean Theorem/slide10.js:
   8  
   9: ggb1.instance.registerObjectUpdateListener('enableResetButton', update);
  10  

  18  
  19: ggb1.instance.registerObjectUpdateListener('enableConverseButton', update2);
  20  

DIDwhiteboard • G8/M2/TD L18 - Proving the Converse of the Pythagorean Theorem/slide12.js:
  33  
  34: ggb1.instance.registerObjectUpdateListener("time", whatsNext);
  35  

DIDwhiteboard • G8/M2/TD L18 - Proving the Converse of the Pythagorean Theorem/slide17.js:
  11  
  12: ggb1.instance.registerUpdateListener(updatePoints);
  13  

DIDwhiteboard • G8/M3/TA L01 - Exploring Dilations/slide10.js:
  4  
  5: ggb1.instance.registerUpdateListener(moveIt);
  6: ggb1.instance.registerClientListener(clients);
  7  

DIDwhiteboard • G8/M3/TA L01 - Exploring Dilations/slide11.js:
  19  
  20: ggb1.instance.registerUpdateListener(moveIt);
  21: ggb1.instance.registerClientListener(clients);
  22: ggb1.instance.registerObjectUpdateListener("scale", scaleIt);
  23  

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide2.js:
  25  
  26: ggb1.instance.registerClientListener((a) => {
  27    switch (a.type) {

  33  
  34: ggb1.instance.registerAddListener((a) => {
  35    if (ggb1.instance.getObjectType(a) != "point") {

  52  
  53: ggb1.instance.registerObjectUpdateListener("O", () => {
  54    button1.updateData({ text: "Submit", disabled: false });

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide3.js:
  70  
  71: ggb1.instance.registerClientListener((a) => {
  72    switch (a.type) {

  78  
  79: ggb1.instance.registerAddListener((a) => {
  80    if (ggb1.instance.getObjectType(a) != "point" || ggb1.data.aggIncoming) {

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide4.js:
  25  
  26: ggb1.instance.registerClientListener((a) => {
  27    switch (a.type) {

  33  
  34: ggb1.instance.registerAddListener((a) => {
  35    if (ggb1.instance.getObjectType(a) != "point") {

  43  
  44: ggb1.instance.registerObjectUpdateListener("O", () => {
  45    button1.updateData({ text: "Submit", disabled: false });

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide5.js:
  25  
  26: ggb1.instance.registerClientListener((a) => {
  27    switch (a.type) {

  33  
  34: ggb1.instance.registerAddListener((a) => {
  35    if (ggb1.instance.getObjectType(a) != "point") {

  50  
  51: ggb1.instance.registerObjectUpdateListener("O", () => {
  52    button1.updateData({ disabled: false });

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide7.js:
  31  
  32: ggb1.instance.registerObjectUpdateListener("O", refresh);
  33  
  34: ggb1.instance.registerObjectUpdateListener("chosen", refresh);

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide8.js:
  80  
  81: ggb1.instance.registerObjectUpdateListener('O', refresh);
  82  
  83: ggb1.instance.registerObjectUpdateListener('chosen', refresh);
  84  

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide9.js:
  30  
  31: ggb1.instance.registerObjectUpdateListener("O", refresh);
  32  
  33: ggb1.instance.registerObjectUpdateListener("chosen", refresh);

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide10.js:
  81  
  82: ggb1.instance.registerObjectUpdateListener("O", refresh);
  83  
  84: ggb1.instance.registerObjectUpdateListener("chosen", refresh);
  85  

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide13.js:
  36  
  37: ggb1.instance.registerClientListener((a) => {
  38    switch (a.type) {

  44  
  45: ggb1.instance.registerAddListener((a) => {
  46    if (ggb1.instance.getObjectType(a) != "point") {

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide14.js:
  36  
  37: ggb1.instance.registerClientListener((a) => {
  38    switch (a.type) {

  44  
  45: ggb1.instance.registerAddListener((a) => {
  46    if (ggb1.instance.getObjectType(a) != "point") {

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide15.js:
  47  
  48: ggb1.instance.registerClientListener((a) => {
  49    switch (a.type) {

  55  
  56: ggb1.instance.registerAddListener((a) => {
  57    if (ggb1.instance.getObjectType(a) != "point") {

DIDwhiteboard • G8/M3/TC L09 - Describing Dilations/slide16.js:
  47  
  48: ggb1.instance.registerClientListener((a) => {
  49    switch (a.type) {

  55  
  56: ggb1.instance.registerAddListener((a) => {
  57    if (ggb1.instance.getObjectType(a) != "point") {

DIDwhiteboard • G8/M3/TD L17 - Similar Triangles on a Line/slide1.js:
  26  ggb1.instance.setAxisLabels(1, '$\\mathit{x}$', '$\\mathit{y}$');
  27: ggb1.instance.registerObjectUpdateListener('A', update);
  28  

DIDwhiteboard • G8/M3/TD L17 - Similar Triangles on a Line/slide3.js:
  16  //shows the r= text
  17: ggb1.instance.registerObjectUpdateListener("text1", updateRight);
  18  function updateRight() {

DIDwhiteboard • G8/M4/TC L12 - Solutions to Linear Equations in Two Variables/Slide 1.js:
   72  
   73: ggb1.instance.registerObjectUpdateListener('score', update);
   74  

  120  
  121: ggb1.instance.registerObjectUpdateListener('set', setChange);
  122  

  128  
  129: ggb1.instance.registerObjectUpdateListener('twoShots', add2One);
  130  

  137  
  138: ggb1.instance.registerObjectUpdateListener('threeShots', add3One);
  139  

  146  
  147: ggb1.instance.registerObjectUpdateListener('twoShots2', add2One2);
  148  

  153  
  154: ggb1.instance.registerObjectUpdateListener('threeShots2', add3One2);
  155  

DIDwhiteboard • G8/M4/TC L12 - Solutions to Linear Equations in Two Variables/Slide 6.js:
   6  
   7: ggb1.instance.registerClickListener(styleIt);
   8  

  36  
  37: ggb1.instance.registerObjectUpdateListener('count', update);
  38  

DIDwhiteboard • G8/M4/TC L12 - Solutions to Linear Equations in Two Variables/Slide 7.js:
  12  
  13: ggb1.instance.registerClickListener(styleIt);
  14  

  51  if (ggb1.instance.getValue('count') < 5) {
  52:   ggb1.instance.registerObjectUpdateListener('count', update);
  53  }

  64      }
  65:     ggb1.instance.unregisterObjectUpdateListener('count');
  66    }

DIDwhiteboard • G8/M5/TA L02 - Introduction to Systems of Linear Equations/slide12.js:
  28  
  29: ggb1.instance.registerObjectUpdateListener("show", enable);
  30  

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide2.js:
   4  
   5: ggb1.instance.registerClientListener(clone);
   6: ggb1.instance.registerObjectUpdateListener(
   7    'picsALength',

   9  );
  10: ggb1.instance.registerObjectUpdateListener(
  11    'picsBLength',

  13  );
  14: ggb1.instance.registerObjectUpdateListener('Follow', mouseMoved);
  15: ggb1.instance.registerObjectUpdateListener('time', snapToLanding);
  16: ggb1.instance.registerClickListener(deletePoint);
  17  

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide4.js:
  13  
  14: ggb1.instance.registerClientListener(clone);
  15: ggb1.instance.registerObjectUpdateListener(
  16    'picsALength',

  18  );
  19: ggb1.instance.registerObjectUpdateListener(
  20    'picsBLength',

  22  );
  23: ggb1.instance.registerObjectUpdateListener('Follow', mouseMoved);
  24: ggb1.instance.registerObjectUpdateListener('time', snapToLanding);
  25: ggb1.instance.registerClickListener(deletePoint);
  26  

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide9.js:
  63  
  64: ggb1.instance.registerClientListener(listenToClient);
  65: ggb1.instance.registerClickListener(deletePoint);
  66  

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide13.js:
  6  
  7: ggb1.instance.registerClientListener(listenToClient);
  8: ggb1.instance.registerClickListener(deletePoint);
  9  

DIDwhiteboard • G8/M6/TB L09 - Increasing and Decreasing Functions/slide1.js:
    9  
   10: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB); // GGB name
   11  
   12: ggb2.instance.registerClientListener((a) => {
   13    if (a.type == "select" && a.target == "Scrubber") {

   17    } else if (a.type == "undo") {
   18:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   19      linkGGB();

  104  
  105: ggb2.instance.registerAddListener(adds);
  106  

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-3fb741baaf88.js:
  69  
  70: ggb1.instance.registerClientListener(indicators);
  71  

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-060d66a42d23.js:
  21  
  22: ggb1.instance.registerClientListener(indicator);
  23: ggb1.instance.registerObjectUpdateListener('show', revealShare);
  24  

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-b1210e61aa96.js:
  107  
  108: ggb1.instance.registerClientListener(focusIndicators);
  109  
  110: ggb1.instance.registerObjectUpdateListener('show', buttonWork);
  111: ggb1.instance.registerObjectUpdateListener('animationDone', displayWork);
  112  

  236  for (let i = 1, L = pinArray.length + 1; i < L; i++) {
  237:   ggb1.instance.registerObjectUpdateListener(`pin${i}Time`, () => {
  238      let num = Math.round(ggb1.instance.getValue(`pin${i}Time`) * 1) / 1;

  240    });
  241:   ggb1.instance.registerObjectClickListener(`pin${i}`, () => {
  242      ggb1.instance.setValue('show', true);

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-c0c4a48430c6.js:
  6  
  7: ggb1.instance.registerClientListener(indicator);
  8  

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-f6f6ff9767ec.js:
  8  
  9: ggb1.instance.registerClientListener(indicators);
  10  

DIDwhiteboard • G8/M6/TE L21 - Prism & Pyramid Definitions/slide1.js:
  23  holdUp();
  24: // ggb1.instance.registerObjectClickListener("button1", "start1");
  25: ggb1.instance.registerObjectUpdateListener("timeBases", advance1);
  26: // ggb1.instance.registerObjectClickListener("button2", "start2");
  27: ggb1.instance.registerObjectUpdateListener("timeEdge", advance2);
  28: // ggb1.instance.registerObjectClickListener("button3", "start3");
  29: ggb1.instance.registerObjectUpdateListener("end1", cycle1);
  30: ggb1.instance.registerObjectUpdateListener("end2", cycle2);
  31: // ggb1.instance.registerObjectClickListener("button4", "start4");
  32  

DIDwhiteboard • G8/M6/TE L21 - Prism & Pyramid Definitions/slide2.js:
  14  
  15: ggb1.instance.registerObjectUpdateListener("baseTime", advance1);
  16: ggb1.instance.registerObjectUpdateListener("faceTime", advance4);
  17  

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide1.js:
  5  
  6: ggb1.instance.registerObjectUpdateListener('n', () => {
  7    updateRight();

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide2.js:
  46  
  47: ggb1.instance.registerObjectUpdateListener('time1', enableButton);
  48  

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide3.js:
  30  
  31: //ggb1.instance.registerObjectUpdateListener("timeCircles", advance2);
  32: //ggb1.instance.registerObjectUpdateListener("timeLine", advance3);
  33  

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide9.js:
  22  
  23: ggb2.instance.registerObjectUpdateListener("n", update);
  24  button1.updateData({ visible: false });

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide12.js:
  7  
  8: ggb2.instance.registerObjectUpdateListener('time', update);
  9  

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide13.js:
  19  
  20: ggb2.instance.registerObjectUpdateListener('n', update);
  21  

DIDwhiteboard • G8/M6/TE L23 - Demo - Circular Cone Definition/slide1.js:
  24  // some will have to move to platform side:
  25: // ggb1.instance.registerObjectClickListener("button1", "start1");
  26: ggb1.instance.registerObjectUpdateListener("timeBase", advance1);
  27: // ggb1.instance.registerObjectClickListener("button2", "start2");
  28: // ggb1.instance.registerObjectClickListener("button3", "start3");
  29: ggb1.instance.registerObjectUpdateListener("end1", cycle1);
  30: ggb1.instance.registerObjectUpdateListener("end2", cycle2);
  31: // ggb1.instance.registerObjectClickListener("button4", "start4");
  32  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide4.js:
  25  
  26: ggb1.instance.registerObjectUpdateListener('time', revealShare);
  27  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide5.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener('time', startTime2);
  13  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide7.js:
  6  
  7: ggb1.instance.registerObjectUpdateListener('Point1', update);
  8  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide8.js:
  24  
  25: ggb1.instance.registerObjectUpdateListener('Point1', update);
  26  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide9.js:
  6  
  7: ggb1.instance.registerObjectUpdateListener('Point1', update);
  8  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide11.js:
  12  
  13: ggb1.instance.registerObjectUpdateListener('time', revealComponents);
  14  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide13.js:
  13  
  14: ggb1.instance.registerObjectUpdateListener('time', startTime2);
  15: ggb1.instance.registerObjectUpdateListener('time2', startTime3);
  16: ggb1.instance.registerObjectUpdateListener('time3', startTime4);
  17: ggb1.instance.registerObjectUpdateListener('time4', checkEndTime4);
  18  

DIDwhiteboard • Geometry/M1/TA L05 - Lines Crossed by a Transversal/slide14.js:
  26  
  27: ggb1.instance.registerObjectClickListener('angle1', changeAngle1);
  28: ggb1.instance.registerObjectClickListener('angle2', changeAngle2);
  29: ggb1.instance.registerObjectClickListener('angle3', changeAngle3);
  30: ggb1.instance.registerObjectClickListener('angle4', changeAngle4);
  31  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide1.js:
   21  
   22: ggb2.instance.registerObjectUpdateListener('dropAll', finalDrop);
   23: ggb2.instance.registerObjectUpdateListener('time5', updateGGB1Time5);
   24  
   25: ggb2.instance.registerObjectClickListener('buttonARegion', buttonAWork);
   26: ggb2.instance.registerObjectClickListener('buttonBRegion', buttonBWork);
   27: ggb2.instance.registerObjectClickListener('buttonCRegion', buttonCWork);
   28: ggb2.instance.registerObjectClickListener('buttonDRegion', buttonDWork);
   29  
   30: ggb2.instance.registerClientListener(focusIndicators);
   31  

  103  for (let i = 1, L = sliders.length + 1; i < L; i++) {
  104:   ggb2.instance.registerObjectUpdateListener(`time${i}`, () => {
  105      ggb1.instance.setValue(`time${i}`, ggb2.instance.getValue(`time${i}`));

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide2.js:
   27  
   28: ggb2.instance.registerObjectUpdateListener('dropAll', finalDrop);
   29: ggb2.instance.registerObjectUpdateListener('time5', updateGGB1Time5);
   30  
   31: ggb2.instance.registerObjectClickListener('buttonARegion', buttonAWork);
   32: ggb2.instance.registerObjectClickListener('buttonBRegion', buttonBWork);
   33: ggb2.instance.registerObjectClickListener('buttonCRegion', buttonCWork);
   34: ggb2.instance.registerObjectClickListener('buttonDRegion', buttonDWork);
   35  
   36: ggb2.instance.registerClientListener(focusIndicators);
   37  

  109  for (let i = 1, L = sliders.length + 1; i < L; i++) {
  110:   ggb2.instance.registerObjectUpdateListener(`time${i}`, () => {
  111      ggb1.instance.setValue(`time${i}`, ggb2.instance.getValue(`time${i}`));

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide3.js:
   26  
   27: ggb2.instance.registerObjectUpdateListener('dropAll', finalDrop);
   28: ggb2.instance.registerObjectUpdateListener('time5', updateGGB1Time5);
   29  
   30: ggb2.instance.registerObjectClickListener('buttonARegion', buttonAWork);
   31: ggb2.instance.registerObjectClickListener('buttonBRegion', buttonBWork);
   32: ggb2.instance.registerObjectClickListener('buttonCRegion', buttonCWork);
   33: ggb2.instance.registerObjectClickListener('buttonDRegion', buttonDWork);
   34  
   35: ggb2.instance.registerClientListener(focusIndicators);
   36  

  108  for (let i = 1, L = sliders.length + 1; i < L; i++) {
  109:   ggb2.instance.registerObjectUpdateListener(`time${i}`, () => {
  110      ggb1.instance.setValue(`time${i}`, ggb2.instance.getValue(`time${i}`));

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide4.js:
  26  
  27: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  28: ggb1.instance.registerObjectUpdateListener('time2', time2Work);
  29: ggb1.instance.registerObjectUpdateListener('count', displayLabels);
  30  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide5.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  13: ggb1.instance.registerObjectUpdateListener('time2', time2Work);
  14: ggb1.instance.registerObjectUpdateListener('count', displayLabels);
  15  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide6.js:
  107  
  108: ggb1.instance.registerObjectUpdateListener('time', updateTimes);
  109: ggb1.instance.registerObjectUpdateListener('Htime', updateGGB2Htime);
  110: ggb1.instance.registerObjectUpdateListener('Htime2', updateGGB2Htime2);
  111  
  112: ggb2.instance.registerObjectClickListener('XBox', backToGGB1);
  113: ggb4.instance.registerObjectClickListener('XBox', backToGGB3);
  114  
  115: ggb1.instance.registerObjectClickListener('q1ExpandBox', expandQ1);
  116: ggb1.instance.registerObjectClickListener('q2ExpandBox', expandQ2);
  117: ggb1.instance.registerObjectClickListener('q3ExpandBox', expandQ3);
  118: ggb1.instance.registerObjectClickListener('q4ExpandBox', expandQ4);
  119  
  120: ggb3.instance.registerObjectClickListener('q1ExpandBox', expandQ1Three);
  121: ggb3.instance.registerObjectClickListener('q2ExpandBox', expandQ2Three);
  122: ggb3.instance.registerObjectClickListener('q3ExpandBox', expandQ3Three);
  123: ggb3.instance.registerObjectClickListener('q4ExpandBox', expandQ4Three);
  124  
  125: ggb1.instance.registerClientListener(focusIndicatorsGGB1);
  126: ggb2.instance.registerClientListener(focusIndicatorGGB2);
  127: ggb3.instance.registerClientListener(focusIndicatorsGGB3);
  128: ggb4.instance.registerClientListener(focusIndicatorGGB4);
  129  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide7.js:
  101  
  102: ggb1.instance.registerObjectUpdateListener('time', updateTimes);
  103: ggb1.instance.registerObjectUpdateListener('Htime', updateGGB2Htime);
  104: ggb1.instance.registerObjectUpdateListener('Htime2', updateGGB2Htime2);
  105  
  106: ggb2.instance.registerObjectClickListener('XBox', backToGGB1);
  107: ggb1.instance.registerObjectClickListener('q1ExpandBox', expandQ1);
  108: ggb1.instance.registerObjectClickListener('q2ExpandBox', expandQ2);
  109: ggb1.instance.registerObjectClickListener('q3ExpandBox', expandQ3);
  110: ggb1.instance.registerObjectClickListener('q4ExpandBox', expandQ4);
  111  
  112: ggb1.instance.registerClientListener(focusIndicatorsGGB1);
  113: ggb2.instance.registerClientListener(focusIndicatorGGB2);
  114  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide9.js:
  26  
  27: ggb1.instance.registerClientListener(showPurpleBoxes);
  28  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide10.js:
  15  
  16: ggb1.instance.registerObjectUpdateListener('beginPause', startTime);
  17: ggb1.instance.registerObjectUpdateListener('time', startPause);
  18: ggb1.instance.registerObjectUpdateListener('pause', checkIfDone);
  19  

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide11.js:
  44  
  45: ggb1.instance.registerObjectUpdateListener('pause', checkIfDone);
  46  

  82    buttonGroup1.updateSingleButton({ disabled: false }, 2);
  83:   ggb1.instance.registerObjectUpdateListener('beginPause', startTime);
  84:   ggb1.instance.registerObjectUpdateListener('time', startPause);
  85    restartAnimation();

DIDwhiteboard • Geometry/M1/TB L07 - Transformations/slide13.js:
  11  
  12: ggb2.instance.registerObjectClickListener('xBox', backToGGB1);
  13: ggb1.instance.registerObjectClickListener('q1ExpandBox', expandQ1);
  14: ggb1.instance.registerObjectClickListener('q2ExpandBox', expandQ2);
  15: ggb1.instance.registerObjectClickListener('q3ExpandBox', expandQ3);
  16: ggb1.instance.registerObjectClickListener('q4ExpandBox', expandQ4);
  17  
  18: ggb1.instance.registerClientListener(focusIndicatorsGGB1);
  19: ggb2.instance.registerClientListener(focusIndicatorGGB2);
  20  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-7d19009f0c75.js:
  37  
  38: ggb1.instance.registerClientListener(showPurpleBoxes);
  39  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-116b709c2663.js:
  71  
  72: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  73: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  74: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  75: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  76: ggb1.instance.registerObjectUpdateListener(
  77    'showClockwiseHover',

  79  );
  80: ggb1.instance.registerObjectUpdateListener(
  81    'showCounterclockwiseHover',

  84  
  85: ggb1.instance.registerObjectUpdateListener(
  86    'counterclockwise',

  88  );
  89: ggb1.instance.registerObjectUpdateListener('angleMeasure', angleButtons);
  90  
  91: ggb1.instance.registerClientListener(focusIndicator);
  92  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-819bb8233abb.js:
  12  
  13: ggb1.instance.registerObjectUpdateListener(
  14    'counterclockwise',

  16  );
  17: ggb1.instance.registerObjectUpdateListener('angleVal', angleButtons);
  18  
  19: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  20: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  21: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  22: ggb1.instance.registerObjectUpdateListener(
  23    'showClockwiseHover',

  25  );
  26: ggb1.instance.registerObjectUpdateListener(
  27    'showCounterclockwiseHover',

  30  
  31: ggb1.instance.registerClientListener(focusIndicator);
  32  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-afc73b15c011.js:
  34  
  35: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  36: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  37: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  38: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  39: ggb1.instance.registerObjectUpdateListener(
  40    'showClockwiseHover',

  42  );
  43: ggb1.instance.registerObjectUpdateListener(
  44    'showCounterclockwiseHover',

  47  
  48: ggb1.instance.registerObjectUpdateListener(
  49    'counterclockwise',

  51  );
  52: ggb1.instance.registerObjectUpdateListener('angleMeasure', angleButtons);
  53  
  54: ggb1.instance.registerClientListener(focusIndicator);
  55  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-b06c39658d94.js:
  144  
  145: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  146: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  147: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  148: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  149: ggb1.instance.registerObjectUpdateListener(
  150    'showClockwiseHover',

  152  );
  153: ggb1.instance.registerObjectUpdateListener(
  154    'showCounterclockwiseHover',

  157  
  158: ggb1.instance.registerObjectUpdateListener(
  159    'counterclockwise',

  161  );
  162: ggb1.instance.registerObjectUpdateListener('angleMeasure', angleButtons);
  163  
  164: ggb1.instance.registerClientListener(focusIndicator);
  165  
  166: ggb2.instance.registerObjectUpdateListener('time', timeWork2);
  167: ggb2.instance.registerObjectUpdateListener('show90Hover', display90Hover2);
  168: ggb2.instance.registerObjectUpdateListener('show180Hover', display180Hover2);
  169: ggb2.instance.registerObjectUpdateListener('show270Hover', display270Hover2);
  170: ggb2.instance.registerObjectUpdateListener(
  171    'showClockwiseHover',

  173  );
  174: ggb2.instance.registerObjectUpdateListener(
  175    'showCounterclockwiseHover',

  178  
  179: ggb2.instance.registerObjectUpdateListener(
  180    'counterclockwise',

  182  );
  183: ggb2.instance.registerObjectUpdateListener('angleMeasure', angleButtons2);
  184  
  185: ggb2.instance.registerClientListener(focusIndicator2);
  186  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-bc0631516022.js:
  34  
  35: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  36: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  37: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  38: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  39: ggb1.instance.registerObjectUpdateListener(
  40    'showClockwiseHover',

  42  );
  43: ggb1.instance.registerObjectUpdateListener(
  44    'showCounterclockwiseHover',

  47  
  48: ggb1.instance.registerObjectUpdateListener(
  49    'counterclockwise',

  51  );
  52: ggb1.instance.registerObjectUpdateListener('angleMeasure', angleButtons);
  53  
  54: ggb1.instance.registerClientListener(focusIndicator);
  55  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-bdee68af1acc.js:
  71  
  72: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  73: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  74: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  75: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  76: ggb1.instance.registerObjectUpdateListener(
  77    'showClockwiseHover',

  79  );
  80: ggb1.instance.registerObjectUpdateListener(
  81    'showCounterclockwiseHover',

  84  
  85: ggb1.instance.registerObjectUpdateListener(
  86    'counterclockwise',

  88  );
  89: ggb1.instance.registerObjectUpdateListener('angleMeasure', angleButtons);
  90  
  91: ggb1.instance.registerClientListener(focusIndicator);
  92  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-cb35dc7a2ea3.js:
  34  
  35: ggb1.instance.registerObjectUpdateListener('time', timeWork);
  36: ggb1.instance.registerObjectUpdateListener('show90Hover', display90Hover);
  37: ggb1.instance.registerObjectUpdateListener('show180Hover', display180Hover);
  38: ggb1.instance.registerObjectUpdateListener('show270Hover', display270Hover);
  39: ggb1.instance.registerObjectUpdateListener(
  40    'showClockwiseHover',

  42  );
  43: ggb1.instance.registerObjectUpdateListener(
  44    'showCounterclockwiseHover',

  47  
  48: ggb1.instance.registerObjectUpdateListener(
  49    'counterclockwise',

  51  );
  52: ggb1.instance.registerObjectUpdateListener('angleMeasure', angleButtons);
  53  
  54: ggb1.instance.registerClientListener(focusIndicator);
  55  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-ddae121a6b92.js:
  44  
  45: ggb1.instance.registerObjectUpdateListener('time', startTime2);
  46: ggb1.instance.registerObjectUpdateListener('time2', startTime3);
  47: ggb1.instance.registerObjectUpdateListener('time3', startPause);
  48: ggb1.instance.registerObjectUpdateListener('pause', restartAnimation);
  49: ggb1.instance.registerObjectUpdateListener('count', updateRoutes);
  50  

DIDwhiteboard • Geometry/M1/TC L14 - Sequences of Basic Rigid Motions/slide-ef155db54e6f.js:
  20  
  21: ggb1.instance.registerClientListener(showPurpleBoxes);
  22  

DIDwhiteboard • Geometry/M1/TC L15 - Demo/slide1.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener('time', primeLabels);
  13: ggb2.instance.registerObjectUpdateListener('time', timeFunction);
  14  
  15: ggb2.instance.registerObjectClickListener('no1Box', no1BoxWork);
  16  

DIDwhiteboard • Geometry/M1/TC L16 - Demo/slide1.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time3', startTime4);
  12  

DIDwhiteboard • Geometry/M1/TC L16 - Demo/slide2.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('rayTime', startTime2);
  12  

DIDwhiteboard • Geometry/M1/TC L16 - Demo/slide4.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', tranLabels);
  12: ggb1.instance.registerObjectUpdateListener('time2', rotLabels);
  13  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-1fec871fc06c.js:
  30  
  31: ggb1.instance.registerObjectUpdateListener('time', showStuff);
  32: ggb1.instance.registerObjectUpdateListener('time2', changeColors);
  33: ggb1.instance.registerObjectUpdateListener('time3', startTime4);
  34: ggb1.instance.registerObjectUpdateListener('time4', disablePause);
  35  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-5f8c0b761541.js:
  47  
  48: ggb3.instance.registerObjectClickListener('xBox', backToGGB1);
  49: ggb4.instance.registerObjectClickListener('xBox', backToGGB2);
  50  
  51: ggb1.instance.registerObjectClickListener('q1ExpandBox', expandQ1GGB1);
  52: ggb1.instance.registerObjectClickListener('q2ExpandBox', expandQ2GGB1);
  53: ggb1.instance.registerObjectClickListener('q3ExpandBox', expandQ3GGB1);
  54: ggb1.instance.registerObjectClickListener('q4ExpandBox', expandQ4GGB1);
  55  
  56: ggb2.instance.registerObjectClickListener('q1ExpandBox', expandQ1GGB2);
  57: ggb2.instance.registerObjectClickListener('q2ExpandBox', expandQ2GGB2);
  58: ggb2.instance.registerObjectClickListener('q3ExpandBox', expandQ3GGB2);
  59: ggb2.instance.registerObjectClickListener('q4ExpandBox', expandQ4GGB2);
  60  
  61: ggb1.instance.registerClientListener(focusIndicatorsGGB1);
  62: ggb2.instance.registerClientListener(focusIndicatorsGGB2);
  63: ggb3.instance.registerClientListener(focusIndicatorGGB3);
  64: ggb4.instance.registerClientListener(focusIndicatorGGB4);
  65  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-9a143f0bbe42.js:
  20  
  21: ggb1.instance.registerObjectUpdateListener('time', showStuff);
  22: ggb1.instance.registerObjectUpdateListener('time2', changeColors);
  23  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-65f6bbb593a1.js:
  19  
  20: ggb2.instance.registerObjectClickListener('xBox', backToGGB1);
  21: ggb1.instance.registerObjectClickListener('q1ExpandBox', expandQ1);
  22: ggb1.instance.registerObjectClickListener('q2ExpandBox', expandQ2);
  23: ggb1.instance.registerObjectClickListener('q3ExpandBox', expandQ3);
  24: ggb1.instance.registerObjectClickListener('q4ExpandBox', expandQ4);
  25  
  26: ggb1.instance.registerClientListener(focusIndicatorsGGB1);
  27: ggb2.instance.registerClientListener(focusIndicatorGGB2);
  28  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-58658fc9a3ce.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener('time', showStuff);
  13  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-909754c5d796.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener('time', TranPointsLabelWork);
  13: ggb1.instance.registerObjectUpdateListener('time2', RotBLabelWork);
  14  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-3924718fc610.js:
  16  
  17: ggb1.instance.registerObjectUpdateListener('time', runTime2);
  18: ggb1.instance.registerObjectUpdateListener('time2', runTime3);
  19: ggb1.instance.registerObjectUpdateListener('time3', runPause);
  20: ggb1.instance.registerObjectUpdateListener('pause', pauseResets);
  21  

  36  for (let i = 4, L = bottomTrianglesArray.length + 4; i < L; i++) {
  37:   ggb1.instance.registerObjectClickListener(`t${i}`, () => {
  38      ggb1.instance.setValue(`t${i}Selected`, true);

  53  for (let i = 1, L = topTrianglesArray.length + 1; i < L; i++) {
  54:   ggb1.instance.registerObjectClickListener(`t${i}`, () => {
  55      ggb1.instance.setValue(`t${i}Selected`, true);

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-b611f9a88882.js:
  8  
  9: ggb1.instance.registerObjectUpdateListener('time', startTime2);
  10  

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-d06f3b3a426a.js:
  16  
  17: ggb1.instance.registerObjectUpdateListener('time', runTime2);
  18: ggb1.instance.registerObjectUpdateListener('time2', runTime3);
  19: ggb1.instance.registerObjectUpdateListener('time3', runPause);
  20: ggb1.instance.registerObjectUpdateListener('pause', pauseResets);
  21  

  36  for (let i = 4, L = bottomTrianglesArray.length + 4; i < L; i++) {
  37:   ggb1.instance.registerObjectClickListener(`t${i}`, () => {
  38      ggb1.instance.setValue(`t${i}Selected`, true);

  60  for (let i = 1, L = topTrianglesArray.length + 1; i < L; i++) {
  61:   ggb1.instance.registerObjectClickListener(`t${i}`, () => {
  62      ggb1.instance.setValue(`t${i}Selected`, true);

DIDwhiteboard • Geometry/M1/TD L21 - AAA and SSS/slide-d99da8d8348f.js:
  19  
  20: ggb2.instance.registerObjectClickListener('xBox', backToGGB1);
  21: ggb1.instance.registerObjectClickListener('q1ExpandBox', expandQ1);
  22: ggb1.instance.registerObjectClickListener('q2ExpandBox', expandQ2);
  23: ggb1.instance.registerObjectClickListener('q3ExpandBox', expandQ3);
  24: ggb1.instance.registerObjectClickListener('q4ExpandBox', expandQ4);
  25  
  26: ggb1.instance.registerClientListener(focusIndicatorsGGB1);
  27: ggb2.instance.registerClientListener(focusIndicatorGGB2);
  28  

DIDwhiteboard • Geometry/M1/TE L24 - The Structure of Theorems/slide-66ed4a1580f2.js:
  47  
  48: ggb1.instance.registerClickListener(cycle);
  49  
  50: ggb1.instance.registerClientListener(displayFocus);
  51  

DIDwhiteboard • Geometry/M1/TE L24 - The Structure of Theorems/slide-2525e5f03a31.js:
  32  
  33: ggb1.instance.registerClickListener(cycle);
  34: ggb1.instance.registerClientListener(displayFocus);
  35  

DIDwhiteboard • Geometry/M1/TE L24 - The Structure of Theorems/slide-ed018ac6abc7.js:
  32  
  33: ggb1.instance.registerClickListener(cycle);
  34: ggb1.instance.registerClientListener(displayFocus);
  35  

DIDwhiteboard • Geometry/M1/TE L24 - The Structure of Theorems/slide-ff0d8a1c541a.js:
  47  
  48: ggb1.instance.registerClickListener(cycle);
  49  
  50: ggb1.instance.registerClientListener(displayFocus);
  51  

DIDwhiteboard • Geometry/M1/TE L24 - The Structure of Theorems/slide1.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener('time', buttonWork);
  12  

DIDwhiteboard • GK/Counting Collection.js:
  1  function ggbOnInit() {
  2: 	ggbApplet.registerClientListener("snap");
  3: 	ggbApplet.registerObjectClickListener("button2", "showCounters");
  4: 	ggbApplet.registerObjectUpdateListener("click", "showCounters");
  5: 	ggbApplet.registerObjectUpdateListener("time", "showHide");
  6: 	ggbApplet.registerClickListener("clickSnap");
  7  }

DIDwhiteboard • GK/GKM4TAL2 - Mondrian Decomposition.js:
  2  
  3: ggb1.instance.registerClientListener("losefocus");
  4: ggb1.instance.registerObjectUpdateListener("crop", "display2");
  5  

DIDwhiteboard • GK/GKM4TAL2 - Mondrian Decomposition.txt:
  2  
  3: ggb1.instance.registerClientListener("losefocus");
  4: ggb1.instance.registerObjectUpdateListener("crop", "display2");
  5  

DIDwhiteboard • IM1/M1/TA L02/slide-10b318d0c944.js:
  2  
  3: ggb1.instance.registerClickListener(clicks);
  4: ggb1.instance.registerClientListener(clients);
  5: ggb1.instance.registerRemoveListener((obj) => {
  6    const savedCaptions = getData("savedCaptions");

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide1.js:
   21  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   22:   ggb1.instance.registerClickListener(clicks);
   23  }

   51  
   52: ggb1.instance.registerStoreUndoListener(() => {
   53    resetCheck();

   64      // patch for extra instances of the click listener:
   65:     ggb1.instance.unregisterClickListener(clicks);
   66    }

   73    // resetCheck();
   74:   ggb1.instance.unregisterClickListener(clicks);
   75    let allGGB = ggb1.instance.getAllObjectNames();

  384    }
  385:   ggb1.instance.registerClickListener(clicks);
  386  }

  388  // GGB section
  389: ggb1.instance.registerClientListener((a) => {
  390    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide2.js:
   21  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   22:   ggb1.instance.registerClickListener(clicks);
   23  }

   52  
   53: ggb1.instance.registerStoreUndoListener(() => {
   54    resetCheck();

   65      // patch for extra instances of the click listener:
   66:     ggb1.instance.unregisterClickListener(clicks);
   67    }

   74    // resetCheck();
   75:   ggb1.instance.unregisterClickListener(clicks);
   76    let allGGB = ggb1.instance.getAllObjectNames();

  385    }
  386:   ggb1.instance.registerClickListener(clicks);
  387  }

  389  // GGB section
  390: ggb1.instance.registerClientListener((a) => {
  391    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide3.js:
  97  
  98: ggb1.instance.registerClientListener((a) => {
  99    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide5.js:
  173  
  174: ggb1.instance.registerClientListener((a) => {
  175    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide6.js:
  166  
  167: ggb1.instance.registerClientListener((a) => {
  168    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide7.js:
   17  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   18:   ggb1.instance.registerClickListener(clicks);
   19  }

   40  select3.on("change", ({ selected }) => {
   41:   ggb1.instance.unregisterClickListener(clicks);
   42    let allGGB = ggb1.instance.getAllObjectNames();

  334    }
  335:   ggb1.instance.registerClickListener(clicks);
  336  }

  338  // GGB section
  339: ggb1.instance.registerClientListener((a) => {
  340    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide8.js:
   17  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   18:   ggb1.instance.registerClickListener(clicks);
   19  }

  111  select3.on("change", ({ selected }) => {
  112:   ggb1.instance.unregisterClickListener(clicks);
  113    let allGGB = ggb1.instance.getAllObjectNames();

  407    }
  408:   ggb1.instance.registerClickListener(clicks);
  409  }

  411  // GGB section
  412: ggb1.instance.registerClientListener((a) => {
  413    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide9.js:
   17  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   18:   ggb1.instance.registerClickListener(clicks);
   19  }

  162  select3.on("change", ({ selected }) => {
  163:   ggb1.instance.unregisterClickListener(clicks);
  164    let allGGB = ggb1.instance.getAllObjectNames();

  458    }
  459:   ggb1.instance.registerClickListener(clicks);
  460  }

  462  // GGB section
  463: ggb1.instance.registerClientListener((a) => {
  464    switch (a.type) {

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide10.js:
   17  if (select3.data.selected.length && select3.data.selected[0] == "2") {
   18:   ggb1.instance.registerClickListener(clicks);
   19  }

  219    resetAnim();
  220:   ggb1.instance.unregisterClickListener(clicks);
  221    let allGGB = ggb1.instance.getAllObjectNames();

  537    }
  538:   ggb1.instance.registerClickListener(clicks);
  539  }

  541  // GGB section
  542: ggb1.instance.registerClientListener((a) => {
  543    switch (a.type) {

DIDwhiteboard • IM1/M1/TD L17 - Distributions and Their Shapes/slide3.js:
  57  
  58: ggb1.instance.registerObjectUpdateListener("time", updateTime);
  59: ggb1.instance.registerObjectUpdateListener("time1", updateRight);
  60  

DIDwhiteboard • IM1/M1/TD L17 - Distributions and Their Shapes/slide4.js:
  70  // }
  71: ggb1.instance.registerObjectUpdateListener("time", updateTime);
  72: ggb1.instance.registerObjectUpdateListener("time1", updateRight);
  73  

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide3 slide-591b98c4c31d.js:
  268  
  269: ggb1.instance.registerObjectUpdateListener("enablePrompt", update);
  270  

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide6 slide-636c1d4df639.js:
  22  
  23: ggb1.instance.registerObjectUpdateListener("time", update);
  24  

  30  
  31: ggb1.instance.registerObjectUpdateListener("count", labelStuff);
  32  

  40  
  41: ggb1.instance.registerObjectUpdateListener("showPurple", update2);
  42  

  49  
  50: ggb1.instance.registerObjectUpdateListener("submitted", buttonStuff);
  51  

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide7 slide-7d823c66c153.js:
  11  
  12: ggb1.instance.registerObjectUpdateListener("count", labelStuff);
  13  

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide11 slide-102b2e9edb49.js:
  49  
  50: ggb1.instance.registerObjectUpdateListener("distance", update);
  51  

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide13 slide-15596c4169b5.js:
  12  
  13: ggb2.instance.registerAddListener((a) => {
  14    if (ggb2.instance.getObjectType(a) === "line") {

  98  
  99: ggb2.instance.registerStoreUndoListener(() => {
  100    ggb2.updateData({ save64: ggb2.instance.getBase64() });

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide15 slide-fd85e50c42c6.js:
  49  
  50: ggb1.instance.registerObjectUpdateListener("distance", update);
  51  

DIDwhiteboard • IM1/M2/TA L01 - Solution Sets of Linear Equations in Two Variables/slide17 slide-1cba24759350.js:
  71  
  72: /*ggb2.instance.registerStoreUndoListener(getDoodles);
  73  getDoodles();

  82  
  83: ggb2.instance.registerStoreUndoListener(() => {
  84    ggb2.updateData({ save64: ggb2.instance.getBase64() });

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide3.js:
  38  
  39: ggb1.instance.registerClientListener(clientFunction);
  40  

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide4.js:
  47  
  48: ggb1.instance.registerClientListener(clientFunction);
  49  

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide5.js:
  47  
  48: ggb1.instance.registerClientListener(clientFunction);
  49  

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide6.js:
  17  
  18: ggb1.instance.registerObjectUpdateListener("P1", showSolutions);
  19: ggb1.instance.registerObjectUpdateListener("P2", showSolutions);
  20: ggb1.instance.registerObjectUpdateListener("P3", () => {
  21    showSolutions();

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide8.js:
  28  
  29: ggb1.instance.registerClientListener(clientFunction);
  30  

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide7.js:
  50  
  51: ggb1.instance.registerClientListener((a) => {
  52    switch (a.type) {

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide11.js:
  10  
  11: ggb1.instance.registerObjectUpdateListener("time1", manageAnimations);
  12  
  13: ggb1.instance.registerObjectUpdateListener("time2", (name) => {
  14    manageAnimations(name, true);

  16  
  17: ggb1.instance.registerObjectUpdateListener("time3", manageAnimations);
  18  
  19: ggb1.instance.registerObjectUpdateListener("time4", manageAnimations);
  20  

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide13.js:
  53  
  54: ggb1.instance.registerClientListener((a) => {
  55    switch (a.type) {

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide16.js:
  53  
  54: ggb1.instance.registerClientListener((a) => {
  55    switch (a.type) {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version1/slide1.js:
  3  
  4: ggb1.instance.registerClientListener(copy);
  5  slide.on("firstload", () => {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version1/slide2.js:
   24  	});
   25: 	ggb1.instance.registerClientListener(drop);
   26  	ggb1.updateData({ disabled: true });

   36  	saveData({ count: 1, holdnum: -1 });
   37: 	ggb1.instance.registerClientListener(drop);
   38  	buttonGroup1.updateSingleButton({ disabled: true }, 2);

  116  				ggb1.instance.deleteObject("arc" + (count - 1));
  117: 				ggb1.instance.unregisterClientListener(drop);
  118  			}

DIDwhiteboard • OMO/G1/M2/TC/L10/Version1/slide3.js:
   21  	});
   22: 	ggb1.instance.registerClientListener(drop);
   23  });

   44  	saveData({ count: 1, holdnum: -1 });
   45: 	ggb1.instance.registerClientListener(drop);
   46  	buttonGroup1.updateSingleButton({ disabled: true }, 2);

  124  				ggb1.instance.deleteObject("arc" + (count - 1));
  125: 				ggb1.instance.unregisterClientListener(drop);
  126  			}

DIDwhiteboard • OMO/G1/M2/TC/L10/Version1/slide4.js:
   41  	});
   42: 	ggb1.instance.registerClientListener(choose);
   43:     ggb2.instance.registerClientListener(drop);
   44:     ggb2.instance.registerClientListener(copy);
   45  	ggb2.updateData({ visible: false });

   78  	saveData({ count: 1, holdnum: -1 });
   79:     ggb2.instance.registerClientListener(drop);
   80:     ggb2.instance.registerClientListener(copy);
   81  	buttonGroup1.updateSingleButton({ disabled: false, text: "Submit" }, 1);

  116  	saveData({ count: 1, holdnum: -1 });
  117:     ggb2.instance.registerClientListener(drop);
  118:     ggb2.instance.registerClientListener(copy);
  119  	buttonGroup1.updateSingleButton({ disabled: false, text: "Submit" }, 1);

  265  				ggb2.instance.deleteObject("arc" + (count - 1));
  266: 				ggb2.instance.unregisterClientListener(drop);
  267  			}

DIDwhiteboard • OMO/G1/M2/TC/L10/Version2/slide1.js:
   58  	});
   59: 	ggb1.instance.registerObjectClickListener("button2", getSomeHelp);
   60: 	ggb1.instance.registerClientListener(makePoints);
   61: 	ggb1.instance.registerClickListener(deselectPoints);
   62: 	ggb1.instance.registerClientListener(drop);
   63: 	ggb1.instance.registerClientListener(copy);
   64: 	ggb1.instance.registerAddListener(setStatus);
   65: 	ggb2.instance.registerClickListener(readText);
   66  });

  294  	saveData({ count: 1, holdnum: -1 });
  295: 	ggb1.instance.registerClientListener(drop);
  296  	buttonGroup1.updateSingleButton({ disabled: true }, 2);

  539  				ggb1.instance.deleteObject("arc" + (count - 1));
  540: 				ggb1.instance.unregisterClientListener(drop);
  541  			}

DIDwhiteboard • OMO/G1/M2/TC/L10/Version2/slide2.js:
   16  	});
   17: 	ggb1.instance.registerClientListener(makePoints);
   18: 	ggb1.instance.registerClickListener(deselectPoints);
   19: 	ggb1.instance.registerClientListener(drop);
   20: 	ggb1.instance.registerClientListener(copy);
   21: 	ggb1.instance.registerAddListener(setStatus);
   22  });

   85  	saveData({ count: 1, holdnum: -1 });
   86: 	ggb1.instance.registerClientListener(drop);
   87  	buttonGroup1.updateSingleButton({ disabled: true }, 2);

  270  				ggb1.instance.deleteObject("arc" + (count - 1));
  271: 				ggb1.instance.unregisterClientListener(drop);
  272  			}

DIDwhiteboard • OMO/G1/M2/TC/L10/Version2/slide3.js:
   10  	media1.updateData({ visible: false });
   11: 	ggb1.instance.registerClientListener(makePoints);
   12: 	ggb1.instance.registerClickListener(deselectPoints);
   13: 	ggb1.instance.registerClientListener(drop);
   14: 	ggb1.instance.registerClientListener(copy);
   15: 	ggb1.instance.registerAddListener(setStatus);
   16  });

   82  	saveData({ count: 1, holdnum: -1 });
   83: 	ggb1.instance.registerClientListener(drop);
   84  	buttonGroup1.updateSingleButton({ disabled: true }, 2);

  220  				ggb1.instance.deleteObject("arc" + (count - 1));
  221: 				ggb1.instance.unregisterClientListener(drop);
  222  			}

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide1.js:
  2  
  3: ggb1.instance.registerClientListener(client);
  4  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide3.js:
  2  
  3: ggb1.instance.registerClientListener(client);
  4  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide4.js:
  2  
  3: ggb1.instance.registerClientListener(client);
  4  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide6.js:
  2  
  3: ggb1.instance.registerClientListener(client);
  4: ggb1.instance.registerObjectUpdateListener('jiggleTime', jiggleTimeLister);
  5: ggb1.instance.registerObjectUpdateListener('jiggleBlank1Time', jiggleBlank1TimeLister);
  6: ggb1.instance.registerObjectUpdateListener('jiggleBlank2Time', jiggleBlank2TimeLister);
  7: ggb1.instance.registerObjectUpdateListener('jiggleBlank3Time', jiggleBlank3TimeLister);
  8  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8.js:
  2  
  3: ggb1.instance.registerClientListener(client);
  4: ggb1.instance.registerObjectUpdateListener('jiggleTime', jiggleTimeListener);
  5: ggb1.instance.registerObjectUpdateListener('jiggleBlank1Time', jiggleBlank1TimeListener);
  6: ggb1.instance.registerObjectUpdateListener('jiggleBlank2Time', jiggleBlank2TimeListener);
  7: ggb1.instance.registerObjectUpdateListener('jiggleBlank3Time', jiggleBlank3TimeListener);
  8: ggb1.instance.registerObjectUpdateListener('correctTime', correctTimeListener);
  9: ggb1.instance.registerObjectUpdateListener('blank2Num', blank2NumListener);
  10  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt1.js:
  2  
  3: ggb1.instance.registerClientListener(client);
  4: ggb1.instance.registerObjectUpdateListener('jiggleTime', jiggleTimeListener);
  5: ggb1.instance.registerObjectUpdateListener('jiggleBlank1Time', jiggleBlank1TimeListener);
  6: ggb1.instance.registerObjectUpdateListener('jiggleBlank2Time', jiggleBlank2TimeListener);
  7: ggb1.instance.registerObjectUpdateListener('jiggleBlank3Time', jiggleBlank3TimeListener);
  8: ggb1.instance.registerObjectUpdateListener('correctTime', correctTimeListener);
  9: ggb1.instance.registerObjectUpdateListener('blank2Num', blank2NumListener);
  10  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt2.js:
   2  
   3: ggb1.instance.registerClientListener(client);
   4: ggb1.instance.registerObjectUpdateListener('jiggleTime', jiggleTimeListener);
   5: ggb1.instance.registerObjectUpdateListener('jiggleBlank1Time', jiggleBlank1TimeListener);
   6: ggb1.instance.registerObjectUpdateListener('jiggleBlank2Time', jiggleBlank2TimeListener);
   7: ggb1.instance.registerObjectUpdateListener('jiggleBlank3Time', jiggleBlank3TimeListener);
   8: ggb1.instance.registerObjectUpdateListener('correctTime', correctTimeListener);
   9: ggb1.instance.registerObjectUpdateListener('circleBlank1Time', circleBlank1TimeListener);
  10: ggb1.instance.registerObjectUpdateListener('circleBlank3Time', circleBlank3TimeListener);
  11: ggb1.instance.registerObjectUpdateListener('blank2Num', blank2NumListener);
  12  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt3.js:
   2  
   3: ggb1.instance.registerClientListener(client);
   4: ggb1.instance.registerObjectUpdateListener('jiggleTime', jiggleTimeListener);
   5: ggb1.instance.registerObjectUpdateListener('jiggleBlank1Time', jiggleBlank1TimeListener);
   6: ggb1.instance.registerObjectUpdateListener('jiggleBlank2Time', jiggleBlank2TimeListener);
   7: ggb1.instance.registerObjectUpdateListener('jiggleBlank3Time', jiggleBlank3TimeListener);
   8: ggb1.instance.registerObjectUpdateListener('correctTime', correctTimeListener);
   9: ggb1.instance.registerObjectUpdateListener('circleBlank1Time', circleBlank1TimeListener);
  10: ggb1.instance.registerObjectUpdateListener('circleBlank3Time', circleBlank3TimeListener);
  11: ggb1.instance.registerObjectUpdateListener('blank2Num', blank2NumListener);
  12  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt4.js:
   2  
   3: ggb1.instance.registerClientListener(client);
   4: ggb1.instance.registerObjectUpdateListener('jiggleTime', jiggleTimeListener);
   5: ggb1.instance.registerObjectUpdateListener('jiggleBlank1Time', jiggleBlank1TimeListener);
   6: ggb1.instance.registerObjectUpdateListener('jiggleBlank2Time', jiggleBlank2TimeListener);
   7: ggb1.instance.registerObjectUpdateListener('jiggleBlank3Time', jiggleBlank3TimeListener);
   8: ggb1.instance.registerObjectUpdateListener('correctTime', correctTimeListener);
   9: ggb1.instance.registerObjectUpdateListener('circleBlank1Time', circleBlank1TimeListener);
  10: ggb1.instance.registerObjectUpdateListener('circleBlank3Time', circleBlank3TimeListener);
  11: ggb1.instance.registerObjectUpdateListener('blank2Num', blank2NumListener);
  12  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8new.js:
   2  
   3: ggb1.instance.registerClientListener(client);
   4: ggb1.instance.registerObjectUpdateListener("jiggleTime", jiggleTimeListener);
   5: ggb1.instance.registerObjectUpdateListener(
   6    "jiggleBlank1Time",

   8  );
   9: ggb1.instance.registerObjectUpdateListener(
  10    "jiggleBlank2Time",

  12  );
  13: ggb1.instance.registerObjectUpdateListener(
  14    "jiggleBlank3Time",

  16  );
  17: ggb1.instance.registerObjectUpdateListener("correctTime", correctTimeListener);
  18: ggb1.instance.registerObjectUpdateListener(
  19    "circleBlank1Time",

  21  );
  22: ggb1.instance.registerObjectUpdateListener(
  23    "circleBlank3Time",

  25  );
  26: ggb1.instance.registerObjectUpdateListener("blank2Num", blank2NumListener);
  27  

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide2.js:
  23  
  24: ggb1.instance.registerClientListener(makePoints);
  25: ggb1.instance.registerClickListener(deselectPoints);
  26: ggb3.instance.registerClientListener(client);
  27: ggb1.instance.registerClickListener(clickedCube);
  28: ggb1.instance.registerAddListener(setStatus);
  29: ggb1.instance.registerStoreUndoListener(() => {
  30  	saveData({ saveXML: ggb1.instance.getXML() }, "ggb1");
  31  });
  32: ggb3.instance.registerStoreUndoListener(() => {
  33  	saveData({ saveXML: ggb3.instance.getXML() }, "ggb3");

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide4.js:
   12  
   13: ggb1.instance.registerClientListener(makePoints); //draw
   14: ggb1.instance.registerClickListener(deselectPoints);
   15: ggb3.instance.registerClientListener(client); //number path
   16: ggb1.instance.registerClickListener(clickedCube); //cubes
   17: ggb1.instance.registerAddListener(setStatus);
   18: ggb1.instance.registerStoreUndoListener(() => {
   19  	const saveXML = ggb1.instance.getXML();

   22  });
   23: ggb3.instance.registerStoreUndoListener(() => {
   24  	saveData({ saveXML: ggb3.instance.getXML() }, "ggb3");

  343  	saveData({ count: 1, holdnum: -1, click:0 }, "ggb1");
  344: 	ggb3.instance.registerClientListener(client);
  345  	buttonGroup1.updateSingleButton({ disabled: true }, 2);

DIDwhiteboard • OMO/G4/M2/TB/L7/V2/slide4.js:
  103  // reset stuff if student selects something
  104: ggb1.instance.registerClientListener((a) => {
  105    if (a.type === "select") {

DIDwhiteboard • OMO/G4/M2/TB/L7/V2/slide7.js:
  39  if (!input1.data.visible) {
  40:   ggb1.instance.registerObjectUpdateListener("Number", showSubmit);
  41:   ggb1.instance.registerObjectUpdateListener("B", showSubmit);
  42  }

  47    button1.updateData({ visible: true });
  48:   ggb1.instance.registerObjectUpdateListener("Number");
  49:   ggb1.instance.registerObjectUpdateListener("B");
  50  }

DIDwhiteboard • OMO/G4/M2/TB/L7/V2/slide8.js:
  33  
  34: ggb1.instance.registerObjectUpdateListener("Number", clearFeedback);
  35: ggb1.instance.registerObjectUpdateListener("B", clearFeedback);
  36  

DIDwhiteboard • OMO/G6/slide1.js:
  10  
  11: ggb1.instance.registerClientListener(sharePizza);
  12  

DIDwhiteboard • OMO/G6/slide4.js:
   86  	ggb1.instance.evalCommand("SetVisibleInView(SideUpperIndicator,1,false)");
   87: 	ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
   88  
   89: 	// ggb1.instance.registerClickListener(lightSwitch);
   90  });

  116  
  117: ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
  118  
  119: ggb1.instance.registerClickListener(lightSwitch);
  120  

DIDwhiteboard • OMO/G6/slide5.js:
   92  	ggb1.instance.setXML(getData("resetXML", "ggb1"));
   93: 	ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
   94: 	ggb1.instance.registerObjectUpdateListener("SideHandle", makeRects);
   95: //	ggb1.instance.registerClickListener(lightSwitch);
   96  	buttonGroup1.updateSingleButton({disabled: true}, 2);

  130  
  131: ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
  132: ggb1.instance.registerObjectUpdateListener("SideHandle", makeRects);
  133: ggb1.instance.registerClickListener(lightSwitch);
  134  

DIDwhiteboard • OMO/G6/slide6.js:
  139  
  140: ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
  141: ggb1.instance.registerObjectUpdateListener("SideHandle", makeRects);
  142: ggb1.instance.registerClickListener(lightSwitch);
  143  

DIDwhiteboard • OMO/G6/slide8.js:
  79  
  80: ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
  81: ggb1.instance.registerObjectUpdateListener("SideHandle", makeRects);
  82: ggb1.instance.registerClickListener(lightSwitch);
  83  

DIDwhiteboard • OMO/G6/slide9.js:
  34  
  35: ggb1.instance.registerObjectUpdateListener("TopHandle", makeRects);
  36: ggb1.instance.registerObjectUpdateListener("SideHandle", makeRects);
  37: ggb1.instance.registerClickListener(lightSwitch);
  38  

DIDwhiteboard • OMO/G7/M1/L20 - Proto 0/slide9.js:
  2  
  3: ggb2.instance.registerObjectUpdateListener("factor1", () => {
  4    link("factor1");

  6  
  7: ggb2.instance.registerObjectUpdateListener("factor2", () => {
  8    link("factor2");

DIDwhiteboard • OMO/G7/M1/L20 - Proto 0/slide11.js:
   2  
   3: ggb2.instance.registerObjectUpdateListener("factor1", () => {
   4    link("factor1");

  10  
  11: ggb2.instance.registerObjectUpdateListener("factor2", () => {
  12    link("factor2");

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide1.js:
  54  //saves work for next slide
  55: ggb1.instance.registerStoreUndoListener(() => {
  56  	saveData({ saveXML: ggb1.instance.getXML() }, "ggb1");

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide8.js:
  71  	//saves work for next slide
  72: 	ggb1.instance.registerStoreUndoListener(() => {
  73  		saveData({ saveXML: ggb1.instance.getXML() }, "ggb1");

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide10.js:
   72  	//saves work for next slide
   73: 	ggb1.instance.registerStoreUndoListener(() => {
   74  		saveData({ saveXML: ggb1.instance.getXML() }, "ggb1");

  133  	//saves work for next slide
  134: 	ggb1.instance.registerStoreUndoListener(() => {
  135  		saveData({ saveXML: ggb1.instance.getXML() }, "ggb1");

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide12.js:
  49  //saves work for next slide
  50: ggb1.instance.registerStoreUndoListener(() => {
  51  	saveData({ saveXML: ggb1.instance.getXML() }, "ggb1");

DIDwhiteboard • Other/Onboarding/Learning Task 1/slide1.js:
  22  
  23: ggb1.instance.registerObjectUpdateListener('time', startPause);
  24: ggb1.instance.registerObjectUpdateListener('pause', restartTime);
  25  

DIDwhiteboard • Other/Onboarding/Learning Task 1/slide2.js:
  19  
  20: ggb1.instance.registerObjectUpdateListener('time', startPause);
  21: ggb1.instance.registerObjectUpdateListener('pause', restartTime);
  22  

DIDwhiteboard • Print Alt/A1/M1/TD L18 - Distributions and Their Shapes/slide3.js:
  15  
  16: ggb1.instance.registerObjectUpdateListener('time', updateTime);
  17: ggb1.instance.registerObjectUpdateListener('time1', updateRight);
  18  

DIDwhiteboard • Print Alt/A1/M1/TD L18 - Distributions and Their Shapes/slide5.js:
  15  
  16: ggb1.instance.registerObjectUpdateListener('time', updateTime);
  17: ggb1.instance.registerObjectUpdateListener('time1', updateRight);
  18  

DIDwhiteboard • Print Alt/A1/M2/TA L4/slide7.js:
  5  ggb1.instance.setMode(62);
  6: ggb1.instance.registerStoreUndoListener(getDoodles);
  7  getDoodles();

DIDwhiteboard • Print Alt/A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide2.js:
  36  
  37: ggb1.instance.registerClientListener(clientFunction);
  38  

DIDwhiteboard • Print Alt/A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide3.js:
  34  
  35: ggb1.instance.registerClientListener(clientFunction);
  36  

DIDwhiteboard • Print Alt/A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide7.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerClientListener(clientListenerFunction);
  5: ggb1.instance.registerObjectUpdateListener('follow', booleanListener);
  6  

DIDwhiteboard • Print Alt/A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide8.js:
  13  ggb1.instance.setErrorDialogsActive(false);
  14: ggb1.instance.registerClientListener(clientFunction);
  15  

DIDwhiteboard • Print Alt/A1/M2/TC L15/slide3:
  298  
  299: ggb1.instance.registerObjectUpdateListener("count", update);
  300  

DIDwhiteboard • Print Alt/A1/M2/TC L16 - Using Lines to Model Bivariate Quantitative Data/slide2.js:
  4  
  5: ggb1.instance.registerObjectUpdateListener('count', buttonWork);
  6  

DIDwhiteboard • Print Alt/A1/M2/TC L17 - Modeling Relationships with a Line/slide3.js:
  8  
  9: ggb1.instance.registerObjectUpdateListener('fakeSum', updateText);
  10  

DIDwhiteboard • Print Alt/A1/M2/TC L17 - Modeling Relationships with a Line/slide4.js:
  21  
  22: ggb1.instance.registerObjectUpdateListener('sum', updateText);
  23  

DIDwhiteboard • Print Alt/A1/M2/TC L17 - Modeling Relationships with a Line/slide5.js:
  12  
  13: ggb1.instance.registerObjectUpdateListener('sumOfSquares', updateText);
  14  

DIDwhiteboard • Print Alt/A1/M2/TC L17 - Modeling Relationships with a Line/slide7.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('fakeSumOfSquares', updateText);
  11  

  17  
  18: ggb1.instance.registerObjectUpdateListener('enableButton', update);
  19  

DIDwhiteboard • Print Alt/A1/M2/TD L22 - Summarizing Bivariate Categorical Data with Two-Way Tables/slide26.js:
  42  
  43: ggb1.instance.registerObjectUpdateListener('cell01', updateB1);
  44: ggb1.instance.registerObjectUpdateListener('cell02', updateB2);
  45: ggb1.instance.registerObjectUpdateListener('cell03', updateB3);
  46: ggb1.instance.registerObjectUpdateListener('cell04', updateB4);
  47: ggb1.instance.registerObjectUpdateListener('cell11', updateR1);
  48: ggb1.instance.registerObjectUpdateListener('cell12', updateR2);
  49: ggb1.instance.registerObjectUpdateListener('cell13', updateR3);
  50: ggb1.instance.registerObjectUpdateListener('cell14', updateR4);
  51  

DIDwhiteboard • Print Alt/A1/M3/TA L3 The Graph of a Function/slide3.js:
  64  
  65: ggb2.instance.registerObjectUpdateListener("box1Done", update);
  66: ggb2.instance.registerObjectUpdateListener("box2Done", update);
  67: ggb2.instance.registerObjectUpdateListener("box3Done", update);
  68: ggb2.instance.registerObjectUpdateListener("box4Done", update);
  69: ggb2.instance.registerObjectUpdateListener("box5Done", update);
  70: ggb2.instance.registerObjectUpdateListener("box6Done", update);
  71: ggb2.instance.registerObjectUpdateListener("box7Done", update);
  72: ggb2.instance.registerObjectUpdateListener("box8Done", update);
  73: ggb2.instance.registerObjectUpdateListener("box9Done", update);
  74: ggb2.instance.registerObjectUpdateListener("box10Done", update);
  75: ggb2.instance.registerObjectUpdateListener("box11Done", update);
  76: ggb2.instance.registerObjectUpdateListener("box12Done", update);
  77: ggb2.instance.registerObjectUpdateListener("box13Done", update);
  78: ggb2.instance.registerObjectUpdateListener("box14Done", update);
  79: ggb2.instance.registerObjectUpdateListener("box15Done", update);
  80: ggb2.instance.registerObjectUpdateListener("box16Done", update);
  81: ggb2.instance.registerObjectUpdateListener("box17Done", update);
  82: ggb2.instance.registerObjectUpdateListener("box18Done", update);
  83: ggb2.instance.registerObjectUpdateListener("box19Done", update);
  84: ggb2.instance.registerObjectUpdateListener("box20Done", update);
  85: ggb2.instance.registerObjectUpdateListener("box21Done", update);
  86  
  87: ggb1.instance.registerStoreUndoListener(getDoodles);
  88  getDoodles();

DIDwhiteboard • Print Alt/A1/M3/TA L3 The Graph of a Function/slide4.js:
   19  
   20: ggb1.instance.registerStoreUndoListener(getDoodles);
   21  getDoodles();

  132  
  133: ggb2.instance.registerObjectUpdateListener("box1Done", update);
  134: ggb2.instance.registerObjectUpdateListener("box2Done", update);
  135: ggb2.instance.registerObjectUpdateListener("box3Done", update);
  136: ggb2.instance.registerObjectUpdateListener("box4Done", update);
  137: ggb2.instance.registerObjectUpdateListener("box5Done", update);
  138: ggb2.instance.registerObjectUpdateListener("box6Done", update);
  139: ggb2.instance.registerObjectUpdateListener("box7Done", update);
  140: ggb2.instance.registerObjectUpdateListener("box8Done", update);
  141: ggb2.instance.registerObjectUpdateListener("box9Done", update);
  142: ggb2.instance.registerObjectUpdateListener("box10Done", update);
  143: ggb2.instance.registerObjectUpdateListener("box11Done", update);
  144: ggb2.instance.registerObjectUpdateListener("box12Done", update);
  145: ggb2.instance.registerObjectUpdateListener("box13Done", update);
  146: ggb2.instance.registerObjectUpdateListener("box14Done", update);
  147: ggb2.instance.registerObjectUpdateListener("box15Done", update);
  148: ggb2.instance.registerObjectUpdateListener("box16Done", update);
  149: ggb2.instance.registerObjectUpdateListener("box17Done", update);
  150: ggb2.instance.registerObjectUpdateListener("box18Done", update);
  151: ggb2.instance.registerObjectUpdateListener("box19Done", update);
  152: ggb2.instance.registerObjectUpdateListener("box20Done", update);
  153: ggb2.instance.registerObjectUpdateListener("box21Done", update);
  154  

DIDwhiteboard • Print Alt/A1/M3/TA L3 The Graph of a Function/slide5.js:
   19  
   20: ggb1.instance.registerStoreUndoListener(getDoodles);
   21  getDoodles();

  132  
  133: ggb2.instance.registerObjectUpdateListener("box1Done", update);
  134: ggb2.instance.registerObjectUpdateListener("box2Done", update);
  135: ggb2.instance.registerObjectUpdateListener("box3Done", update);
  136: ggb2.instance.registerObjectUpdateListener("box4Done", update);
  137: ggb2.instance.registerObjectUpdateListener("box5Done", update);
  138: ggb2.instance.registerObjectUpdateListener("box6Done", update);
  139: ggb2.instance.registerObjectUpdateListener("box7Done", update);
  140: ggb2.instance.registerObjectUpdateListener("box8Done", update);
  141: ggb2.instance.registerObjectUpdateListener("box9Done", update);
  142: ggb2.instance.registerObjectUpdateListener("box10Done", update);
  143: ggb2.instance.registerObjectUpdateListener("box11Done", update);
  144: ggb2.instance.registerObjectUpdateListener("box12Done", update);
  145: ggb2.instance.registerObjectUpdateListener("box13Done", update);
  146: ggb2.instance.registerObjectUpdateListener("box14Done", update);
  147: ggb2.instance.registerObjectUpdateListener("box15Done", update);
  148: ggb2.instance.registerObjectUpdateListener("box16Done", update);
  149: ggb2.instance.registerObjectUpdateListener("box17Done", update);
  150: ggb2.instance.registerObjectUpdateListener("box18Done", update);
  151: ggb2.instance.registerObjectUpdateListener("box19Done", update);
  152: ggb2.instance.registerObjectUpdateListener("box20Done", update);
  153: ggb2.instance.registerObjectUpdateListener("box21Done", update);
  154  

DIDwhiteboard • Print Alt/A1/M3/TA L3 The Graph of a Function/slide7.js:
  28  
  29: ggb1.instance.registerStoreUndoListener(getDoodles);
  30  getDoodles();

  69  
  70: ggb2.instance.registerObjectUpdateListener("count", updateRight);
  71  function updateRight() {

DIDwhiteboard • Print Alt/A1/M3/TA L3 The Graph of a Function/slide10.js:
   7  });
   8: ggb1.instance.registerObjectUpdateListener("rangemin", update);
   9: ggb1.instance.registerObjectUpdateListener("rangemax", update);
  10: ggb1.instance.registerObjectUpdateListener("domainmin", update);
  11: ggb1.instance.registerObjectUpdateListener("domainmax", update);
  12  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide3.js:
   13  
   14: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   15: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
   16  
   17: ggb2.instance.registerClientListener((a) => {
   18    if (a.type == "select" && a.target == "Scrubber") {

   23    } else if (a.type == "undo") {
   24:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   25      linkGGB();

  119  
  120: ggb2.instance.registerAddListener(adds);
  121  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide4.js:
   22  
   23: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   24: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
   25  
   26: /* ggb2.instance.registerClientListener((a) => {
   27    if (a.type == "select" && a.target == "Scrubber") {

   31    } else if (a.type == "undo") {
   32:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   33      linkGGB();

  102  
  103: //ggb2.instance.registerAddListener(adds);
  104  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide6.js:
  36  
  37: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
  38: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
  39  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide7.js:
  61  
  62: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
  63: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
  64  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide9.js:
  36  
  37: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
  38: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
  39  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide10.js:
  61  
  62: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
  63: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
  64  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide12.js:
   13  
   14: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   15: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
   16  
   17: ggb2.instance.registerClientListener((a) => {
   18    if (a.type == "select" && a.target == "Scrubber") {

   23    } else if (a.type == "undo") {
   24:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   25      linkGGB();

  180  
  181: ggb2.instance.registerAddListener(adds);
  182  

DIDwhiteboard • Print Alt/A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide13.js:
   13  
   14: ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   15: ggb1.instance.registerObjectUpdateListener("speed", linkSpeed);
   16  
   17: ggb2.instance.registerClientListener((a) => {
   18    if (a.type == "select" && a.target == "Scrubber") {

   23    } else if (a.type == "undo") {
   24:     ggb2.instance.registerObjectUpdateListener("scrub", linkGGB);
   25      linkGGB();

  180  
  181: ggb2.instance.registerAddListener(adds);
  182  

DIDwhiteboard • Print Alt/A1/M3/TC l13 Modeling Elevation as a Function of Time/slide9.js:
  21  
  22: ggb1.instance.registerStoreUndoListener(getDoodles);
  23  getDoodles();

DIDwhiteboard • Print Alt/A1/M3/TC l13 Modeling Elevation as a Function of Time/slide10.js:
  63  
  64: ggb1.instance.registerAddListener(adds);
  65  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/const {text1, ggb1, ggb2, buttongroup1}=.js:
   8  
   9: // ggb2.instance.registerObjectUpdateListener("DragPoint3", updateRight);
  10: // ggb2.instance.registerObjectUpdateListener("DragPoint4", updateRight);
  11: // ggb2.instance.registerObjectUpdateListener("DragPoint6", updateRight);
  12  

  48  
  49: // ggb1.instance.registerObjectUpdateListener("showButton3", updateButton);
  50  

  65  
  66: //ggb1.instance.registerObjectUpdateListener("count", update);
  67: ggb1.instance.registerObjectUpdateListener("time1", windowAdjust);
  68: ggb1.instance.registerObjectUpdateListener("time2", windowAdjust);
  69: ggb1.instance.registerObjectUpdateListener("time3", windowAdjust);
  70: ggb1.instance.registerObjectUpdateListener("time4", windowAdjust);
  71: ggb1.instance.registerObjectUpdateListener("time5", windowAdjust);
  72: ggb1.instance.registerObjectUpdateListener("time6", windowAdjust);
  73: ggb1.instance.registerObjectUpdateListener("time7", windowAdjust);
  74: ggb1.instance.registerObjectUpdateListener("time8", windowAdjust);
  75: ggb1.instance.registerObjectUpdateListener("time9", windowAdjust);
  76: ggb1.instance.registerObjectUpdateListener("time10", windowAdjust);
  77: ggb1.instance.registerObjectUpdateListener("time11", windowAdjust);
  78: ggb1.instance.registerObjectUpdateListener("time12", windowAdjust);
  79: ggb1.instance.registerObjectUpdateListener("time13", windowAdjust);
  80: ggb1.instance.registerObjectUpdateListener("time14", windowAdjust);
  81: ggb1.instance.registerObjectUpdateListener("time15", windowAdjust);
  82  function windowAdjust() {

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide2.js:
  4  
  5: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  6: ggb1.instance.registerObjectUpdateListener("timeA", restart);
  7  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide3.js:
  4  
  5: ggb1.instance.registerObjectClickListener("Drive", startTime);
  6: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
  7: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  8  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide4.js:
   7  
   8: ggb1.instance.registerObjectClickListener("Drive", startTime);
   9: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
  10: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  11  
  12: ggb1.instance.registerClientListener(point);
  13: ggb2.instance.registerClientListener(horizontalEvent);
  14: ggb2.instance.registerClientListener(verticalEvent);
  15  

  19      if (a.hits[0] == "DragPoint") {
  20:       ggb1.instance.registerObjectUpdateListener("DragPoint", update1);
  21        resetTime();

  29      if (a.hits[0] == "tHori") {
  30:       ggb2.instance.registerObjectUpdateListener("tHori", update2);
  31        resetTime();

  39      if (a.hits[0] == "tVert") {
  40:       ggb2.instance.registerObjectUpdateListener("tVert", update2);
  41        resetTime();

  46  function update1() {
  47:   ggb2.instance.unregisterObjectUpdateListener("tHori");
  48:   ggb2.instance.unregisterObjectUpdateListener("tVert");
  49    let horizontal1 = ggb1.instance.getValue("tFakeHori");

  56  function update2() {
  57:   ggb1.instance.unregisterObjectUpdateListener("DragPoint");
  58    let horizontal2 = ggb2.instance.getValue("tHori");

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide5.js:
   7  
   8: ggb1.instance.registerObjectClickListener("Drive", startTime);
   9: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
  10: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  11  
  12: ggb1.instance.registerClientListener(point);
  13: ggb2.instance.registerClientListener(horizontalEvent);
  14: ggb2.instance.registerClientListener(verticalEvent);
  15  

  19      if (a.hits[0] == "DragPoint") {
  20:       ggb1.instance.registerObjectUpdateListener("DragPoint", update1);
  21        resetTime();

  29      if (a.hits[0] == "tHori") {
  30:       ggb2.instance.registerObjectUpdateListener("tHori", update2);
  31        resetTime();

  39      if (a.hits[0] == "tVert") {
  40:       ggb2.instance.registerObjectUpdateListener("tVert", update2);
  41        resetTime();

  46  function update1() {
  47:   ggb2.instance.unregisterObjectUpdateListener("tHori");
  48:   ggb2.instance.unregisterObjectUpdateListener("tVert");
  49    let horizontal1 = ggb1.instance.getValue("tFakeHori");

  56  function update2() {
  57:   ggb1.instance.unregisterObjectUpdateListener("DragPoint");
  58    let horizontal2 = ggb2.instance.getValue("tHori");

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide6.js:
   6  
   7: ggb1.instance.registerObjectClickListener("Drive", startTime);
   8: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
   9: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  10: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  11: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  12  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide7.js:
   6  
   7: ggb1.instance.registerObjectClickListener("Drive", startTime);
   8: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
   9: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  10: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  11: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  12  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide8.js:
   6  
   7: ggb1.instance.registerObjectClickListener("Drive", startTime);
   8: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
   9: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  10: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  11  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide9.js:
  11  
  12: ggb1.instance.registerObjectClickListener("Drive", startTime);
  13: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
  14: ggb1.instance.registerObjectUpdateListener("ScalePoint", resetTime);
  15: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  16  ggb1.instance.setAnimating("tScal", false);

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide10.js:
   7  
   8: ggb1.instance.registerObjectClickListener("Drive", startTime);
   9: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
  10: ggb1.instance.registerObjectUpdateListener("ScalePoint", resetTime);
  11: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  12  ggb1.instance.setAnimating("tScal", false);

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide11.js:
   7  
   8: ggb1.instance.registerObjectClickListener("Drive", startTime);
   9: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
  10: ggb1.instance.registerObjectUpdateListener("ScalePoint", resetTime);
  11: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  12  ggb1.instance.setAnimating("tScal", false);

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide12.js:
   6  
   7: ggb1.instance.registerObjectClickListener("Drive", startTime);
   8: ggb1.instance.registerObjectUpdateListener("DragPoint", resetTime);
   9: ggb1.instance.registerObjectUpdateListener("time", lightFuse);
  10: // ggb2.instance.registerObjectUpdateListener("tHori", update1);
  11: // ggb2.instance.registerObjectUpdateListener("tVert", update1);
  12: // ggb2.instance.registerObjectUpdateListener("tScal", update1);
  13  

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide14.js:
   9  
  10: ggb2.instance.registerUpdateListener(() => {
  11    ggb1.instance.setValue("showInput", false);

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide15.js:
  27  
  28: ggb2.instance.registerUpdateListener(() => {
  29    ggb1.instance.setValue("showInput", false);

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/slide16.js:
  54  
  55: ggb2.instance.registerUpdateListener(() => {
  56    ggb1.instance.setValue("showInput", false);

DIDwhiteboard • Print Alt/A1/M4/TA L3-Analyzing Functions that Model Projectile Motion/slide2.js:
  59  
  60: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  61  
  62: ggb1.instance.registerObjectUpdateListener(
  63    "SpringDraggerLaunchUp",

  65  );
  66: ggb1.instance.registerObjectUpdateListener(
  67    "SpringDraggerLaunchDown",

  69  );
  70: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  71  

DIDwhiteboard • Print Alt/A1/M4/TA L3-Analyzing Functions that Model Projectile Motion/slide3.js:
  106  
  107: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  108: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  109: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchUp", setText);
  110: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchDown", setText);
  111  

  465  
  466: ggb2.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher2);
  467: ggb2.instance.registerObjectUpdateListener("time", timeWatcher2);
  468: ggb2.instance.registerObjectUpdateListener("SpringDraggerLaunchUp", setText2);
  469: ggb2.instance.registerObjectUpdateListener("SpringDraggerLaunchDown", setText2);
  470  

DIDwhiteboard • Print Alt/A1/M4/TA L3-Analyzing Functions that Model Projectile Motion/slide4.js:
  70  
  71: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  72: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  73  

DIDwhiteboard • Print Alt/A1/M4/TB L11- Graphing Quadreatic Functions from Factored Form/slide3.js:
  122  
  123: ggb1.instance.registerObjectUpdateListener("show", update);
  124  

DIDwhiteboard • Print Alt/A1/M4/TB L11- Graphing Quadreatic Functions from Factored Form/slide4.js:
  145  
  146: ggb1.instance.registerObjectUpdateListener("show", update);
  147  

DIDwhiteboard • Print Alt/A1/M4/TB L11- Graphing Quadreatic Functions from Factored Form/slide5.js:
  121  
  122: ggb1.instance.registerObjectUpdateListener("show", update);
  123  

DIDwhiteboard • Print Alt/A1/M4/TB L11- Graphing Quadreatic Functions from Factored Form/slide6.js:
  121  
  122: ggb1.instance.registerObjectUpdateListener("show", update);
  123  

DIDwhiteboard • Print Alt/A1/M4/TD L23 Creating Equations of Quadratic Functions to Model Contexts/slide2.js:
  47  
  48: /*ggb1.instance.registerObjectUpdateListener("time", update);
  49  

DIDwhiteboard • Print Alt/A1/M4/TD L23 Creating Equations of Quadratic Functions to Model Contexts/slide3.js:
  80  
  81: ggb2.instance.registerObjectUpdateListener('time', update);
  82  

DIDwhiteboard • Print Alt/A1/M5/TB L08 - Exponential Functions/slide7.js:
  13    let visPoints = allPoints.filter((point) => point.includes('Vis'));
  14:   ggb1.instance.registerObjectUpdateListener('Follow', () => {
  15      for (let i = 0, L = visPoints.length; i < L; i++) {

  17          ggb1.instance.setValue('showHint', false);
  18:         ggb1.instance.unregisterObjectUpdateListener('Follow');
  19          break;

DIDwhiteboard • Print Alt/A1/M5/TC L16 - Exponential Growth/slide4.js:
  12  
  13: ggb2.instance.registerObjectUpdateListener("start", updateLeft);
  14: ggb2.instance.registerObjectUpdateListener("rate", updateLeft);
  15  

DIDwhiteboard • Print Alt/A1/M6/TA L01- Analyzing Paint Splatters/dummy slide 7.js:
  106  
  107: ggb1.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher);
  108: ggb1.instance.registerObjectUpdateListener("time", timeWatcher);
  109: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchUp", setText);
  110: ggb1.instance.registerObjectUpdateListener("SpringDraggerLaunchDown", setText);
  111  

  465  
  466: ggb2.instance.registerObjectUpdateListener("timeZoom", timeZoomWatcher2);
  467: ggb2.instance.registerObjectUpdateListener("time", timeWatcher2);
  468: ggb2.instance.registerObjectUpdateListener("SpringDraggerLaunchUp", setText2);
  469: ggb2.instance.registerObjectUpdateListener("SpringDraggerLaunchDown", setText2);
  470  

DIDwhiteboard • Print Alt/A1/M6/TA L01- Analyzing Paint Splatters/slide5.js:
  299  
  300: ggb1.instance.registerObjectUpdateListener("balloonDilation", updateRight);
  301  

  356  
  357: ggb1.instance.registerObjectUpdateListener("time2", update2);
  358  function update2() {

DIDwhiteboard • Print Alt/G6/M1/TA L4/slide10.js:
  14  
  15: ggb2.instance.registerObjectUpdateListener("bluePaintToAdd", update);
  16: ggb2.instance.registerObjectUpdateListener("redPaintToAdd", update);
  17: ggb2.instance.registerObjectUpdateListener("blueTotal", update);
  18: ggb2.instance.registerObjectUpdateListener("time", update);
  19  

DIDwhiteboard • Print Alt/G6/M1/TA L4/slide11.js:
  14  
  15: ggb2.instance.registerObjectUpdateListener("bluePaintToAdd", update);
  16: ggb2.instance.registerObjectUpdateListener("redPaintToAdd", update);
  17: ggb2.instance.registerObjectUpdateListener("blueTotal", update);
  18: ggb2.instance.registerObjectUpdateListener("time", update);
  19  

DIDwhiteboard • Print Alt/G6/M1/TA L4/slide12.js:
  14  
  15: ggb1.instance.registerObjectUpdateListener("numOfTiles", update);
  16: ggb1.instance.registerObjectUpdateListener("time", update);
  17  

DIDwhiteboard • Print Alt/G6/M1/TD l18/slide2.js:
  61  
  62: ggb1.instance.registerObjectUpdateListener("count", update);
  63: ggb1.instance.registerObjectUpdateListener("tenTime", update);
  64: ggb1.instance.registerObjectUpdateListener("time", setBack);
  65  

DIDwhiteboard • Print Alt/G6/M1/TD l18/slide3.js:
  62  
  63: ggb1.instance.registerObjectUpdateListener("count", update);
  64: ggb1.instance.registerObjectUpdateListener("twentyTime", update);
  65: ggb1.instance.registerObjectUpdateListener("time", setBack);
  66  

DIDwhiteboard • Print Alt/G6/M1/TD l18/slide5.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("time1", update);
  5  

DIDwhiteboard • Print Alt/G6/M1/TE L22/slide4.js:
  7  
  8: ggb2.instance.registerObjectUpdateListener("percent", update);
  9  

DIDwhiteboard • Print Alt/G6/M1/TE L22/slide6.js:
  10  
  11: ggb2.instance.registerObjectUpdateListener("percent", update);
  12  

DIDwhiteboard • Print Alt/G6/M1/TE L22/slide9.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("quarterCount", updateQuarter);
  5: ggb1.instance.registerObjectUpdateListener("dimeCount", updateDime);
  6: ggb1.instance.registerObjectUpdateListener("nickelCount", updateNickel);
  7: ggb1.instance.registerObjectUpdateListener("pennyCount", updatePenny);
  8  

DIDwhiteboard • Print Alt/G6/M1/TE L22/slide10.js:
  6  
  7: ggb1.instance.registerObjectUpdateListener("numberOfPennies", update);
  8  

DIDwhiteboard • Print Alt/G6/M2/TA l1/slide2.js:
  7  
  8: ggb1.instance.registerClickListener(check);
  9  

DIDwhiteboard • Print Alt/G6/M2/TE L17/slide2.js:
  2  
  3: ggb1.instance.registerStoreUndoListener(snap);
  4  function snap() {

DIDwhiteboard • Print Alt/G6/M2/TE L17/slide7.js:
  5  ggb1.instance.setVisible("fraction", false);
  6: //ggb1.instance.registerObjectUpdateListener("fraction", updateRight);
  7  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide2.js:
  17  
  18: ggb1.instance.registerObjectUpdateListener("sliderPoint", updateRight);
  19  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide3.js:
  18  
  19: ggb1.instance.registerObjectUpdateListener("sliderPoint", updateRight);
  20  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide4.js:
  17  }
  18: ggb1.instance.registerObjectUpdateListener("sliderPoint", updateRight);
  19  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide7.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('time', updateRight);
  5: ggb1.instance.registerObjectUpdateListener('sliderXPoint', update);
  6: ggb1.instance.registerObjectUpdateListener('sliderYPoint', update);
  7  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide8.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('xSliderPoint', update);
  5: ggb1.instance.registerObjectUpdateListener('time', updateRight);
  6: //ggb1.instance.registerObjectUpdateListener("xSliderPoint", updateRight);
  7  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide11.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('G', updateRight);
  5: ggb1.instance.registerObjectUpdateListener('H', update);
  6  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide12.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('G', updateRight);
  5: ggb1.instance.registerObjectUpdateListener('H', update);
  6  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide13.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('G', updateRight);
  5: ggb1.instance.registerObjectUpdateListener('H', update);
  6  

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide16.js:
  13  
  14: ggb1.instance.registerObjectUpdateListener("textA", update);
  15: ggb1.instance.registerObjectUpdateListener("textB", update);
  16  function update() {

DIDwhiteboard • Print Alt/G6/M3/TB L7/slide6.js:
  21  
  22: ggb1.instance.registerObjectUpdateListener("val1", update);
  23: ggb1.instance.registerObjectUpdateListener("val2", update);
  24  

DIDwhiteboard • Print Alt/G6/M3/TC L12/slide2.js:
   8  
   9: ggb1.instance.registerStoreUndoListener(() => {
  10    ggb1.updateData({ save64: ggb1.instance.getBase64() });

  18  
  19: ggb2.instance.registerStoreUndoListener(() => {
  20    ggb2.updateData({ save64: ggb2.instance.getBase64() });

DIDwhiteboard • Print Alt/G6/M3/TD L15/slide3.js:
  11  
  12: ggb2.instance.registerObjectUpdateListener("length", updateRight);
  13    

DIDwhiteboard • Print Alt/G6/M3/TD L15/slide4.js:
  13  
  14: ggb2.instance.registerObjectUpdateListener("length", updateRight);
  15    

  19  
  20: ggb1.instance.registerObjectUpdateListener("C", update);
  21: ggb1.instance.registerObjectUpdateListener("D", update);
  22: ggb1.instance.registerObjectUpdateListener("A", update);
  23: ggb1.instance.registerObjectUpdateListener("B", update);
  24  

DIDwhiteboard • Print Alt/G6/M3/TD L15/slide7.js:
  13  
  14: ggb2.instance.registerObjectUpdateListener("length", updateRight);
  15    

  19  
  20: ggb1.instance.registerObjectUpdateListener("C", update);
  21: ggb1.instance.registerObjectUpdateListener("D", update);
  22: ggb1.instance.registerObjectUpdateListener("A", update);
  23: ggb1.instance.registerObjectUpdateListener("B", update);
  24  

DIDwhiteboard • Print Alt/G6/M4/TA L03 Exploring Exponents/slide13.js:
   7  
   8: ggb1.instance.registerObjectUpdateListener("time1", windowAdjust);
   9: ggb1.instance.registerObjectUpdateListener("time2", windowAdjust);
  10: ggb1.instance.registerObjectUpdateListener("time3", windowAdjust);
  11: ggb1.instance.registerObjectUpdateListener("time4", windowAdjust);
  12: ggb1.instance.registerObjectUpdateListener("time5", windowAdjust);
  13: ggb1.instance.registerObjectUpdateListener("time6", windowAdjust);
  14: ggb1.instance.registerObjectUpdateListener("time7", windowAdjust);
  15: ggb1.instance.registerObjectUpdateListener("time8", windowAdjust);
  16: ggb1.instance.registerObjectUpdateListener("time9", windowAdjust);
  17: ggb1.instance.registerObjectUpdateListener("time10", windowAdjust);
  18: ggb1.instance.registerObjectUpdateListener("time11", windowAdjust);
  19: ggb1.instance.registerObjectUpdateListener("time12", windowAdjust);
  20: ggb1.instance.registerObjectUpdateListener("time13", windowAdjust);
  21: ggb1.instance.registerObjectUpdateListener("time14", windowAdjust);
  22: ggb1.instance.registerObjectUpdateListener("time15", windowAdjust);
  23  

DIDwhiteboard • Print Alt/G6/M4/TB L11 Modeling Real-World Situations and Expressions/slide2.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("distance", update);
  5: ggb1.instance.registerObjectUpdateListener("cost", update);
  6: ggb1.instance.registerObjectUpdateListener("time", update);
  7: ggb1.instance.registerObjectUpdateListener("timeStop", update);
  8  

DIDwhiteboard • Print Alt/G6/M4/TB L11 Modeling Real-World Situations and Expressions/slide3.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("time", updateStop);
  5  

DIDwhiteboard • Print Alt/G6/M4/TB L11 Modeling Real-World Situations and Expressions/slide4.js:
  17  ggb1.instance.setErrorDialogsActive(false);
  18: ggb1.instance.registerObjectUpdateListener("time", update);
  19  

DIDwhiteboard • Print Alt/G6/M4/TB L11 Modeling Real-World Situations and Expressions/slide6.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener("show", buttonWork);
  5  

DIDwhiteboard • Print Alt/G6/M4/TE L23 Graphs of Ratio Relationships/slide2.js:
  22  
  23: ggb1.instance.registerObjectUpdateListener("gallons", update);
  24: ggb1.instance.registerObjectUpdateListener("cost1", update);
  25  

DIDwhiteboard • Print Alt/G6/M4/TE L23 Graphs of Ratio Relationships/slide3.js:
  125  
  126: ggb2.instance.registerObjectUpdateListener("cost", update);
  127: ggb2.instance.registerObjectUpdateListener("cost2", update);
  128  

DIDwhiteboard • Print Alt/G6/M4/TE L23 Graphs of Ratio Relationships/slide6.js:
  5  ggb1.instance.setAxisLabels(1, "$\\mathit{n}$", "$\\mathit{t}$");
  6: ggb1.instance.registerObjectUpdateListener("D", update);
  7  

DIDwhiteboard • Print Alt/G6/M4/TE L23 Graphs of Ratio Relationships/slide7.js:
  5  
  6: ggb2.instance.registerObjectUpdateListener("ratio", updateRight);
  7  

DIDwhiteboard • Print Alt/G6/M5/TA L01- The Area os a Parallelogram/slide4.js:
  14  
  15: ggb1.instance.registerStoreUndoListener(() => {
  16    ggb1.updateData({ save64: ggb1.instance.getBase64() });
  17  });
  18: ggb2.instance.registerStoreUndoListener(() => {
  19    ggb2.updateData({ save64: ggb2.instance.getBase64() });
  20  });
  21: /*ggb1.instance.registerObjectUpdateListener("Follow", updateRight);
  22    

DIDwhiteboard • Print Alt/G6/M5/TA L01- The Area os a Parallelogram/slide8.js:
  42  
  43: ggb1.instance.registerObjectUpdateListener('Slide', updateRight);
  44  

DIDwhiteboard • Print Alt/G6/M5/TC 09-Properties of Solids/slide4.js:
   9  
  10: ggb2.instance.registerObjectUpdateListener("number", updateRight);
  11  function updateRight() {

DIDwhiteboard • Print Alt/G6/M5/TC 09-Properties of Solids/slide5.js:
  21  
  22: ggb2.instance.registerObjectUpdateListener("number", updateRight);
  23  

DIDwhiteboard • Print Alt/G6/M5/TC 09-Properties of Solids/slide6.js:
  20  button2.updateData({ disabled: true });
  21: ggb2.instance.registerObjectUpdateListener("number", updateRight);
  22  

DIDwhiteboard • Print Alt/G6/M5/TC 09-Properties of Solids/slide7.js:
  27  
  28: ggb1.instance.registerObjectUpdateListener("C", updateRight);
  29: ggb1.instance.registerObjectUpdateListener("F", updateRight);
  30: ggb1.instance.registerObjectUpdateListener("I", updateRight);
  31  

  68    );
  69:   ggb1.instance.registerObjectUpdateListener("C", updateRight);
  70:   ggb1.instance.registerObjectUpdateListener("F", updateRight);
  71:   ggb1.instance.registerObjectUpdateListener("I", updateRight);
  72    ggb2.instance.setVisible("C", false);

DIDwhiteboard • Print Alt/G6/M5/TC 09-Properties of Solids/slide9.js:
  18      buttonGroup1.updateSingleButton({ disabled: true }, 1);
  19:     ggb2.instance.registerObjectUpdateListener("number", updateRight);
  20      buttonGroup2.updateData({ visible: false }); // CW riff

DIDwhiteboard • Print Alt/G6/M5/TD L15-Exploring Volume of Fractional Cubes/slide4.js:
  129  
  130: ggb1.instance.registerObjectUpdateListener("time1", update);
  131: ggb1.instance.registerObjectUpdateListener("time2", update);
  132: ggb1.instance.registerObjectUpdateListener("time3", update);
  133  

DIDwhiteboard • Print Alt/G6/M6/TD L20 - Choosing a Measure of Center/slide2.js:
  51  
  52: ggb1.instance.registerObjectUpdateListener('show', reveal);
  53  

DIDwhiteboard • Print Alt/G6/M6/TD L20 - Choosing a Measure of Center/slide4.js:
  51  
  52: ggb1.instance.registerObjectUpdateListener('show', reveal);
  53  

DIDwhiteboard • Print Alt/G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide6.js:
  13  
  14: ggb1.instance.registerObjectUpdateListener('time', update);
  15  

DIDwhiteboard • Print Alt/G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide2.js:
  3  ggb1.instance.setErrorDialogsActive(false);
  4: ggb1.instance.registerObjectUpdateListener('timePump', keepGoing);
  5  

DIDwhiteboard • Print Alt/G7/M4/TC L15 Watering a Lawn/slide3.js:
  15  
  16: ggb1.instance.registerStoreUndoListener(() => {
  17    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • Print Alt/G7/M4/TC L15 Watering a Lawn/slide4.js:
  39  
  40: ggb1.instance.registerStoreUndoListener(() => {
  41    ggb1.updateData({ string64: ggb1.instance.getBase64() });

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/slide2.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/slide3.js:
  4  ggb2.instance.setErrorDialogsActive(false);
  5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
  6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
  7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
  8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
  9  

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/slide4.js:
   4  ggb2.instance.setErrorDialogsActive(false);
   5: ggb2.instance.registerObjectUpdateListener('planeShift', updateGGB1);
   6: ggb2.instance.registerObjectUpdateListener('angleXSlider', updateGGB1);
   7: ggb2.instance.registerObjectUpdateListener('angleYSlider', updateGGB1);
   8: ggb2.instance.registerObjectUpdateListener('angleZSlider', updateGGB1);
   9: ggb2.instance.registerObjectUpdateListener('numOfSides', updateGGB1);
  10: ggb2.instance.registerObjectUpdateListener('height', updateGGB1);
  11: ggb2.instance.registerObjectUpdateListener('radius', updateGGB1);
  12  

DIDwhiteboard • Print Alt/G7/M5/TE L22 Making Mixtures/slide3.js:
  4  
  5: ggb1.instance.registerStoreUndoListener(() => {
  6    ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • Print Alt/G7/M5/TE L22 Making Mixtures/slide5.js:
  4  
  5: ggb1.instance.registerStoreUndoListener(() => {
  6    ggb1.updateData({ save64: ggb1.instance.getBase64() });

DIDwhiteboard • Print Alt/G7/M6/TB L08 - Picking Blue/slide9.js:
  70  
  71: ggb1.instance.registerObjectUpdateListener('count', updateRight);
  72  

  98  
  99: ggb2.instance.registerStoreUndoListener(snap);
  100  

DIDwhiteboard • Print Alt/G7/M6/TB L08 - Picking Blue/slide10.js:
  70  
  71: ggb1.instance.registerObjectUpdateListener('count', updateRight);
  72  

  98  
  99: ggb2.instance.registerStoreUndoListener(snap);
  100  

DIDwhiteboard • Print Alt/G7/M6/TB L08 - Picking Blue/slide11.js:
  61  
  62: ggb1.instance.registerObjectUpdateListener('gamesPlayed', update);
  63  

DIDwhiteboard • Print Alt/G7/M6/TB L08 - Picking Blue/slide14.js:
  13  
  14: ggb1.instance.registerObjectUpdateListener('blueCount', addBlue);
  15  

  20  
  21: ggb1.instance.registerObjectUpdateListener('redCount', addRed);
  22  

DIDwhiteboard • Print Alt/G7/M6/TB L08 - Picking Blue/slide15.js:
  116  
  117: ggb1.instance.registerObjectUpdateListener('blueCount', clearOut);
  118  

  141  
  142: ggb1.instance.registerObjectUpdateListener('count', updateRight);
  143  

DIDwhiteboard • Print Alt/G7/M6/TD L19 - Memory Games/slide3.js:
  16  
  17: ggb1.instance.registerObjectUpdateListener("load", promptSet);
  18  

  47  
  48: ggb1.instance.registerObjectUpdateListener("count", updateOne);
  49  

  57  
  58: ggb1.instance.registerObjectUpdateListener("finalCountTen", updateTen);
  59  

  67  
  68: ggb1.instance.registerObjectUpdateListener("finalCountTwenty", updateTwenty);
  69  

DIDwhiteboard • Print Alt/G7/M6/TD L19 - Memory Games/slide4.js:
  17  
  18: ggb1.instance.registerObjectUpdateListener("load", promptSet);
  19  

  48  
  49: ggb1.instance.registerObjectUpdateListener("count", updateOne);
  50  

  58  
  59: ggb1.instance.registerObjectUpdateListener("finalCountTen", updateTen);
  60  

  68  
  69: ggb1.instance.registerObjectUpdateListener("finalCountTwenty", updateTwenty);
  70  

DIDwhiteboard • Print Alt/G8/M1/TE L21 Approximate Values of Roots and Pi Squared/slide5.js:
  4  
  5: ggb1.instance.registerObjectUpdateListener('Dragger', () => {
  6    if (ggb1.instance.getValue('trailEnd')) {
  7      ggb1.instance.setValue('showHint', false);
  8:     ggb1.instance.unregisterObjectUpdateListener('Dragger');
  9    }

DIDwhiteboard • Print Alt/G8/M2/TD L18 - Proving the Converse of the Pythagorean/slide3.js:
  12  
  13: ggb1.instance.registerObjectUpdateListener('time', whatsNext);
  14  

DIDwhiteboard • Print Alt/G8/M3/TA L01 - Exploring Dilations/slide7.js:
  4  
  5: ggb1.instance.registerUpdateListener(moveIt);
  6: ggb1.instance.registerClientListener(clients);
  7  

DIDwhiteboard • Print Alt/G8/M3/TA L01 - Exploring Dilations/slide8.js:
  19  
  20: ggb1.instance.registerUpdateListener(moveIt);
  21: ggb1.instance.registerClientListener(clients);
  22: ggb1.instance.registerObjectUpdateListener("scale", scaleIt);
  23  

DIDwhiteboard • Print Alt/G8/M4/TC L12 - Solutions to Linear Equations in Two Variables/slide4:
  14  
  15: ggb1.instance.registerClickListener(styleIt);
  16  

  50  
  51:   ggb1.instance.registerObjectUpdateListener('count', update);
  52  

  57      }
  58:     ggb1.instance.unregisterObjectUpdateListener('count');
  59    }

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide3.js:
   4  
   5: ggb1.instance.registerClientListener(clone);
   6: ggb1.instance.registerObjectUpdateListener(
   7    "picsALength",

   9  );
  10: ggb1.instance.registerObjectUpdateListener(
  11    "picsBLength",

  13  );
  14: ggb1.instance.registerObjectUpdateListener("Follow", mouseMoved);
  15: ggb1.instance.registerObjectUpdateListener("time", snapToLanding);
  16: ggb1.instance.registerClickListener(deletePoint);
  17  

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide4.js:
   4  
   5: ggb1.instance.registerClientListener(clone);
   6: ggb1.instance.registerObjectUpdateListener('picsALength', preventAllowClonePicA);
   7: ggb1.instance.registerObjectUpdateListener('picsBLength', preventAllowClonePicB);
   8: ggb1.instance.registerObjectUpdateListener('Follow', mouseMoved);
   9: ggb1.instance.registerObjectUpdateListener('time', snapToLanding);
  10: ggb1.instance.registerClickListener(deletePoint);
  11  

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide4prev.js:
   4  
   5: ggb1.instance.registerClientListener(clone);
   6: ggb1.instance.registerObjectUpdateListener(
   7    "picsALength",

   9  );
  10: ggb1.instance.registerObjectUpdateListener(
  11    "picsBLength",

  13  );
  14: ggb1.instance.registerObjectUpdateListener("Follow", mouseMoved);
  15: ggb1.instance.registerObjectUpdateListener("time", snapToLanding);
  16: ggb1.instance.registerClickListener(deletePoint);
  17  

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide7.js:
  52  
  53: ggb1.instance.registerClientListener(listenToClient);
  54: ggb1.instance.registerClickListener(deletePoint);
  55  

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide7prev.js:
  55  
  56: ggb1.instance.registerClientListener(listenToClient);
  57: ggb1.instance.registerClickListener(deletePoint);
  58  

DIDwhiteboard • Print Alt/G8/M6/TA L01 - Motion and Speed/slide2.js:
  12  
  13: ggb1.instance.registerObjectUpdateListener('startB', nextCar);
  14  

  23  
  24: ggb1.instance.registerObjectUpdateListener('startA', firstCar);
  25  

DIDwhiteboard • Print Alt/G8/M6/TA L01 - Motion and Speed/slide7.js:
   9  
  10: ggb1.instance.registerObjectUpdateListener('dropTime', tableWork);
  11  

DIDwhiteboard • Print Alt/G8/M6/TC L11 - Scatter Plots/slide3.js:
  151  for (let i = 1, L = pinArray.length + 1; i < L; i++) {
  152:   ggb1.instance.registerObjectUpdateListener(`pin${i}Time`, () => {
  153      let num = Math.round(ggb1.instance.getValue(`pin${i}Time`) * 1) / 1;

DIDwhiteboard • Print Alt/G8/M6/TE L22 - Volume of Cylinders/slide2.js:
  5  
  6: ggb1.instance.registerObjectUpdateListener('n', () => {
  7    updateRight();

DIDwhiteboard • Print Alt/G8/M6/TE L22 - Volume of Cylinders/slide3.js:
  15  
  16: ggb1.instance.registerObjectUpdateListener('time1', enableButton);
  17: ggb1.instance.registerObjectUpdateListener('time2', enableButton3);
  18  

DIDwhiteboard • Print Alt/G8/M6/TE L22 - Volume of Cylinders/slide4.js:
  21  
  22: //ggb1.instance.registerObjectUpdateListener("timeCircles", advance2);
  23: //ggb1.instance.registerObjectUpdateListener("timeLine", advance3);
  24  

DIDwhiteboard • Print Alt/G8/M6/TE L22 - Volume of Cylinders/slide7.js:
  20  
  21: ggb2.instance.registerObjectUpdateListener('n', update);
  22  

DIDwhiteboard • Print Alt/G8/M6/TE L22 - Volume of Cylinders/slide9.js:
  7  
  8: ggb2.instance.registerObjectUpdateListener('n', update);
  9  
