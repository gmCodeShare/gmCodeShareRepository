# Query: /[^\\/]+/
# Flags: RegExp
# Including: ./DIDwhiteboard
# Excluding: Answer Key not working.json, PageSource.html, PageSource.js, PageSource2.html, ROL.js
# ContextLines: 1

3714 results - 659 files

DIDwhiteboard • 7A/M1/whatIsThisForslide1.js:
  14      text1.updateData({ visible: false });
  15:     // create/update a dummy variable to keep track of whether the slide has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • 7A/M1/whatIsThisForslide2.js:
  11      text1.updateData({ text: `$7-2=5$` });
  12:     // create/update a dummy variable to keep track of whether the slide has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide2.js:
  27    if (result.error) {
  28:     inputComp.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  29      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide4.js:
  27    if (result.error) {
  28:     inputComp.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  29      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide5.js:
  18      buttonGroup2.updateData({ visible: false });
  19:     // create/update a dummy variable to keep track of whether the slide has initialized
  20      ggb1.updateData({ init: true });

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide6.js:
  13      shareButton1.updateData({ visible: false });
  14:     // create/update a dummy variable to keep track of whether the slide has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide7.js:
  26      // buttonGroup2.updateData({ visible: false });
  27:     // create/update a dummy variable to keep track of whether the slide has initialized
  28      ggb1.updateData({ init: true });

  46  
  47: let baseAndExponent = prevTotal.match(/(.+)e\+?(.+)/);
  48  console.log(baseAndExponent);

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide8.js:
  16      // buttonGroup2.updateData({ visible: false });
  17:     // create/update a dummy variable to keep track of whether the slide has initialized
  18      ggb1.updateData({ init: true });

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide13.js:
  45    if (result.error) {
  46:     inputComp.updateData({ last: `${makeExp(min)}`, text: `${makeExp(min)}` }); // what should the text do/say if students input "cabbage"?
  47      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide14.js:
  71    if (result.error) {
  72:     inputComp.updateData({ last: `${makeExp(min)}`, text: `${makeExp(min)}` }); // what should the text do/say if students input "cabbage"?
  73      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide15.js:
  30      );
  31:     // create/update a dummy variable to keep track of whether the slide has initialized
  32      text1.updateData({ init: true });

DIDwhiteboard • 7A/M1/TC L16 - More Scientific Notation/slide16.js:
  26      );
  27:     // create/update a dummy variable to keep track of whether the slide has initialized
  28      text1.updateData({ init: true });

DIDwhiteboard • 7A/M1/TD L21 - Approximate Values of Roots/OLDslide2.js:
  35  //   ggb1.instance.stopAnimation();
  36: //   // ggb1.instance.setValue('timeSelfSeg', 0);
  37: //   // buttonGroup1.updateSingleButton({ disabled: false }, 1);
  38  // });

DIDwhiteboard • 7A/M2/TC L14 - Exploring Graphs of Proportional Relationships/slide5.js:
  26  
  27: const graphEquationArr = [undefined, `f(x)=If(0 ≤ x ≤ ${graphEndXArr[1]}, ((${graphStartYArr[1]} - ${graphEndYArr[1]}) / (${graphStartXArr[1]} - ${graphEndXArr[1]}))((x) - ${graphStartXArr[1]}) + ${graphStartYArr[1]})`, `f(x)=If(0 ≤ x ≤ ${graphEndXArr[2]}, ((${graphStartYArr[2]} - ${graphEndYArr[2]}) / (${graphStartXArr[2]} - ${graphEndXArr[2]}))((x) - ${graphStartXArr[2]}) + ${graphStartYArr[2]})`, `f(x)=If(0 ≤ x ≤ ${graphEndXArr[3]}, x^2)`];
  28  

DIDwhiteboard • A1/M1/TA L05 - Multiplying Polynomial Expressions/slide16.js:
  172  function undoLaTeX(inp) {
  173:   let frac = inp.replace(/\\frac{/g, "(");
  174:   let fracMid = frac.replace(/\}\{/g, ")/(");
  175:   let leftParen = fracMid.replace(/\\left/g, "");
  176:   let rightParen = leftParen.replace(/\\right/g, "");
  177:   let absLeft = rightParen.replace(/\|/, "abs(");
  178:   let absRight = absLeft.replace(/\|/, ")");
  179:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  180:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  181:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  182:   let brackLeft = brackRight.replace(/\{/g, "(");
  183:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  184:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  185:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  186:   let finalAnswer = cDot.replace(/\\Box/g, "0");
  187    return finalAnswer;

  196    // console.log(smoothExp2);
  197:   let letterCheck = /[a-w|y-z]/;
  198    if (

DIDwhiteboard • A1/M1/TA L05 - Multiplying Polynomial Expressions/slide17.js:
  136  		buttonGroup1.updateData({ visible: false });
  137: 		// create/update a dummy variable to keep track of whether the slide has initialized
  138  		text1.updateData({ init: true });

  200  function undoLaTeX(inp) {
  201: 	let frac = inp.replace(/\\frac{/g, "(");
  202: 	let fracMid = frac.replace(/\}\{/g, ")/(");
  203: 	let leftParen = fracMid.replace(/\\left/g, "");
  204: 	let rightParen = leftParen.replace(/\\right/g, "");
  205: 	let absLeft = rightParen.replace(/\|/, "abs(");
  206: 	let absRight = absLeft.replace(/\|/, ")");
  207: 	let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  208: 	let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  209: 	let brackRight = cbrtLeft.replace(/\}/g, ")");
  210: 	let brackLeft = brackRight.replace(/\{/g, "(");
  211: 	let lessThan = brackLeft.replace(/\\le/g, "<=");
  212: 	let greaterThan = lessThan.replace(/\\ge/g, ">=");
  213: 	let cDot = greaterThan.replace(/\\cdot/g, "*");
  214: 	let finalAnswer = cDot.replace(/\\Box/g, "0");
  215  	return finalAnswer;

  224  	// console.log(smoothExp2);
  225: 	let letterCheck = /[a-w|y-z]/;
  226  	if (

DIDwhiteboard • A1/M1/TB L11 - Writing and Solving Equations in One Variable/slide9.js:
  35      submitButton1.updateData({ visible: false });
  36:     // create/update a dummy variable to keep track of whether the screen has initialized
  37      ggb1.updateData({ init: true });

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 1.js:
  449    }
  450:   // check true/false statements
  451    let allTrue =

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 2.js:
  450    }
  451:   // check true/false statements
  452    let allTrue =

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 4.js:
  45  
  46:   // const lastRegister = discardOldResponses(register).reverse(); // reversing so older responses are first
  47    let myEntry = register.filter(({ info }) => info.isSelf);

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 5.js:
  82    lastRegister.forEach(({ data, info }) => {
  83:     /* xVals: [...ggb1.data.plotted], */
  84      const { xVals } = data;

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 6.js:
   99    lastRegister.forEach(({ data, info }) => {
  100:     /* xVals: [...ggb1.data.plotted], */
  101      const { xVals } = data;

DIDwhiteboard • A1/M1/TC L15 - Solving and Graphing Compound Inequalities/slide 7.js:
  24    submitText1.updateData({ visible: false });
  25:   submitInput1.updateData({ visible: false /* text: `\\{x|\\}` */ });
  26    submitButton1.updateData({ visible: false });

DIDwhiteboard • A1/M1/TD L18 - Distributions and Their Shapes/slide2.js:
  41    let textEntered = input1.data.text;
  42:   // //console.log(textEntered);
  43    let originTextMatch = originText.substring(0, textEntered.length);

  45    let textEnteredLength = input1.data.text.length;
  46:   //   // Matches the lists and give number og letters in order
  47    if (textEntered == originTextMatch) {

DIDwhiteboard • A1/M1/TD L18 - Distributions and Their Shapes/slide3.js:
  39    let textEntered = input1.data.text;
  40:   // //console.log(textEntered);
  41    let originTextMatch = originText.substring(0, textEntered.length);

  43    let textEnteredLength = input1.data.text.length;
  44:   //   // Matches the lists and give number og letters in order
  45    if (textEntered == originTextMatch) {

DIDwhiteboard • A1/M2/TA L04 - Solutions Sets of Linear Inequalites in Two Variables/slide12.js:
  28  button2.on("click", () => {
  29:   let frac = input2.data.text.replace(/\\frac{/, "("); //replaces \frac{
  30:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  31:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  32:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
  33:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  34:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  35:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  36:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  37:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  38:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  39:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  40:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  41:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  42    ggb1.instance.setVisible("a", false);

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide1.js:
  141  submitButton1.on("click", () => {
  142:   let frac = submitInput1.data.text.replace(/\\frac{/, "("); //replaces \frac{
  143:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  144:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  145:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
  146:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  147:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  148:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  149:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  150:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  151:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  152:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  153:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  154:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  155    ggb1.instance.deleteObject("studentGraph");

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide3.js:
  105  submitButton1.on("click", () => {
  106:   let frac = submitInput1.data.text.replace(/\\frac{/, "("); //replaces \frac{
  107:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  108:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  109:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
  110:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  111:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  112:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  113:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  114:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  115:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  116:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  117:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  118:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  119    ggb1.instance.deleteObject("studentGraph");

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide4.js:
  105  submitButton1.on("click", () => {
  106:   let frac = submitInput1.data.text.replace(/\\frac{/, "("); //replaces \frac{
  107:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  108:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  109:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
  110:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  111:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  112:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  113:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  114:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  115:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  116:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  117:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  118:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  119    ggb1.instance.deleteObject("studentGraph");

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide11.js:
  169  function formatInput(a) {
  170:   let frac = a.replace(/\\frac{/, "("); //replaces \frac{
  171:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  172:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  173:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
  174:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  175:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  176:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  177:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  178:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  179:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  180:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  181:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  182:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  183    return finalAnswer;

  186  function convertToEquation(a) {
  187:   let removeGreaterThan = a.replace(/>/, "=");
  188:   let removeLessThan = removeGreaterThan.replace(/</, "=");
  189:   let convertedToEquation = removeLessThan.replace(/==/g, "=");
  190    return convertedToEquation;

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide12.js:
   29  function setInitialState() {
   30:   //change this here if desired behavior is hide/none
   31    let buttonGroupVisibilityBehavior = 'none';

  656  function formatInput(a) {
  657:   let frac = a.replace(/\\frac{/, '('); //replaces \frac{
  658:   let fracMid = frac.replace(/\}\{/, ')/('); //replaces }{ from \frac{}{}
  659:   let leftParen = fracMid.replace(/\\left/g, ''); //replaces \left part of parens
  660:   let rightParen = leftParen.replace(/\\right/g, ''); //replaces \right part of parens
  661:   let absLeft = rightParen.replace(/\|/, 'abs('); //replaces left bar for absolute value
  662:   let absRight = absLeft.replace(/\|/, ')'); //replaces right bar for absolute value
  663:   let squirtLeft = absRight.replace(/\\sqrt\{/, 'sqrt('); //replaces \sqrt for square root function
  664:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, 'cbrt('); //replaces \sqrt[3]{} for cube root function
  665:   let brackRight = cbrtLeft.replace(/\}/g, ')'); //replaces the right side brackets
  666:   let brackLeft = brackRight.replace(/\{/g, '('); //replaces any remaining left side brackets
  667:   let lessThan = brackLeft.replace(/\\le/g, '<='); //replaces less than
  668:   let greaterThan = lessThan.replace(/\\ge/g, '>='); //replaces greater than
  669:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  670    return finalAnswer;

  673  function formatForEquation(a) {
  674:   let lessThan = a.replace(/</g, '=');
  675:   let greaterThan = lessThan.replace(/>/g, '=');
  676:   let singleEqual = greaterThan.replace(/==/g, '=');
  677    return singleEqual;

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide13.js:
  961  function formatInput(a) {
  962:   let frac = a.replace(/\\frac{/, '('); //replaces \frac{
  963:   let fracMid = frac.replace(/\}\{/, ')/('); //replaces }{ from \frac{}{}
  964:   let leftParen = fracMid.replace(/\\left/g, ''); //replaces \left part of parens
  965:   let rightParen = leftParen.replace(/\\right/g, ''); //replaces \right part of parens
  966:   let absLeft = rightParen.replace(/\|/, 'abs('); //replaces left bar for absolute value
  967:   let absRight = absLeft.replace(/\|/, ')'); //replaces right bar for absolute value
  968:   let squirtLeft = absRight.replace(/\\sqrt\{/, 'sqrt('); //replaces \sqrt for square root function
  969:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, 'cbrt('); //replaces \sqrt[3]{} for cube root function
  970:   let brackRight = cbrtLeft.replace(/\}/g, ')'); //replaces the right side brackets
  971:   let brackLeft = brackRight.replace(/\{/g, '('); //replaces any remaining left side brackets
  972:   let lessThan = brackLeft.replace(/\\le/g, '<='); //replaces less than
  973:   let greaterThan = lessThan.replace(/\\ge/g, '>='); //replaces greater than
  974:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  975    return finalAnswer;

  978  function formatForEquation(a) {
  979:   let lessThan = a.replace(/</g, '=');
  980:   let greaterThan = lessThan.replace(/>/g, '=');
  981:   let singleEqual = greaterThan.replace(/==/g, '=');
  982    return singleEqual;

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/archive/slide12old.js:
   39  function setInitialState() {
   40:   //change this here if desired behavior is hide/none
   41    let buttonGroupVisibilityBehavior = 'hide';

  262  
  263: // //clicking "Graph the lines"
  264  // buttonGroup12.on('click:1', () => {

  273  
  274: // //clicking "Go right to writing inequalities"
  275  // buttonGroup12.on('click:2', () => {

  298  
  299: // //clicking "Go back"
  300  // buttonGroup12.on('click:3', () => {

  464  function formatInput(a) {
  465:   let frac = a.replace(/\\frac{/, '('); //replaces \frac{
  466:   let fracMid = frac.replace(/\}\{/, ')/('); //replaces }{ from \frac{}{}
  467:   let leftParen = fracMid.replace(/\\left/g, ''); //replaces \left part of parens
  468:   let rightParen = leftParen.replace(/\\right/g, ''); //replaces \right part of parens
  469:   let absLeft = rightParen.replace(/\|/, 'abs('); //replaces left bar for absolute value
  470:   let absRight = absLeft.replace(/\|/, ')'); //replaces right bar for absolute value
  471:   let squirtLeft = absRight.replace(/\\sqrt\{/, 'sqrt('); //replaces \sqrt for square root function
  472:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, 'cbrt('); //replaces \sqrt[3]{} for cube root function
  473:   let brackRight = cbrtLeft.replace(/\}/g, ')'); //replaces the right side brackets
  474:   let brackLeft = brackRight.replace(/\{/g, '('); //replaces any remaining left side brackets
  475:   let lessThan = brackLeft.replace(/\\le/g, '<='); //replaces less than
  476:   let greaterThan = lessThan.replace(/\\ge/g, '>='); //replaces greater than
  477:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  478    return finalAnswer;

DIDwhiteboard • A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/archive/slide15ToDelete.js:
   41  function setInitialState() {
   42:   //change this here if desired behavior is hide/none
   43    let buttonGroupVisibilityBehavior = "hide";

  464  function formatInput(a) {
  465:   let frac = a.replace(/\\frac{/, "("); //replaces \frac{
  466:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  467:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  468:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
  469:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  470:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  471:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  472:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  473:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  474:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  475:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  476:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  477:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  478    return finalAnswer;

DIDwhiteboard • A1/M2/TC L17 - Modeling Relationships with a Line/Slide 6.js:
  45        pointB: ggb1.innerData["RightDragPointA"],
  46:       // this would need an extra condition added to the above if: controls.current == now + 1 && ggb1.data.storedPoints // CW
  47:       //points: [...ggb1.data.storedPoints], // CW
  48      });

DIDwhiteboard • A1/M2/TD L22 - Summarizing Bivariate Categorical Data with Two-Way Tables/Slide 11.js:
  20        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  21:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  22      });

DIDwhiteboard • A1/M2/TD L22 - Summarizing Bivariate Categorical Data with Two-Way Tables/Slide 19.js:
   97    let englishConnectorCell =
   98:     Math.round((englishConnectorCount / total) * 100) / 100;
   99:   let mathConnectorCell = Math.round((mathConnectorCount / total) * 100) / 100;
  100:   let connectorCell = Math.round((connectorCount / total) * 100) / 100;
  101:   let englishMoverCell = Math.round((englishMoverCount / total) * 100) / 100;
  102:   let mathMoverCell = Math.round((mathMoverCount / total) * 100) / 100;
  103:   let moverCell = Math.round((moverCount / total) * 100) / 100;
  104    let englishPlannerCell =
  105:     Math.round((englishPlannerCount / total) * 100) / 100;
  106:   let mathPlannerCell = Math.round((mathPlannerCount / total) * 100) / 100;
  107:   let plannerCell = Math.round((plannerCount / total) * 100) / 100;
  108    let englishThinkerCell =
  109:     Math.round((englishThinkerCount / total) * 100) / 100;
  110:   let mathThinkerCell = Math.round((mathThinkerCount / total) * 100) / 100;
  111:   let thinkerCell = Math.round((thinkerCount / total) * 100) / 100;
  112:   let mathCell = Math.round((mathCount / total) * 100) / 100;
  113:   let englishCell = Math.round((englishCount / total) * 100) / 100;
  114    table2.updateCell(0, 1, { value: `$${mathConnectorCell}$` });

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide3.js:
  38    button1.updateData({ text: "Submitted", disabled: true });
  39:   let pattern = /(\d+,-?\d+)/;
  40:   // let pattern2 = /(\d+. . ,. . -?\d+)/;
  41    if (pattern.test(table1.getCell(0, 2).value)) {

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide4.js:
  46  
  47: let pattern = /(\d+,-?\d+)/;
  48  if (pattern.test(oldCell02)) {

  82    button1.updateData({ text: "Submitted", disabled: true });
  83:   let pattern = /(\d+,-?\d+)/;
  84    if (pattern.test(table1.getCell(1, 2).value)) {

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide5.js:
   66  
   67: let pattern = /(\d+,-?\d+)/;
   68  if (pattern.test(oldCell02)) {

  118    button1.updateData({ text: "Submitted", disabled: true });
  119:   let pattern = /(\d+,-?\d+)/;
  120    if (pattern.test(table1.getCell(3, 2).value)) {

DIDwhiteboard • A1/M3/TA L03 - The Graph of a Function/slide6.js:
  102  
  103: let pattern = /(\d+,-?\d+)/;
  104  if (pattern.test(oldCell02)) {

  186    button1.updateData({ text: "Submitted", disabled: true });
  187:   let pattern = /(\d+,-?\d+)/;
  188    if (pattern.test(table1.getCell(5, 2).value)) {

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide15.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TB L07 - Exploring Key Features of a Function and Its Graph/slide17.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide3.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide6.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide9.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide11.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide13.js:
  17    lastRegister.forEach(({ data, info }) => {
  18:     /* doodles: [...ggb2.data.cmdStrings], */
  19      const { doodles } = data;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide16.js:
   44    const plainText = undoLaTeX(submitInput1.data.text);
   45:   let pattern = /(f\(x\)|f\(t\)|y)=(.*)/;
   46    if (!pattern.test(plainText)) {

  181  function undoLaTeX(inp) {
  182:   let frac = inp.replace(/\\frac{/, "(");
  183:   let fracMid = frac.replace(/\}\{/, ")/(");
  184:   let leftParen = fracMid.replace(/\\left/g, "");
  185:   let rightParen = leftParen.replace(/\\right/g, "");
  186:   let absLeft = rightParen.replace(/\|/, "abs(");
  187:   let absRight = absLeft.replace(/\|/, ")");
  188:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  189:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  190:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  191:   let brackLeft = brackRight.replace(/\{/g, "(");
  192:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  193:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  194:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  195    let finalAnswer = cDot;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide17.js:
  159  function undoLaTeX(inp) {
  160:   let frac = inp.replace(/\\frac{/, "(");
  161:   let fracMid = frac.replace(/\}\{/, ")/(");
  162:   let leftParen = fracMid.replace(/\\left/g, "");
  163:   let rightParen = leftParen.replace(/\\right/g, "");
  164:   let absLeft = rightParen.replace(/\|/, "abs(");
  165:   let absRight = absLeft.replace(/\|/, ")");
  166:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  167:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  168:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  169:   let brackLeft = brackRight.replace(/\{/g, "(");
  170:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  171:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  172:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  173    let finalAnswer = cDot;

DIDwhiteboard • A1/M3/TC L13 - Modeling Elevation as a Function of Time/slide18.js:
  115  function expressYourself(str) {
  116:   const pattern = /If\((.*), (.*)\)/;
  117    if (!str || !pattern.test(str)) {

  164        .replaceAll(` `, "");
  165:     let pattern = /(y)=(.+)/;
  166      // console.log("eqNoLatex", eqNoLatex);

  181        .replaceAll(` `, "");
  182:     let pattern2 = /(.+)(<=|<)(x|t)(<=|<)(.+)/;
  183      // console.log("ineqNoLatex", ineqNoLatex);

  223        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  224:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  225      });

  244  function undoLaTeX(inp) {
  245:   let frac = inp.replace(/\\frac{/, "(");
  246:   let fracMid = frac.replace(/\}\{/, ")/(");
  247:   let leftParen = fracMid.replace(/\\left/g, "");
  248:   let rightParen = leftParen.replace(/\\right/g, "");
  249:   let absLeft = rightParen.replace(/\|/, "abs(");
  250:   let absRight = absLeft.replace(/\|/, ")");
  251:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  252:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  253:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  254:   let brackLeft = brackRight.replace(/\{/g, "(");
  255:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  256:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  257:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  258    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide8.js:
  48    const inputPlain = undoLaTeX(input1.data.text);
  49:   const expression = inputPlain.replace(/R\(x\)=/, "");
  50    ggb1.instance.setErrorDialogsActive(false);

  61  function undoLaTeX(inp) {
  62:   let frac = inp.replace(/\\frac{/, "(");
  63:   let fracMid = frac.replace(/\}\{/, ")/(");
  64:   let leftParen = fracMid.replace(/\\left/g, "");
  65:   let rightParen = leftParen.replace(/\\right/g, "");
  66:   let absLeft = rightParen.replace(/\|/, "abs(");
  67:   let absRight = absLeft.replace(/\|/, ")");
  68:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  69:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  70:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  71:   let brackLeft = brackRight.replace(/\{/g, "(");
  72:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  73:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  74:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  75    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide9.js:
  36    const inputPlain = undoLaTeX(equa);
  37:   const expression = inputPlain.replace(/R\(x\)=/, "");
  38    ggb1.instance.setErrorDialogsActive(false);

  52  function undoLaTeX(inp) {
  53:   let frac = inp.replace(/\\frac{/, "(");
  54:   let fracMid = frac.replace(/\}\{/, ")/(");
  55:   let leftParen = fracMid.replace(/\\left/g, "");
  56:   let rightParen = leftParen.replace(/\\right/g, "");
  57:   let absLeft = rightParen.replace(/\|/, "abs(");
  58:   let absRight = absLeft.replace(/\|/, ")");
  59:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  60:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  61:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  62:   let brackLeft = brackRight.replace(/\{/g, "(");
  63:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  64:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  65:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  66    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide10.js:
  36    const inputPlain = undoLaTeX(equa);
  37:   const expression = inputPlain.replace(/R\(x\)=/, "");
  38    ggb1.instance.setErrorDialogsActive(false);

  54  function undoLaTeX(inp) {
  55:   let frac = inp.replace(/\\frac{/, "(");
  56:   let fracMid = frac.replace(/\}\{/, ")/(");
  57:   let leftParen = fracMid.replace(/\\left/g, "");
  58:   let rightParen = leftParen.replace(/\\right/g, "");
  59:   let absLeft = rightParen.replace(/\|/, "abs(");
  60:   let absRight = absLeft.replace(/\|/, ")");
  61:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  62:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  63:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  64:   let brackLeft = brackRight.replace(/\{/g, "(");
  65:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  66:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  67:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  68    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide11.js:
  36    const inputPlain = undoLaTeX(equa);
  37:   const expression = inputPlain.replace(/R\(x\)=/, "");
  38    ggb1.instance.setErrorDialogsActive(false);

  54  function undoLaTeX(inp) {
  55:   let frac = inp.replace(/\\frac{/, "(");
  56:   let fracMid = frac.replace(/\}\{/, ")/(");
  57:   let leftParen = fracMid.replace(/\\left/g, "");
  58:   let rightParen = leftParen.replace(/\\right/g, "");
  59:   let absLeft = rightParen.replace(/\|/, "abs(");
  60:   let absRight = absLeft.replace(/\|/, ")");
  61:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  62:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  63:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  64:   let brackLeft = brackRight.replace(/\{/g, "(");
  65:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  66:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  67:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  68    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TB L11 - Graphing Quadratic Functions from Factored Form/slide12.js:
  25    const inputPlain = undoLaTeX(equa);
  26:   const expression = inputPlain.replace(/R\(x\)=/, "");
  27    ggb1.instance.setErrorDialogsActive(false);

  43  function undoLaTeX(inp) {
  44:   let frac = inp.replace(/\\frac{/, "(");
  45:   let fracMid = frac.replace(/\}\{/, ")/(");
  46:   let leftParen = fracMid.replace(/\\left/g, "");
  47:   let rightParen = leftParen.replace(/\\right/g, "");
  48:   let absLeft = rightParen.replace(/\|/, "abs(");
  49:   let absRight = absLeft.replace(/\|/, ")");
  50:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  51:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  52:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  53:   let brackLeft = brackRight.replace(/\{/g, "(");
  54:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  55:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  56:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  57    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/slide1.js:
  35  button1.on("click", () => {
  36:   let frac = input1.data.text.replace(/\\frac{/, "("); //replaces \frac{
  37:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  38:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  39:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces\right part of parens
  40:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  41:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  42:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  43:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  44:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  45:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  46:   let finalAnswer = brackLeft.replace(/ /, ""); //empty in case of additions
  47    ggb1.instance.setTextValue("studentFunction", finalAnswer);

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/slide3.js:
  100  function hexToRgb(hex) {
  101:     var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  102      return result ? {

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/slide5.js:
  82        table1.getCell(i - 2, 1).value.includes('x') ||
  83:       /\w/.test(table1.getCell(i - 2, 1).value == false)
  84      ) {
  85:       // console.log(/\w/.test(table1.getCell(i - 2, 1).value));
  86:       let frac = table1.getCell(i - 2, 1).value.replace(/\\frac{/, '(');
  87:       let fracMid = frac.replace(/\}\{/, ')/(');
  88:       let leftParen = fracMid.replace(/\\left/g, '');
  89:       let rightParen = leftParen.replace(/\\right/g, '');
  90:       let absLeft = rightParen.replace(/\|/, 'abs(');
  91:       let absRight = absLeft.replace(/\|/, ')');
  92:       let squirtLeft = absRight.replace(/\\sqrt\{/, 'sqrt(');
  93:       let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, 'cbrt(');
  94:       let brackRight = cbrtLeft.replace(/\}/, ')');
  95:       let brackLeft = brackRight.replace(/\{/, '(');
  96:       let finalAnswer = '"' + brackLeft.replace(/\{/, '(') + '"';
  97        // console.log("replaced: " + finalAnswer);

DIDwhiteboard • A1/M4/TC L20 - Art with Transformations (Optional)/archive/Art with Transformations.js:
  36  function hexToRgb(hex) {
  37:   var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  38    return result ? {

  58    ggbApplet.setPointStyle(PointName, 10);
  59:   ggbApplet.evalCommand(PointName + "Halo:(x - x(" + PointName + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + PointName + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² =" + haloSize + "^2");
  60    ggbApplet.evalCommand("SetColor(" + PointName + "Halo," + HexyColor + ")");

DIDwhiteboard • A1/M4/TD L23 - Creating Equations of Quadratic Functions to Model Contexts/slide3.js:
  121    const inputPlain = undoLaTeX(input1.data.text);
  122:   const expression = inputPlain.replace(/f\(x\)=/, "");
  123    ggb1.instance.setErrorDialogsActive(false);

  137  function undoLaTeX(inp) {
  138:   let frac = inp.replace(/\\frac{/, "(");
  139:   let fracMid = frac.replace(/\}\{/, ")/(");
  140:   let leftParen = fracMid.replace(/\\left/g, "");
  141:   let rightParen = leftParen.replace(/\\right/g, "");
  142:   let absLeft = rightParen.replace(/\|/, "abs(");
  143:   let absRight = absLeft.replace(/\|/, ")");
  144:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  145:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  146:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  147:   let brackLeft = brackRight.replace(/\{/g, "(");
  148:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  149:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  150:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  151    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TD L23 - Creating Equations of Quadratic Functions to Model Contexts/slide4.js:
  18    const inputPlain = undoLaTeX(equa);
  19:   const expression = inputPlain.replace(/f\(x\)=/, "");
  20    ggb1.instance.setErrorDialogsActive(false);

  32  function undoLaTeX(inp) {
  33:   let frac = inp.replace(/\\frac{/, "(");
  34:   let fracMid = frac.replace(/\}\{/, ")/(");
  35:   let leftParen = fracMid.replace(/\\left/g, "");
  36:   let rightParen = leftParen.replace(/\\right/g, "");
  37:   let absLeft = rightParen.replace(/\|/, "abs(");
  38:   let absRight = absLeft.replace(/\|/, ")");
  39:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  40:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  41:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  42:   let brackLeft = brackRight.replace(/\{/g, "(");
  43:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  44:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  45:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  46    let finalAnswer = cDot;

DIDwhiteboard • A1/M4/TD L23 - Creating Equations of Quadratic Functions to Model Contexts/slide5.js:
  18    const inputPlain = undoLaTeX(equa);
  19:   const expression = inputPlain.replace(/f\(x\)=/, "");
  20    ggb1.instance.setErrorDialogsActive(false);

  32  function undoLaTeX(inp) {
  33:   let frac = inp.replace(/\\frac{/, "(");
  34:   let fracMid = frac.replace(/\}\{/, ")/(");
  35:   let leftParen = fracMid.replace(/\\left/g, "");
  36:   let rightParen = leftParen.replace(/\\right/g, "");
  37:   let absLeft = rightParen.replace(/\|/, "abs(");
  38:   let absRight = absLeft.replace(/\|/, ")");
  39:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  40:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  41:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  42:   let brackLeft = brackRight.replace(/\{/g, "(");
  43:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  44:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  45:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  46    let finalAnswer = cDot;

DIDwhiteboard • A1/M5/TA L07 - Sierpinski Triangle/slide1.js:
  12      select1.selectOption('0');
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • A1/M5/TB L08 - Exponential Functions/slide2.js:
  47    if (result.error) {
  48:     submitInput1.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  49      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • A1/M5/TB L08 - Exponential Functions/slide4.js:
  41  //   if (result.error) {
  42: //     submitInput1.updateData({ text: "20" }); // what should the text do/say if students input "cabbage"?
  43: //     return 20; // whatever you go with here, make sure it's inside of your min and max!
  44  //   } else if (result.value < min) {

DIDwhiteboard • A1/M5/TB L08 - Exponential Functions/slide8.js:
  96        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  97:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  98      });

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide1.js:
  23      button2.updateData({ visible: false });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide3.js:
   1  /*
   2: see assigning to new variable names with destructuring assignments: https://mzl.la/35z78LM
   3  */

  73      shareButton1.updateData({ visible: false });
  74:     // create/update a dummy variable to keep track of whether the screen has initialized
  75      ggb1.updateData({ init: true });

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide4.js:
  21      shareButton1.updateData({ visible: false });
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      table1.updateData({ init: true });

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide7.js:
  20      shareButton1.updateData({ visible: false });
  21:     // create/update a dummy variable to keep track of whether the screen has initialized
  22      table1.updateData({ init: true });

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide9.js:
  35      shareButton1.updateData({ visible: false });
  36:     // create/update a dummy variable to keep track of whether the screen has initialized
  37      ggb1.updateData({ init: true });

DIDwhiteboard • A1/M5/TC L16 - Exponential Growth/slide10.js:
  33    console.log(ggb1.instance.getValue("gen"));
  34: }); */ // CW commented out

DIDwhiteboard • DownloadExtension/bg.js:
   5  	document.querySelector("#id1").innerHTML =
   6: 		"<p>Title: " + tab_title + "</p><p> Success </p>";
   7  	for (let i = 0, L = returnObject.length; i < L; i++) {

  31                  for (let i = 0, L = document.getElementsByClassName("card-title").length; i < L; i++) {
  32:                     var cardLink = "https://www.geogebra.org/material/download/format/file/id/" + document.getElementsByClassName("card-link")[i].href.replace("https://www.geogebra.org/m/", "");
  33:                     var cardName = document.getElementsByClassName("card-title")[i].innerText.replace(/ /g,"").replace(/,/,"") + "-" + document.getElementsByClassName("card-link")[i].href.replace("https://www.geogebra.org/m/", "") + ".ggb";    
  34                      returnObject.links.push(cardLink);

DIDwhiteboard • DownloadExtension/manifest.json:
  5  	"content_scripts": [{
  6: 		"matches": ["http://www.geogebra.org/*"],
  7  		"js": ["content.js"]

DIDwhiteboard • DownloadExtension/popup.html:
  8      <div id="id1">-</div>
  9:     <script type="text/javascript" src="bg.js"></script>
  10  </body>

DIDwhiteboard • G2/G2 Help.js:
  17      textDisplay8.updateData({ visible: false, visibilityBehavior: "hide" });
  18:     // create/update a dummy variable to keep track of whether the slide has initialized
  19      textDisplay9.updateData({ init: true });

DIDwhiteboard • G2/G2 M1 TB L7 - Measuring Objects.js:
  123  
  124: //pause/play button
  125  buttonGroup1.on("click:2", () => {

DIDwhiteboard • G2/G2 M1 TB L8 - Measuring Stick.js:
  7  
  8: //pause/play button
  9  buttonGroup1.on("click:2", () => {

DIDwhiteboard • G2/G2 M3 TD L15 - Timer.js:
  72  	ggb1.instance.setAnimating("MinutePoint", true);
  73: 	//ggb1.instance.setAnimationSpeed("MinutePoint", -1 / 60);
  74  	ggb1.instance.setAnimating("HourPoint", true);
  75: 	// ggb1.instance.setAnimationSpeed("HourPoint", -1 / 720);
  76  	ggb1.instance.startAnimation();

DIDwhiteboard • G2/G2 M6 TB L5 - Groups and Arrays.js:
  49  			value: "1",
  50: 		}); // what should the text do/say if students input "cabbage"?
  51  		return 1; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G3/CountingCollection.js:
  26      ggbApplet.setVisible("Counter" + i + "Button", false);
  27:     ggbApplet.setCoords("Counter" + i, Math.floor(i / 10) % 2 + 2 * (i % 10) - 10, 2 * Math.floor((i - 1) / 10) - 5);
  28    }

DIDwhiteboard • G3/G3 M2 TD L23 - Subtraction HTO.js:
  10  let number2 = 0;
  11: let regex = /\d+/;
  12: let regex2 = /\-\d+/;
  13  

DIDwhiteboard • G3/G3 M3 TD L21 - Associative Property Array.js:
  30  let number3 = 0;
  31: let regex = /(\d+)\\times(\d+)?/;
  32  

  59  		typeof parensFirst != undefined &&
  60: 		parensFirst[2] / 10 == Math.floor(parensFirst[2] / 10)
  61  	) {

DIDwhiteboard • G3/HaloCreator.js:
   1: /*orderSetColorBlue {"SetColor(" + namedObject + ", 0/255, 127/255, 175/255 )"}
   2  orderSetPointStyle {"SetPointStyle(" + (namedObject ", 10)")}
   3: orderMakeHalo {"" + namedObject + "Halo:(x - x(" + namedObject + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + namedObject + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² = haloSize²"}
   4  orderMakeVisibleInView1 {"SetVisibleInView(" + namedObject + "Halo, 1, true)"}
   5  orderMakeNotVisibleInView2 {"SetVisibleInView(" + namedObject + "Halo, 2, false)"}
   6: orderSetHaloBlue {"SetColor(" + namedObject + "Halo, 0/255, 127/255, 175/255 )"}
   7  orderSetFilling {"SetFilling(" + namedObject + "Halo, .25)"}

  17      ggbApplet.setPointStyle(clickedPoint, 10);
  18:     ggbApplet.evalCommand(clickedPoint + "Halo:(x - x(" + namedObject + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + namedObject + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² = haloSize²");
  19      ggbApplet.setColor(clickedPoint + "Halo", 0, 127, 175);

DIDwhiteboard • G3/Levi Panda.js:
  244    // set coordinates of point follow to match cursor coordinates in the Geogebra coordinate system
  245:   ggbApplet.setCoords("Follow", ggbApplet.getXcoord("corner4") + x * ggbApplet.getValue("xd") / boxwidth, ggbApplet.getYcoord("corner4") - y * ggbApplet.getValue("yd") / boxheight);
  246  }

DIDwhiteboard • G3/Multiply by 10 PVC NO CHOICE BUTTONS.js:
  14  let number3 = 0;
  15: let regex = /(\d+)\D+(\d+)\D*(\d+)?/;
  16  

DIDwhiteboard • G3/Multiply by 10 PVC WITH CHOICE BUTTONS.js:
  22  let number3 = 0;
  23: let regex = /(\d+)\\cdot(\d+)?/;
  24  

DIDwhiteboard • G3/PVC multiply by 10.js:
  22  let number3 = 0;
  23: let regex = /(\d+)\\cdot(\d+)?/;
  24  

DIDwhiteboard • G4/G4 M1 TB L6 - Multiply by 10.js:
  211  	if (result.error) {
  212: 		inputComp.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  213  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M1 TD L16 - PVC Addition.js:
  1139  	if (result.error) {
  1140: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  1141  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M1 TD L18 - PVC Subtraction.js:
  1192  	if (result.error) {
  1193: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  1194  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M2 TB L5 - PVC Multiplication.js:
  226  	if (result.error) {
  227: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  228  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M2 TD L18 - Arranging Rectangle Side Lengths.js:
  5  	if (result.error) {
  6: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  7  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M2 TE L22 - Array within an Array.js:
  5          ggb1.instance.setPointStyle(point, 10);
  6:         ggb1.instance.evalCommand(point + "Halo:(x - x(" + point + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + point + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² =" + haloSize + "^2");
  7          ggb1.instance.evalCommand("SetColor(" + point + "Halo," + HexyColor + ")");

DIDwhiteboard • G4/G4 M3 TC L9 - PVC Multiplication 3 Column.js:
  263  	if (result.error) {
  264: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  265  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M5 TA L4 - Decimal PVC Tenths and Ones.js:
  487  	if (result.error) {
  488: 		inputComp.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  489  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G4/G4 M5 TC L11 - Rube Goldberg Machine - Slide 6.js:
  521  }
  522: ////////////////////////////write so they lean in order///////////////////
  523  //lean 3.68

  601  
  602: //////////////////write this to open in order ///////////////////
  603  //sends frog leaping

DIDwhiteboard • G4/G4 M6 TB L12 - Construct an Angle.js:
  37  buttonGroup1.on("click:3", () => {
  38: 	//ggb1.instance.setValue("angle", (fib1.getInput(0).text * Math.PI) / 180);
  39  	ggb1.instance.evalCommand("RunClickScript(check)");

DIDwhiteboard • G4/RubeGoldberg.js:
  156    If(Distance(B_4, (84, -8)) < 1, StartAnimation(Z_3, true))
  157:   If(Distance(B_4, (84, -8)) < 1, SetColor(poly5, 237 / 255, 178 / 255, 32 / 255))
  158  }
  159: C_4 If(Distance(C_4, (84, -8)) < 1, SetColor(poly5, 217 / 255, 61 / 255, 31 / 255))
  160  

DIDwhiteboard • G5/G5 M1 TA L1 - Place Value Chart to Millions Version B.js:
  390  	if (result.error) {
  391: 		inputComp.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  392  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G5/G5 M1 TA L1 - Place Value Chart to Millions Version C.js:
  349  	if (result.error) {
  350: 		inputComp.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  351  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G5/G5 M1 TA L1 - Place Value Chart to Millions.js:
  333  	if (result.error) {
  334: 		inputComp.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  335  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G5/G5 M1 TD L17 - Tape Diagram Expressions.js:
  150          ggb1.instance.setPointStyle(point, 10);
  151:         ggb1.instance.evalCommand(point + "Halo:(x - x(" + point + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + point + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² =" + haloSize + "^2");
  152          ggb1.instance.evalCommand("SetColor(" + point + "Halo," + HexyColor + ")");

DIDwhiteboard • G5/G5 M3 TB L10 - Smooshy Multiplication.js:
   75  function undoLaTeX(inp) {
   76: 	let frac = inp.replace(/\\frac{/, "");
   77: 	let fracMid = frac.replace(/\}\{/, "/");
   78: 	let leftParen = fracMid.replace(/\\left/g, "");
   79: 	let rightParen = leftParen.replace(/\\right/g, "");
   80: 	let absLeft = rightParen.replace(/\|/, "abs(");
   81: 	let absRight = absLeft.replace(/\|/, ")");
   82: 	let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
   83: 	let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
   84: 	let brackRight = cbrtLeft.replace(/\}/g, "");
   85: 	let brackLeft = brackRight.replace(/\{/g, "");
   86: 	let lessThan = brackLeft.replace(/\\le/g, "<=");
   87: 	let greaterThan = lessThan.replace(/\\ge/g, ">=");
   88: 	let cDot = greaterThan.replace(/\\cdot/g, "*");
   89  	let finalAnswer = cDot;

  122  	if (result.error) {
  123: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  124  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G5/G5 M3 TC L13 - Partitive Fractional Division.js:
  35  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  36: //////////////////////////////////Would have been nice, didn't have time to develop///////////////////////////////////////
  37  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DIDwhiteboard • G5/G5 M4 TA L3 - Place Value Chart with Decimals.js:
  337  	if (result.error) {
  338: 		inputComp.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  339  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G5/G5 M5 TA L3 - Geometry World All Explorers.js:
  53  
  54: //animates sides/diagonals/angles to the left
  55  buttonGroup2.on("click:1", () => {

  59  });
  60: //animates sides/diagonals/angles back to quad
  61  buttonGroup2.on("click:2", () => {

DIDwhiteboard • G5/G5 M5 TA L4 - Geometry World Diagonal Explorer Rectangle Emphasis.js:
  61  
  62: //animates sides/diagonals/angles to the left
  63  buttonGroup2.on("click:1", () => {

  67  });
  68: //animates sides/diagonals/angles back to quad
  69  buttonGroup2.on("click:2", () => {

DIDwhiteboard • G5/G5 M5 TA L4 - Geometry World Symmetry Explorer.js:
  49          ggb1.instance.setPointStyle(point, 10);
  50:         ggb1.instance.evalCommand(point + "Halo:(x - x(" + point + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + point + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² =" + haloSize + "^2");
  51          ggb1.instance.evalCommand("SetColor(" + point + "Halo," + HexyColor + ")");

DIDwhiteboard • G5/G5 M5 TA L4 - Symmetry Explorer Rhombus Emphasis.js:
  50          ggb1.instance.setPointStyle(point, 10);
  51:         ggb1.instance.evalCommand(point + "Halo:(x - x(" + point + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + point + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² =" + haloSize + "^2");
  52          ggb1.instance.evalCommand("SetColor(" + point + "Halo," + HexyColor + ")");

DIDwhiteboard • G5/G5 M5 TC L19 - Volume with Layers.js:
   9      ggb1.instance.setValue("Length", fib1.getInput('0').text);
  10:     ggb1.instance.evalCommand("CenterView(A+(Length/2,Width/2,5))")
  11          setTimeout(()=>{ggb1.instance.setValue("defaultView", true)},3000);

  15      ggb1.instance.setValue("Width", fib2.getInput('0').text);
  16:     ggb1.instance.evalCommand("CenterView(A+(Length/2,Width/2,5))")
  17          setTimeout(()=>{ggb1.instance.setValue("defaultView", true)},3000);

  21      ggb1.instance.setValue("Height", fib3.getInput('0').text);
  22:     ggb1.instance.evalCommand("CenterView(A+(Length/2,Width/2,5))")
  23          setTimeout(()=>{ggb1.instance.setValue("defaultView", true)},3000);

DIDwhiteboard • G5/G5 M6 TB L8 - Table-Graph Linker (patterns down).js:
  70          ggb1.instance.setPointStyle(point, 10);
  71:         ggb1.instance.evalCommand(point + "Halo:(x - x(" + point + "))² (x(Corner(5))/(x(Corner(3)) - x(Corner(1))))^2 + (y - y(" + point + "))² (y(Corner(5)) / (y(Corner(3)) - y(Corner(1))))² =" + haloSize + "^2");
  72          ggb1.instance.evalCommand("SetColor(" + point + "Halo," + HexyColor + ")");

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-24d09fdab15c.js:
  55  button1.on('click', () => {
  56:   let pattern = /\\left\(\d+,\d+\\right\)/;
  57    if (pattern.test(table1.getCell(0, 0).value)) {

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-31b2d67da206.js:
  179  submitButton1.on('click', () => {
  180:   let pattern = /\\left\(\d+,\d+\\right\)/;
  181    if (pattern.test(submitInput1.data.text)) {

  197    button1.updateData({ disabled: true });
  198:   let pattern2 = /\\left\(\d+,\d+\\right\)/;
  199    if (pattern2.test(submitInput1.data.text)) {

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-83bb0afadc7c.js:
  21  submitButton1.on('click', () => {
  22:   let pattern = /\\left\(\d+,\d+\\right\)/;
  23    if (pattern.test(submitInput1.data.text)) {

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-2007ab44b387.js:
  20  submitButton1.on('click', () => {
  21:   let pattern = /\\left\(\d+,\d+\\right\)/;
  22    if (pattern.test(submitInput1.data.text)) {

DIDwhiteboard • G6/M1/TB L07 - Graphs of Ratio Relationships/slide-eb7da8aaf525.js:
  27    let num1 =
  28:     ((ggb2.instance.getValue('t1Num') / ggb2.instance.getValue('b1Num')) * 4) /
  29      3;
  30    let num2 =
  31:     ((ggb2.instance.getValue('t2Num') / ggb2.instance.getValue('b2Num')) * 4) /
  32      3;
  33    let num3 =
  34:     ((ggb2.instance.getValue('t3Num') / ggb2.instance.getValue('b3Num')) * 4) /
  35      3;
  36    let num4 =
  37:     ((ggb2.instance.getValue('t4Num') / ggb2.instance.getValue('b4Num')) * 4) /
  38      3;
  39    let num5 =
  40:     ((ggb2.instance.getValue('t5Num') / ggb2.instance.getValue('b5Num')) * 4) /
  41      3;

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide3.js:
  19  
  20:     // create/update a dummy variable to keep track of whether the screen has initialized
  21      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide6.js:
  18      ggb1.updateData({ visible: false });
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide10.js:
  28      shareButton1.updateData({ visible: false });
  29:     // create/update a dummy variable to keep track of whether the screen has initialized
  30      table1.updateData({ init: true });

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide12.js:
  26      ggb1.instance.setValue("drumX", 23);
  27:     // create/update a dummy variable to keep track of whether the slide has initialized
  28      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide16.js:
  14      text2.updateData({ visible: false });
  15:     // create/update a dummy variable to keep track of whether the slide has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide17.js:
  12  
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M1/TD L18 - Comparing Rates/slide20.js:
  18      updateSingleButtonGroup(2, { disabled: true }, buttonGroup1);
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide4.js:
  24      shareButton1.updateData({ visible: false });
  25:     // create/update a dummy variable to keep track of whether the slide has initialized
  26      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide5.js:
  16      ggb1.instance.setValue('sideLength', 1);
  17:     // create/update a dummy variable to keep track of whether the screen has initialized
  18      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide6.js:
  16      ggb1.instance.setValue('sideLength', 1);
  17:     // create/update a dummy variable to keep track of whether the screen has initialized
  18      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide7.js:
  16      ggb1.instance.setValue('sideLength', 1);
  17:     // create/update a dummy variable to keep track of whether the screen has initialized
  18      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide9.js:
  26      shareButton1.updateData({ visible: false });
  27:     // create/update a dummy variable to keep track of whether the screen has initialized
  28      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide10.js:
  18      ggb1.instance.setValue('gridSize', 5);
  19:     // create/update a dummy variable to keep track of whether the slide has initialized
  20      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TA L01 - Factors and Multiples/slide11.js:
  24      shareButton1.updateData({ visible: false });
  25:     // create/update a dummy variable to keep track of whether the screen has initialized
  26      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TB L06 - Dividing a Whole Number by a Fraction/slide2.js:
  27      shareButton1.updateData({ visible: false });
  28:     // create/update a dummy variable to keep track of whether the screen has initialized
  29      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TB L06 - Dividing a Whole Number by a Fraction/slide7.js:
  27      shareButton1.updateData({ visible: false });
  28:     // create/update a dummy variable to keep track of whether the screen has initialized
  29      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TB L06 - Dividing a Whole Number by a Fraction/slide8.js:
  27      shareButton1.updateData({ visible: false });
  28:     // create/update a dummy variable to keep track of whether the screen has initialized
  29      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TB L06 - Dividing a Whole Number by a Fraction/slide9.js:
  21      ggb1.updateInnerData({ fakeNumer: 3, fakeDenom: 5, A: [6, 0] });
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TB L06 - Dividing a Whole Number by a Fraction/slide10.js:
  19      ggb1.updateInnerData({ fakeNumer: 3, fakeDenom: 4, A: [8, 0] });
  20:     // create/update a dummy variable to keep track of whether the screen has initialized
  21      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TB L06 - Dividing a Whole Number by a Fraction/slide11.js:
  21      buttonGroup1.updateSingleButton({ disabled: false }, 2);
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide3.js:
  45      ggb1.instance.setVisible('woodBlock', false);
  46:     // create/update a dummy variable to keep track of whether the slide has initialized
  47      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide6.js:
  5  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
  6: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
  7  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide7.js:
  23  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
  24: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
  25  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels

  73      ggb2.updateData({ visible: false });
  74:     // create/update a dummy variable to keep track of whether the slide has initialized
  75      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide8.js:
  14  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
  15: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
  16  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels
  17: //let id4 = 'slide-6a5068b93e2c'; //slide5: weight 2
  18  let id5 = 'slide-c4837b1407e0'; //slide6: chosen paint

  61      button1.updateData({ disabled: true, align: 'right' });
  62:     // create/update a dummy variable to keep track of whether the slide has initialized
  63      ggb1.updateData({ visible: false, init: true });

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide9.js:
  22  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
  23: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
  24  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels
  25: //let id4 = 'slide-6a5068b93e2c'; //slide5: weight 2
  26  let id5 = 'slide-c4837b1407e0'; //slide6: chosen paint

  79      ggb1.instance.setVisible('text1', false);
  80:     // create/update a dummy variable to keep track of whether the slide has initialized
  81      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide10.js:
  24  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
  25: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
  26  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels
  27: //let id4 = 'slide-6a5068b93e2c'; //slide5: weight 2
  28  let id5 = 'slide-c4837b1407e0'; //slide6: chosen paint
  29: //let id6 = 'slide-18c4e65bae89'; //slide7: weight 3
  30  let id7 = 'slide-19f9221f8ad6'; //slide8: chosen decal, png

  85      ggb2.instance.setValue('sliderMax', 10);
  86:     // create/update a dummy variable to keep track of whether the slide has initialized
  87      ggb1.updateData({ visible: false, init: true });

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide11.js:
   6  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
   7: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
   8  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels
   9: //let id4 = 'slide-6a5068b93e2c'; //slide5: weight 2
  10  let id5 = 'slide-c4837b1407e0'; //slide6: chosen paint
  11: //let id6 = 'slide-18c4e65bae89'; //slide7: weight 3
  12  let id7 = 'slide-19f9221f8ad6'; //slide8: chosen decal, png

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/slide12.js:
  17  let id1 = 'slide-6bea0dbb5d23'; //slide2: chosen car
  18: //let id2 = 'slide-1d1f0ce2d833'; //slide3: weight 1
  19  let id3 = 'slide-937af2ed8277'; //slide4: chosen wheels
  20: //let id4 = 'slide-6a5068b93e2c'; //slide5: weight 2
  21  let id5 = 'slide-c4837b1407e0'; //slide6: chosen paint
  22: //let id6 = 'slide-18c4e65bae89'; //slide7: weight 3
  23  let id7 = 'slide-19f9221f8ad6'; //slide8: chosen decal, png

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide3Orig.js:
  174  //   }
  175: //   // if (ggb1.instance.getValue("time2") == 1) {
  176: //   //   ggb1.instance.setAnimating("time", false);
  177: //   //   ggb1.instance.setValue("time", 0);
  178: //   //   ggb1.instance.setAnimating("time2", false);
  179: //   //   ggb1.instance.setValue("time2", 0);
  180: //   // }
  181  // }

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide4Orig.js:
  24    ggb1.instance.setValue('showMustang', false);
  25:   // ggb1.instance.setValue("answer", 11 / 5);
  26    let score = 3;

  35  
  36:   // ggb1.instance.setValue("answer", 13 / 5);
  37    let score = 2;

  45    ggb1.instance.setValue('showMustang', false);
  46:   // ggb1.instance.setValue("answer", 9 / 5);
  47    let score = 4;

  55    ggb1.instance.setValue('showMustang', false);
  56:   // ggb1.instance.setValue("answer", 8 / 5);
  57    let score = 5;

  66  
  67:   // ggb1.instance.setValue("answer", 14 / 5);
  68    let score = 1;

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide9Orig.js:
  46  // let decals = input1.data.text;
  47: // let audi = 173 / 50;
  48: // let camaro = 193 / 50;
  49: // let challenger = 153 / 50;
  50: // let ferrari = 143 / 50;
  51: // let mustang = 203 / 50;
  52  

  60    let decals = input1.data.text;
  61:   let audi = 173 / 50 + (decals * 1) / 25;
  62:   let camaro = 193 / 50 + (decals * 1) / 25;
  63:   let challenger = 153 / 50 + (decals * 1) / 25;
  64:   let ferrari = 143 / 50 + (decals * 1) / 25;
  65:   let mustang = 203 / 50 + (decals * 1) / 25;
  66    console.log('audi' + audi);

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide10Orig.js:
  53  // let weights = input1.data.text;
  54: // let audi = 173 / 50;
  55: // let camaro = 193 / 50;
  56: // let challenger = 153 / 50;
  57: // let ferrari = 143 / 50;
  58: // let mustang = 203 / 50;
  59  

  67    let weights = input1.data.text;
  68:   // let audi = result.value + (weights * 1) / 2;
  69:   // let camaro = result.value + (weights * 1) / 2;
  70:   // let challenger = result.value + (weights * 1) / 2;
  71:   // let ferrari = result.value + (weights * 1) / 2;
  72:   // let mustang = result.value + (weights * 1) / 2;
  73    let decals = getFromSlide('slide-991744aa5025', 'input1.data.text');
  74:   let audi = 173 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  75:   let camaro = 193 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  76:   let challenger = 153 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  77:   let ferrari = 143 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  78:   let mustang = 203 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  79    console.log('audi' + audi);

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide11Orig.js:
  53  // let weights = input1.data.text;
  54: // let audi = 173 / 50;
  55: // let camaro = 193 / 50;
  56: // let challenger = 153 / 50;
  57: // let ferrari = 143 / 50;
  58: // let mustang = 203 / 50;
  59  

  67    let weights = input1.data.text;
  68:   // let audi = result.value + (weights * 1) / 2;
  69:   // let camaro = result.value + (weights * 1) / 2;
  70:   // let challenger = result.value + (weights * 1) / 2;
  71:   // let ferrari = result.value + (weights * 1) / 2;
  72:   // let mustang = result.value + (weights * 1) / 2;
  73    let decals = getFromSlide('slide-991744aa5025', 'input1.data.text');
  74:   let audi = 173 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  75:   let camaro = 193 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  76:   let challenger = 153 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  77:   let ferrari = 143 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  78:   let mustang = 203 / 50 + (decals * 1) / 25 + (weights * 1) / 2;
  79    console.log('audi' + audi);

DIDwhiteboard • G6/M2/TC L12 - Fraction Operations in a Real-World Situation/origFilesToDeleteWhenReady/slide12Orig.js:
  232  
  233: // document.write(numerator + " / " + denominator);
  234  

DIDwhiteboard • G6/M2/TF L24 - Living on Mars/slide12.js:
  33      text2.updateData({ visible: false });
  34:     // create/update a dummy variable to keep track of whether the screen has initialized
  35      image1.updateData({ init: true });

DIDwhiteboard • G6/M3/TA L02 - Integers/slide1.js:
  13      button1.updateData({ align: 'right' });
  14:     // create/update a dummy variable to keep track of whether the screen has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TA L02 - Integers/slide2.js:
  14      button1.updateData({ align: 'right' });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TA L02 - Integers/slide3.js:
  14      button1.updateData({ align: 'right' });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TA L02 - Integers/slide17.js:
  13      ggb1.instance.setVisible('k', false);
  14:     // create/update a dummy variable to keep track of whether the slide has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TA L02 - Integers/slide19.js:
  13      ggb1.instance.setVisible('k', false);
  14:     // create/update a dummy variable to keep track of whether the slide has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide4.js:
   9      ggb1.instance.setValue('state', 4);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide5.js:
  18      submitButton2.updateData({ visible: false });
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide6.js:
  13      text3.updateData({ visible: false });
  14:     // create/update a dummy variable to keep track of whether the screen has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide7.js:
  10      button1.updateData({ align: 'right' });
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide8.js:
   9      ggb1.instance.setValue('state', 2);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide9.js:
   9      ggb1.instance.setValue('state', 2);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide11.js:
  10      select2.updateData({ visible: false });
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide18.js:
   9      button1.updateData({ disabled: true });
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide19.js:
  12      ggb1.instance.setVisible('kIG', false);
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide20.js:
   9      button1.updateData({ disabled: true });
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TB L07 - Absolute Value/slide21.js:
  12      ggb1.instance.setVisible('kIG', false);
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide10.js:
  11      ggb1.instance.setVisible('eq1', false);
  12:     // create/update a dummy variable to keep track of whether the slide has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide11.js:
  11      ggb1.instance.setCoords('AIG', -6, 7);
  12:     // create/update a dummy variable to keep track of whether the slide has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide12.js:
  12      ggb1.instance.setVisible('eq1', false);
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide13.js:
  11      ggb1.instance.setCoords('AIG', -4, -5);
  12:     // create/update a dummy variable to keep track of whether the slide has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide14.js:
  12      ggb1.instance.setVisible('eq1', false);
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide15.js:
  11      ggb1.instance.setCoords('AIG', -4, -5);
  12:     // create/update a dummy variable to keep track of whether the slide has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M3/TC L12 - Reflections in the Coordinate Plane/slide16.js:
  12      ggb1.instance.setVisible('eq1', false);
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M4/TB L11 - Modeling Real-World Situations with Expressions/slide6.js:
  75    //update values in table
  76:   let regexTest = /([a-l]|[n-z])/;
  77  

DIDwhiteboard • G6/M4/TC L15 - Combining Like Terms  by using the Distributive Property/Slide 4.js:
  167  //   )}\]}$`;
  168: // // }
  169  

DIDwhiteboard • G6/M4/TC L15 - Combining Like Terms  by using the Distributive Property/Slide 9.js:
  19        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  20:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  21      });

DIDwhiteboard • G6/M4/TC L15 - Combining Like Terms  by using the Distributive Property/Slide 13.js:
  20        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  21:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  22      });

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide5.js:
  47  /*autorun(() => {
  48: console.log(!/[abdefhijklmnopqrstuvwxyz]/.test(input1.data.text));
  49: if((!/[abdefhijklmnopqrstuvwxyz]/.test(input1.data.text))==true){
  50  button1.updateData({disabled: false});

  65  button1.on("click", () => {
  66:   if (!/[bdehijklmnopqstuvwxyz]/.test(input1.data.text) == true) {
  67      button1.updateData({ disabled: true });

  69      const ggbready =
  70:       "f:" + rawinput.replace(/\\/g, "\\").replace(/c/, "y").replace(/g/g, "x");
  71      ggb1.instance.evalLaTeX(ggbready, 0);

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide8.js:
  34  function undoLaTeX(inp) {
  35:   let frac = inp.replace(/\\frac{/, "(");
  36:   let fracMid = frac.replace(/\}\{/, ")/(");
  37:   let leftParen = fracMid.replace(/\\left/g, "");
  38:   let rightParen = leftParen.replace(/\\right/g, "");
  39:   let absLeft = rightParen.replace(/\|/, "abs(");
  40:   let absRight = absLeft.replace(/\|/, ")");
  41:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  42:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  43:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  44:   let brackLeft = brackRight.replace(/\{/g, "(");
  45:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  46:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  47:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  48    let finalAnswer = cDot;

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide10.js:
  120    // console.log(ggb1.instance.getValue("switch"));
  121:   // console.log(!/[abcdegfhijklopqrstuvwxyz]/.test(input4.data.text));
  122    if (ggb1.instance.getValue("switch") == 1) {
  123:     if (!/[bdeghijklopqstuvwxyz]/.test(input4.data.text) == true) {
  124        const rawinput = input4.data.text;

  126          "f:" +
  127:         rawinput.replace(/\\/g, "\\").replace(/m/, "y").replace(/n/g, "x");
  128        ggb1.instance.evalLaTeX(ggbready, 0);

  135    if (ggb1.instance.getValue("switch") == 0) {
  136:     if (!/[bdeghijklopqstuvwxyz]/.test(input4.data.text) == true) {
  137        const rawinput = input4.data.text;

  139          "f:" +
  140:         rawinput.replace(/\\/g, "\\").replace(/n/, "y").replace(/m/g, "x");
  141        ggb1.instance.evalLaTeX(ggbready, 0);

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/slide12.js:
  21    ggb1.instance.setValue("time", 0);
  22:   if (!/[bdeghijklmnopqsuvxyz]/.test(input1.data.text) == true) {
  23      const rawinput = input1.data.text;
  24      const ggbready =
  25:       "f:" + rawinput.replace(/\\w/, "\\").replace(/t/, "y").replace(/w/, "x");
  26      ggb1.instance.evalLaTeX(ggbready, 0);

DIDwhiteboard • G6/M4/TE L23 - Graphs of Ratio Relationships/archive/slide8old.js:
  35    let num = cc_sharewithclass_d18937bea98a_input1.data.text;
  36:   let regTest = /\d*n/;
  37    let answer1 = num.match(regTest);

  83    //update values in table
  84:   let regexTest = /([a-m]|[o-z])/;
  85  

DIDwhiteboard • G6/M5/TB L07 - Areas of Trapezoids and Other Polygons/Slide 1.js:
   9      ggb1.instance.setValue("state", 1);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M5/TB L07 - Areas of Trapezoids and Other Polygons/Slide 2.js:
   9      ggb1.instance.setValue("state", 1);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide7.js:
  37    //ggb1.instance.evalLaTeX(`cubeSize=${input1.data.text}`);
  38:   //  if(ggb1.instance.getValue(`cubeSize`)>1/21 && ggb1.instance.getValue(`cubeSize`)<0.6){
  39    if (result.value > 1 / 21 && result.value < 0.6) {

DIDwhiteboard • G6/M5/TD L15 - Exploring Volume with Fractional Cubes/slide11.js:
  16  /* autorun(()=>{
  17: let pattern2 = /frac{\d+}{\d+}/;
  18  if(pattern2.test(table1.getCell(0,0).value)){

  24  autorun(()=>{
  25: let pattern3 = /frac{\d+}{\d+}/;
  26    if(pattern3.test(table1.getCell(0,1).value)){

  32  autorun(()=>{
  33: let pattern4 = /frac{\d+}{\d+}/;
  34  if(pattern4.test(table1.getCell(0,2).value)){

  39    autorun(()=>{
  40:   let pattern5 = /frac{\d+}{\d+}/;
  41  if(pattern5.test(table1.getCell(0,3).value)){

DIDwhiteboard • G6/M6/TA L04 - Creating a Histogram/Slide 1.js:
  12  
  13:   // create/update a dummy variable to keep track of whether the screen has initialized
  14    ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TA L04 - Creating a Histogram/Slide 2.js:
  11  
  12:   // create/update a dummy variable to keep track of whether the screen has initialized
  13    ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TA L04 - Creating a Histogram/Slide 6.js:
  19      cc_sharewithclass_b023e93252d7_button1.updateData({ visible: false });
  20:     // create/update a dummy variable to keep track of whether the screen has initialized
  21      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TA L04 - Creating a Histogram/Slide 13.js:
  14      });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TC L15 - More Practice with Box Plots/Slide 18.js:
  17      button1.updateData({ visible: false });
  18:     // create/update a dummy variable to keep track of whether the screen has initialized
  19      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TC L15 - More Practice with Box Plots/Slide 19.js:
  7      ggb1.instance.setValue("state", 2);
  8:     // create/update a dummy variable to keep track of whether the screen has initialized
  9      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TC L15 - More Practice with Box Plots/Slide 21.js:
  14      button1.updateData({ visible: false });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • G6/M6/TC L15 - More Practice with Box Plots/Slide 23.js:
  20      button1.updateData({ visible: false });
  21:     // create/update a dummy variable to keep track of whether the screen has initialized
  22      ggb1.updateData({ init: true });

DIDwhiteboard • G7/G7 M3 TD L18 Slide 26.js:
    5  
    6: //hide yes/no buttons and text
    7  text3.updateData({ visible: false });

  114  autorun(() => {
  115:   //runs button script for yes/no
  116    //if yes...

  136  
  137:   //register variables determining how many yes/no buttons selected and which number chosen
  138    let count = ggb1.innerData["counter"];
  139    let num = ggb1.innerData["shownVal"];
  140:   //if a valid number is selected, show yes/no and text
  141    if (num > -10) {

DIDwhiteboard • G7/M1/TA L01 - An Experiment with Ratios and Rates/README.md:
  1: Link to Trello - https://trello.com/c/eSstpBQo/30-g7-m1-ta-l01-an-experiment-with-ratios-and-rates
  2  
  3: Link to platform - https://digital.greatminds.org/lessons/authoring/editor/activities/5fd144d725bf40001288f3c2
  4  
  5: Video for slide 1 - https://greatminds.wistia.com/medias/b6qxao2mw0

DIDwhiteboard • G7/M1/TA L01 - An Experiment with Ratios and Rates/slide10.js:
   92    let enteredCoinsA7 = Math.floor(a7 * constOfProp * 1000) / 1000;
   93:   let enteredTimeB2 = Math.floor((b2 / constOfProp) * 1000) / 1000;
   94:   let enteredTimeB3 = Math.floor((b3 / constOfProp) * 1000) / 1000;
   95:   let enteredTimeB4 = Math.floor((b4 / constOfProp) * 1000) / 1000;
   96:   let enteredTimeB5 = Math.floor((b5 / constOfProp) * 1000) / 1000;
   97:   let enteredTimeB6 = Math.floor((b6 / constOfProp) * 1000) / 1000;
   98:   let enteredTimeB7 = Math.floor((b7 / constOfProp) * 1000) / 1000;
   99  

  507  //button 2 resets everything
  508: //manually change cell editable true/false states according to cells editable by students
  509  buttonGroup1.on("click:2", () => {

DIDwhiteboard • G7/M1/TA L01 - An Experiment with Ratios and Rates/slide11.js:
   92    let enteredCoinsA7 = Math.floor(a7 * constOfProp * 1000) / 1000;
   93:   let enteredTimeB2 = Math.floor((b2 / constOfProp) * 1000) / 1000;
   94:   let enteredTimeB3 = Math.floor((b3 / constOfProp) * 1000) / 1000;
   95:   let enteredTimeB4 = Math.floor((b4 / constOfProp) * 1000) / 1000;
   96:   let enteredTimeB5 = Math.floor((b5 / constOfProp) * 1000) / 1000;
   97:   let enteredTimeB6 = Math.floor((b6 / constOfProp) * 1000) / 1000;
   98:   let enteredTimeB7 = Math.floor((b7 / constOfProp) * 1000) / 1000;
   99  

  507  //button 2 resets everything
  508: //manually change cell editable true/false states according to cells editable by students
  509  buttonGroup1.on("click:2", () => {

DIDwhiteboard • G7/M1/TA L01 - An Experiment with Ratios and Rates/slide13.js:
   91    let enteredCoinsA6 = Math.floor(a6 * constOfProp * 1000) / 1000;
   92:   //  let enteredCoinsA7 = Math.floor((a7 * constOfProp) * 1000) / 1000;
   93:   let enteredTimeB2 = Math.floor((b2 / constOfProp) * 1000) / 1000;
   94:   let enteredTimeB3 = Math.floor((b3 / constOfProp) * 1000) / 1000;
   95:   let enteredTimeB4 = Math.floor((b4 / constOfProp) * 1000) / 1000;
   96:   let enteredTimeB5 = Math.floor((b5 / constOfProp) * 1000) / 1000;
   97:   let enteredTimeB6 = Math.floor((b6 / constOfProp) * 1000) / 1000;
   98:   //  let enteredTimeB7 = Math.floor((b7 / constOfProp) * 1000) / 1000;
   99  

  501  //button 2 resets everything
  502: //manually change cell editable true/false states according to cells editable by students
  503  buttonGroup1.on("click:2", () => {

DIDwhiteboard • G7/M1/TA L01 - An Experiment with Ratios and Rates/slide14.js:
   91    let enteredCoinsA6 = Math.floor(a6 * constOfProp * 1000) / 1000;
   92:   //  let enteredCoinsA7 = Math.floor((a7 * constOfProp) * 1000) / 1000;
   93:   let enteredTimeB2 = Math.floor((b2 / constOfProp) * 1000) / 1000;
   94:   let enteredTimeB3 = Math.floor((b3 / constOfProp) * 1000) / 1000;
   95:   let enteredTimeB4 = Math.floor((b4 / constOfProp) * 1000) / 1000;
   96:   let enteredTimeB5 = Math.floor((b5 / constOfProp) * 1000) / 1000;
   97:   let enteredTimeB6 = Math.floor((b6 / constOfProp) * 1000) / 1000;
   98:   //  let enteredTimeB7 = Math.floor((b7 / constOfProp) * 1000) / 1000;
   99  

  501  //button 2 resets everything
  502: //manually change cell editable true/false states according to cells editable by students
  503  buttonGroup1.on("click:2", () => {

DIDwhiteboard • G7/M1/TC L15 - Scale Drawings/slide4.js:
  12      ggb1.instance.setValue("clickCount", 0);
  13:     // create/update a dummy variable to keep track of whether the screen has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M1/TC L15 - Scale Drawings/slide5.js:
  21      ggb1.instance.setValue("time", 1);
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M1/TC L15 - Scale Drawings/slide6.js:
  34      ggb1.instance.setValue("clickCount", 101);
  35:     // create/update a dummy variable to keep track of whether the screen has initialized
  36      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M1/TC L15 - Scale Drawings/slide9.js:
  17      ggb1.instance.setValue("time", 1);
  18:     // create/update a dummy variable to keep track of whether the screen has initialized
  19      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M1/TC L15 - Scale Drawings/slide10.js:
  12      ggb1.instance.setValue("clickCount", 0);
  13:     // create/update a dummy variable to keep track of whether the screen has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M1/TC L15 - Scale Drawings/slide11.js:
  37      ggb1.instance.setValue("clickCount", 102);
  38:     // create/update a dummy variable to keep track of whether the screen has initialized
  39      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TA L02 - Adding Integers/slide31.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TA L02 - Adding Integers/slide32.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TA L02 - Adding Integers/slide33.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TA L02 - Adding Integers/slide34.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TA L02 - Adding Integers/slide35.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TB L08 - Subtracting Integers, Part 1/slide25.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TB L08 - Subtracting Integers, Part 1/slide26.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TB L08 - Subtracting Integers, Part 1/slide27.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TB L08 - Subtracting Integers, Part 1/slide28.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TB L08 - Subtracting Integers, Part 1/slide29.js:
  23      button4.updateData({ visible: false, align: "right" });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TB L09 - Demo - Subtracting Negative Values/slide1.js:
  12      text1.updateData({ text: `$7-4=3$` });
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide4.js:
  14      button1.updateData({ visible: false, align: "right" });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      table1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide5.js:
  14      button1.updateData({ visible: false, align: "right" });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      table1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide7.js:
  29  //I tried to disable the screen using a boolean, it didn't work.
  30: //Is there a way to disable/make "not selectable" anything with "stroke" in the name? That would prevent students from being able to edit the graph.

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide15.js:
  30  //I tried to disable the screen using a boolean, it didn't work.
  31: //Is there a way to disable/make "not selectable" anything with "stroke" in the name? That would prevent students from being able to edit the graph.

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide17.js:
  17      text3.updateData({ visible: false });
  18:     // create/update a dummy variable to keep track of whether the screen has initialized
  19      text1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide28.js:
  15      button1.updateData({ visible: false, align: "right" });
  16:     // create/update a dummy variable to keep track of whether the screen has initialized
  17      text2.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide29.js:
  15      button1.updateData({ visible: false, align: "right" });
  16:     // create/update a dummy variable to keep track of whether the screen has initialized
  17      text2.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide30.js:
  29      button4.updateData({ visible: false, align: "right" });
  30:     // create/update a dummy variable to keep track of whether the screen has initialized
  31      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide31.js:
  29      button4.updateData({ visible: false, align: "right" });
  30:     // create/update a dummy variable to keep track of whether the screen has initialized
  31      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide32.js:
  29      button4.updateData({ visible: false, align: "right" });
  30:     // create/update a dummy variable to keep track of whether the screen has initialized
  31      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide33.js:
  29      button4.updateData({ visible: false, align: "right" });
  30:     // create/update a dummy variable to keep track of whether the screen has initialized
  31      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TC L13 - Understanding Multiples of Negative Numbers/slide34.js:
  29      button4.updateData({ visible: false, align: "right" });
  30:     // create/update a dummy variable to keep track of whether the screen has initialized
  31      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide2.js:
  18      button1.updateData({ visible: false });
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      image1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide4.js:
  18      button1.updateData({ visible: false });
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      image1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide23.js:
  23      button4.updateData({ visible: false, align: 'right' });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide24.js:
  23      button4.updateData({ visible: false, align: 'right' });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide25.js:
  23      button4.updateData({ visible: false, align: 'right' });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide26.js:
  23      button4.updateData({ visible: false, align: 'right' });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M2/TD L17 - Understanding Negative Dividends/slide27.js:
  23      button4.updateData({ visible: false, align: 'right' });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide11.js:
  54  
  55: /*ggb1.instance.getValueString("emptyInt1")!=="" && ggb1.instance.getValueString("emptyInt2")!=="" && ggb1.instance.getValueString("emptyL1")!=="" && ggb1.instance.getValueString("emptyT1")!=="" && ggb1.instance.getValueString("emptyT2")!=="" */

DIDwhiteboard • G7/M3/TA L02 - The Distributive Property and the Tabular Model/slide20.js:
  32    button2.updateData({ disabled: true, text: "Submitted" });
  33:   // if(ggb1.instance.getValueString("emptyInt1")!=="-1/2w" || ggb1.instance.getValueString("emptyInt2")!=="-2" || ggb1.instance.getValueString("emptyL1")!="-1/2" ||
  34    // ggb1.instance.getValueString("emptyT1")!=="w" || ggb1.instance.getValueString("emptyT2")!=="4"){

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide1 PA.js:
  10  		ggb1.updateData({ balloonNum: 0, pumpNumbers: [] });
  11: 		// create/update a dummy variable to keep track of whether the slide has initialized
  12  		ggb1.updateData({ init: true });

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide1.js:
  12      ggb1.updateData({ balloonNum: 0, pumpNumbers: [] });
  13:     // create/update a dummy variable to keep track of whether the slide has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide3.js:
  16    newCollection.forEach(({ data, info }) => {
  17:     // console.log({ ...data }, { ...info }); // for reference
  18      const isSelf = info.isSelf;

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide4.js:
  16    newCollection.forEach(({ data, info }) => {
  17:     // console.log({ ...data }, { ...info }); // for reference
  18      const isSelf = info.isSelf;

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide7.js:
  17    newCollection.forEach(({ data, info }) => {
  18:     // console.log({ ...data }, { ...info }); // for reference
  19      const isSelf = info.isSelf;

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide8.js:
  17    newCollection.forEach(({ data, info }) => {
  18:     // console.log({ ...data }, { ...info }); // for reference
  19      const isSelf = info.isSelf;

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide9.js:
  18      button1.updateData({ visible: false });
  19:     // create/update a dummy variable to keep track of whether the slide has initialized
  20      ggb7.updateData({ init: true });

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide10.js:
  16      ggb8.instance.startAnimation();
  17:     // create/update a dummy variable to keep track of whether the slide has initialized
  18      ggb8.updateData({ init: true });

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide13.js:
  15      ggb13.updateData({ def64: ggb13.instance.getBase64() });
  16:     // create/update a dummy variable to keep track of whether the slide has initialized
  17      ggb13.updateData({ init: true });

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide20.js:
  26      input1.updateData({ visible: false });
  27:     // create/update a dummy variable to keep track of whether the slide has initialized
  28      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide22.js:
  13    // console.log(input1.data.text);
  14:   const regex = /^([a-z]|[A-Z])(>|<|\\ge|\\le)-?\d/;
  15    let goodEnough = regex.test(input1.data.text);
  16    // console.log(goodEnough);
  17:   let number = input1.data.text.match(/[-+]?\d/);
  18    // console.log("Number: " + number);
  19:   let symbol = input1.data.text.match(/\\\D\D/);
  20    // console.log("Symbol: " + symbol);

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide23.js:
  13    // console.log(input1.data.text);
  14:   let number = input1.data.text.match(/[-+]?\d/);
  15    // console.log("Number: " + number);
  16:   let symbol = input1.data.text.match(/\\\D\D/);
  17    // console.log("Symbol: " + symbol);

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide26.js:
   27  
   28:   //hide yes/no buttons and text
   29    text2.updateData({ visible: false });

  166  autorun(() => {
  167:   //runs button script for yes/no
  168    //if yes...

  192  
  193:   //register variables determining how many yes/no buttons selected and which number chosen
  194    let count = ggb1.innerData["counter"];

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide27.js:
   25  
   26:   //hide yes/no buttons and text
   27    text2.updateData({ visible: false });

  164  autorun(() => {
  165:   //runs button script for yes/no
  166    //if yes...

  190  
  191:   //register variables determining how many yes/no buttons selected and which number chosen
  192    let count = ggb1.innerData["counter"];

DIDwhiteboard • G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide28.js:
   24  
   25:   //hide yes/no buttons and text
   26    text2.updateData({ visible: false });

  163  autorun(() => {
  164:   //runs button script for yes/no
  165    //if yes...

  189  
  190:   //register variables determining how many yes/no buttons selected and which number chosen
  191    let count = ggb1.innerData["counter"];

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide1.js:
  7  ggb1.updateInnerData({ rad1: minGiven, rad2: 5, rad3: 5, rad4: 5 });
  8: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  9  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide4.js:
  8  //ggb1.updateInnerData({ rad1: minGiven, rad2: 5, rad3: 5, rad4: 5 });
  9: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  10  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide7.js:
  7  ggb1.updateInnerData({ rad1: minGiven, rad2: 5, rad3: 5, rad4: 5 });
  8: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  9  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide10.js:
  7  ggb1.updateInnerData({ rad1: minGiven, rad2: 3, rad3: 5, rad4: 5 });
  8: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  9  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide11.js:
  7  ggb1.updateInnerData({ rad1: minGiven, rad2: 3, rad3: 5, rad4: 5 });
  8: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  9  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide14.js:
  7  ggb1.updateInnerData({ rad1: minGiven, rad2: 4, rad3: 5, rad4: 6 });
  8: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  9  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide18.js:
  8  //ggb1.updateInnerData({ rad1: minGiven, rad2: 5, rad3: 5, rad4: 5 });
  9: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  10  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide21.js:
  8  //ggb1.updateInnerData({ rad1: minGiven, rad2: 5, rad3: 5, rad4: 5 });
  9: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  10  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide24.js:
  8  //ggb1.updateInnerData({ rad1: minGiven, rad2: 5, rad3: 5, rad4: 5 });
  9: //ggb1.instance.evalCommand("SetValue(probAngle, 35 deg)"); // angles slides
  10  button1.updateData({ visible: false });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide27.js:
  125    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  126:   //ggb1.updateData({ saveXML: ggb1.instance.getXML() }); // need this for quads
  127  });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide28.js:
  125    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  126:   //ggb1.updateData({ saveXML: ggb1.instance.getXML() }); // need this for quads
  127  });

DIDwhiteboard • G7/M4/TA L05 - Constructing Quadrilaterals and Triangles/slide29.js:
  124    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  125:   //ggb1.updateData({ saveXML: ggb1.instance.getXML() }); // need this for quads
  126  });

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide1.js:
  106    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  107:   //ggb1.updateData({ save64: ggb1.instance.getBase64() }); // need this for quads
  108  });

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide4.js:
  106    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  107:   //ggb1.updateData({ save64: ggb1.instance.getBase64() }); // need this for quads
  108  });

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide7.js:
  106    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  107:   //ggb1.updateData({ save64: ggb1.instance.getBase64() }); // need this for quads
  108  });

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide11.js:
  106    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  107:   //ggb1.updateData({ save64: ggb1.instance.getBase64() }); // need this for quads
  108  });

DIDwhiteboard • G7/M4/TB L08 - Two Sides and One Angle/slide14.js:
  106    button1.updateData({ disabled: ggb1.innerData["madeOne"] });
  107:   //ggb1.updateData({ save64: ggb1.instance.getBase64() }); // need this for quads
  108  });

DIDwhiteboard • G7/M4/TC L11 - The Inside of a Circle/Slide 2.js:
  41      updateSingleButtonGroup(2, { disabled: true }, buttonGroup1);
  42:     // create/update a dummy variable to keep track of whether the screen has initialized
  43      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L11 - The Inside of a Circle/Slide 3.js:
  41      updateSingleButtonGroup(2, { disabled: true }, buttonGroup1);
  42:     // create/update a dummy variable to keep track of whether the screen has initialized
  43      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L11 - The Inside of a Circle/Slide 9.js:
  15      ggb1.instance.setValue("showOuterQuads", false);
  16:     // create/update a dummy variable to keep track of whether the screen has initialized
  17      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L11 - The Inside of a Circle/Slide 10.js:
  15      ggb1.instance.setValue("showOuterQuads", true);
  16:     // create/update a dummy variable to keep track of whether the screen has initialized
  17      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L11 - The Inside of a Circle/Slide 13.js:
   9    //ggb1.instance.setValue("trip", 2);
  10:   // create/update a dummy variable to keep track of whether the screen has initialized
  11    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide2.js:
  20      ggb1.updateData({ initialState: ggb1.instance.getBase64() });
  21:     // create/update a dummy variable to keep track of whether the screen has initialized
  22      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide3.js:
  22      }
  23:     // create/update a dummy variable to keep track of whether the screen has initialized
  24      //ggb1.updateData({"init": true});

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide4.js:
  35      shareInput1.updateData({ type: "multiline" });
  36:     // create/update a dummy variable to keep track of whether the screen has initialized
  37      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide7.js:
  32      ggb1.updateData({ initialState: ggb1.instance.getBase64() });
  33:     // create/update a dummy variable to keep track of whether the screen has initialized
  34      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide8.js:
  32      }
  33:     // create/update a dummy variable to keep track of whether the screen has initialized
  34      //ggb1.updateData({"init": true});

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide9.js:
  43      submitInput1.updateData({ math: true });
  44:     // create/update a dummy variable to keep track of whether the screen has initialized
  45      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide10.js:
  43      submitInput1.updateData({ math: true });
  44:     // create/update a dummy variable to keep track of whether the screen has initialized
  45      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TC L15 - Watering a Lawn/slide11.js:
  32      ggb1.updateData({ initialState: ggb1.instance.getBase64() });
  33:     // create/update a dummy variable to keep track of whether the screen has initialized
  34      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide1.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide2.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide3.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide5.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide7.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide8.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide9.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide10.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide11.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide12.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide13.js:
  17    ggb2.instance.setValue('showPrismPyramidBool', false);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide14.js:
  17    ggb2.instance.setValue('showPrismPyramidBool', false);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide15.js:
  17    ggb2.instance.setValue('showPrismPyramidBool', false);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide16.js:
  17    ggb2.instance.setValue('showPrismPyramidBool', false);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide17.js:
  17    ggb2.instance.setValue('showPrismPyramidBool', false);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide1.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide2.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide3.js:
  21    }
  22:   // create/update a dummy variable to keep track of whether the screen has initialized
  23    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide5.js:
  21    }
  22:   // create/update a dummy variable to keep track of whether the screen has initialized
  23    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide7.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide8.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide9.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide10.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide11.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide12.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide13.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide14.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide15.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide16.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide17.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M4/TE L23 - Cross Section Scavenger Hunt/slide19.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • G7/M5/TA L02 - Racing for Percents/slide12.js:
  23      text2.updateData({ visible: false });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M5/TC L14 - Scale Factor_ Percent Increase and Decrease/slide16.js:
  32      ggb1.updateData({ disabled: true });
  33:     // create/update a dummy variable to keep track of whether the screen has initialized
  34      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M5/TD L19 - Applying Percent Error/slide3.js:
  34    // console.log("All Responses");
  35:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
  36  

  58    // console.log("Ranked Students");
  59:   // console.table(rankedStudents); // For illustrative purposes only
  60  

  62    const tableRows = createTableRowsData(rankedStudents);
  63:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  64  

DIDwhiteboard • G7/M5/TD L19 - Applying Percent Error/slide7.js:
  29    // console.log("All Responses");
  30:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
  31  

  36    //   console.log({ ...data }, { ...info })
  37:   // ); // For illustrative purposes only
  38  

  52    // console.log("Ranked Students");
  53:   // console.table(rankedStudents); // For illustrative purposes only
  54  

  56    const tableRows = createTableRowsData(rankedStudents);
  57:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  58  

DIDwhiteboard • G7/M5/TD L19 - Applying Percent Error/slide11.js:
  28    // console.log("All Responses");
  29:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
  30  

  35    //   console.log({ ...data }, { ...info })
  36:   // ); // For illustrative purposes only
  37  

  64    // console.log("Ranked Students");
  65:   // console.table(rankedStudents); // For illustrative purposes only
  66  

  68    const tableRows = createTableRowsData(rankedStudents);
  69:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  70  

  72    const tableRows2 = createTableRowsData2(rankedStudents2);
  73:   // console.log("Table Rows2", tableRows2); // For illustrative purposes only
  74  

DIDwhiteboard • G7/M5/TD L19 - Applying Percent Error/slide12.js:
  27    // console.log("All Responses");
  28:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
  29  

  34    //   console.log({ ...data }, { ...info })
  35:   // ); // For illustrative purposes only
  36  

  63    // console.log("Ranked Students");
  64:   // console.table(rankedStudents); // For illustrative purposes only
  65  

  67    const tableRows = createTableRowsData(rankedStudents);
  68:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  69  

  71    const tableRows2 = createTableRowsData2(rankedStudents2);
  72:   // console.log("Table Rows2", tableRows2); // For illustrative purposes only
  73  

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide7.js:
  23      shareButton1.updateData({ visible: false });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      select1.updateData({ init: true });

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide8.js:
  23      shareButton1.updateData({ visible: false });
  24:     // create/update a dummy variable to keep track of whether the screen has initialized
  25      text1.updateData({ init: true });

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide11.js:
  12      table1.updateData({ step: 0 });
  13:     // create/update a dummy variable to keep track of whether the screen has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide15.js:
  39      }
  40:     // create/update a dummy variable to keep track of whether the screen has initialized
  41      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M5/TE L22 - Making Mixtures/slide19.js:
  17      }
  18:     // create/update a dummy variable to keep track of whether the screen has initialized
  19      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TA L03 - Outcomes of Chance Experiments/Slide 4.js:
  21    });
  22:   // create/update a dummy variable to keep track of whether the screen has initialized
  23    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TA L03 - Outcomes of Chance Experiments/Slide 6.js:
  22      ggb1.instance.setVisible("picYellow", false);
  23:     // create/update a dummy variable to keep track of whether the screen has initialized
  24      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TA L03 - Outcomes of Chance Experiments/Slide 8.js:
  21    ggb1.instance.startAnimation();
  22:   // create/update a dummy variable to keep track of whether the screen has initialized
  23    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TA L03 - Outcomes of Chance Experiments/Slide 10.js:
  12      table1.updateCell(0, 2, { value: "0" });
  13:     // create/update a dummy variable to keep track of whether the screen has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 3.js:
  20    }
  21:   // create/update a dummy variable to keep track of whether the screen has initialized
  22    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 4.js:
  57      ggb1.instance.setValue("yP10", 0);
  58:     // create/update a dummy variable to keep track of whether the screen has initialized
  59      ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TB L08 - Picking Blue/Slide 13.js:
  18      table1.updateCell(1, 1, { value: "5" });
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      ggb1.updateData({ init: true });

  35  function addBlue() {
  36:   // let num= Math.round(ggb1.instance.getValue("blueCount")*1)/1;
  37    let num = ggb1.instance.getValue("blueCount");

DIDwhiteboard • G7/M6/TD L19 - Memory Games/Slide 2.js:
  12    ggb1.instance.startAnimation();
  13:   // create/update a dummy variable to keep track of whether the screen has initialized
  14    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TD L19 - Memory Games/Slide 4.js:
  16    ggb1.instance.setValue("state", 1);
  17:   // create/update a dummy variable to keep track of whether the screen has initialized
  18    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TD L19 - Memory Games/Slide 6.js:
  14    ggb1.instance.setValue("state", 2);
  15:   // create/update a dummy variable to keep track of whether the screen has initialized
  16    ggb1.updateData({ init: true });

DIDwhiteboard • G7/M6/TD L19 - Memory Games/Slide 7.js:
  17    ggb1.instance.setValue("state", 2);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide5.js:
  28    if (result.error) {
  29:     inputComp.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  30      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide7.js:
  45    if (result.error) {
  46:     inputComp.updateData({ last: `${makeExp(min)}`, text: `${makeExp(min)}` }); // what should the text do/say if students input "cabbage"?
  47      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide8.js:
  76    if (result.error) {
  77:     inputComp.updateData({ last: `${makeExp(min)}`, text: `${makeExp(min)}` }); // what should the text do/say if students input "cabbage"?
  78      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide9.js:
  56  //   let selected = [...selectComponent.data.selected];
  57: //   // create an array out of the labels for each element of the selected array
  58  //   return selected.map(

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide11.js:
  37  
  38: function boundIt(inputComp, min /* , max */) {
  39    const result = utils.math.evaluateLatex(inputComp.data.text);
  40    if (result.error) {
  41:     inputComp.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  42      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide12.js:
  46  
  47: function boundIt(inputComp, min /* , max */) {
  48    const result = utils.math.evaluateLatex(inputComp.data.text);
  49    if (result.error) {
  50:     inputComp.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  51      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide14.js:
  146      // button1.updateData({
  147:     //   /* text: "Submit", */
  148:     //   disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  149:     //   //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  150      // });

DIDwhiteboard • G8/M1/TD L18 - The Pythagorean Theorem/slide10.js:
  24  
  25:     // create/update a dummy variable to keep track of whether the slide has initialized
  26      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M1/TD L18 - The Pythagorean Theorem/slide20.js:
  50    if (result.error) {
  51:     //input1.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  52      return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M1/TD L18 - The Pythagorean Theorem/slide24.js:
  86    if (result.error) {
  87:     //input1.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  88      return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • G8/M2/TA L04 - Translations and Reflections on the Coordinate Plane/slide9.js:
  127      }
  128:     // data = getFromSlide(id1, "ggb1", false) || false; // don't forget to change slide id
  129      ggb1.instance.evalCommand(

DIDwhiteboard • G8/M4/TB L11 - Planning a Trip/slide4.js:
  25      ggb2.instance.setValue("driving", false);
  26:     // create/update a dummy variable to keep track of whether the slide has initialized
  27      ggb1.updateData({ init: true });

  56  } else {
  57:   dest = dest.replace(/([A-Z][a-z]+)([A-Z][a-z]+)/, "$1 $2");
  58  }

DIDwhiteboard • G8/M4/TB L11 - Planning a Trip/slide8.js:
  58    );
  59:   //dest = dest.replace(/([A-Z][a-z]+)([A-Z][a-z]+)/, "$1 $2");
  60  }

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide3.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide4.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide5.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide6.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide7.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide8.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide9.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide10.js:
  10    button2.updateData({ disabled: true });
  11:   // create/update a dummy variable to keep track of whether the screen has initialized
  12    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide11.js:
  13      button2.updateData({ disabled: true });
  14:     // create/update init variable
  15      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide12.js:
  14      button2.updateData({ disabled: true });
  15:     // create/update init variable
  16      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M4/TF L24 - The Patterns the Pops and The Pastries/slide13.js:
  13      button2.updateData({ disabled: true });
  14:     // create/update init variable
  15      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M5/TB L07 - Equation Assistant Demo/slide1.js:
   85        .evalCommandCAS("scale * grandScale")
   86:       .replace(/(\S*) \/ (\S*)/g, "$1 / $2 * 1");
   87      ggb1.instance.setTextValue("grandScale", newScalar);

   89        .evalCommandCAS("scale * grandAddend")
   90:       .replace(/(\S*) \/ (\S*)/g, "$1 / $2 * 1");
   91      ggb1.instance.setTextValue("grandAddend", newAddend);

  105      .evalCommandCAS("(grandAddend)+addend")
  106:     .replace(/(\S*) \/ (\S*)/g, "$1 / $2 * 1");
  107    // console.log("newAddend", newAddend);

  137      .replaceAll("wieY", "y")
  138:     .replace(/(\S*) \/ (\S*)/g, "$1 / $2 * 1");
  139    // console.log(defString);

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide2.js:
  64      });
  65:     // create/update a dummy variable to keep track of whether the screen has initialized
  66      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide4.js:
  79      });
  80:     // create/update a dummy variable to keep track of whether the screen has initialized
  81      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide8.js:
  28      shareAnswers1.updateData({ visible: false });
  29:     // create/update a dummy variable to keep track of whether the screen has initialized
  30      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide9.js:
  32      button1.updateData({ disabled: true });
  33:     // create/update a dummy variable to keep track of whether the screen has initialized
  34      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M5/TC L12 - Solving Historical Problems with Systems of Equations/slide12.js:
  156    //   isNaN(
  157:   //     Math.round(utils.math.evaluateLatex(input1.data.text).value * 1000000) /
  158    //       1000000

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-28fad92838ff.js:
  12    ggb1.instance.startAnimation();
  13:   // create/update a dummy variable to keep track of whether the screen has initialized
  14    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M6/TC L11 - Maya's Shirt Shop/slide-a3d622756941.js:
  16    shareButton1.updateData({ visible: false });
  17:   // create/update a dummy variable to keep track of whether the screen has initialized
  18    ggb1.updateData({ init: true });

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide2.js:
  20      button1.updateData({ disabled: true });
  21:     // create/update a dummy variable to keep track of whether the screen has initialized
  22      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide3.js:
  25      button4.updateData({ visible: false });
  26:     // create/update a dummy variable to keep track of whether the screen has initialized
  27      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide6.js:
  43      unitText2.updateData({ align: 'right', visible: false });
  44:     // create/update a dummy variable to keep track of whether the screen has initialized
  45      ggb1.updateData({ init: true });

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide8.js:
  18      shareButton1.updateData({ visible: false, disabled: true });
  19:     // create/update a dummy variable to keep track of whether the screen has initialized
  20      ggb1.updateData({ init: true });

  26  //Why does this code not work?
  27: //https://greatminds.atlassian.net/wiki/spaces/DP/pages/177242113/Button+Group
  28  /*select1.on('click:1', () => {

  53        let chosen = select1.data.options[parseInt(select1.data.selected)].label;
  54:       //let sentStart = chosen.replace(".", ","); // in this example, the choices ended with periods
  55        shareInput1.updateData({ text: chosen + ', because ' });

DIDwhiteboard • G8/M6/TE L22 - Volume of Cylinders/slide13.js:
  31      select1.updateData({ visible: false });
  32:     // create/update a dummy variable to keep track of whether the screen has initialized
  33      select1.updateData({ init: true });

DIDwhiteboard • IM1/M1/TA L02/slide-4a7c141d23aa.js:
   82    // remove line breaks that cause GGB to freak out
   83:   readText = readText.replace(/\n/g, " ");
   84    ggb1.instance.evalCommand(`ReadText("${readText}")`);

  120    // remove line breaks that cause GGB to freak out
  121:   readText = readText.replace(/\n/g, " ");
  122    ggb2.instance.evalCommand(`ReadText("${readText}")`);

DIDwhiteboard • IM1/M1/TA L02/slide-8f76102fa466.js:
  37        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  38:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  39      });

DIDwhiteboard • IM1/M1/TB L09 - Writing and Solving Equations in One Variable/slide10.js:
  40      submitButton1.updateData({ visible: false });
  41:     // create/update a dummy variable to keep track of whether the screen has initialized
  42      ggb1.updateData({ init: true });

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide4.js:
  45  
  46:   // const lastRegister = discardOldResponses(register).reverse(); // reversing so older responses are first
  47    let myEntry = register.filter(({ info }) => info.isSelf);

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide5.js:
  82    lastRegister.forEach(({ data, info }) => {
  83:     /* xVals: [...ggb1.data.plotted], */
  84      const { xVals } = data;

DIDwhiteboard • IM1/M1/TC L13 - Solving and Graphing Compound Inequalities/slide6.js:
  90    lastRegister.forEach(({ data, info }) => {
  91:     /* xVals: [...ggb1.data.plotted], */
  92      const { xVals } = data;

DIDwhiteboard • IM1/M1/TD L17 - Distributions and Their Shapes/slide3.js:
  41    let textEntered = input1.data.text;
  42:   // //console.log(textEntered);
  43    let originTextMatch = originText.substring(0, textEntered.length);

  45    let textEnteredLength = input1.data.text.length;
  46:   //   // Matches the lists and give number og letters in order
  47    if (textEntered == originTextMatch) {

DIDwhiteboard • IM1/M1/TD L17 - Distributions and Their Shapes/slide4.js:
  30    let textEntered = input1.data.text;
  31:   // //console.log(textEntered);
  32    let originTextMatch = originText.substring(0, textEntered.length);

  34    let textEnteredLength = input1.data.text.length;
  35:   //   // Matches the lists and give number og letters in order
  36    if (textEntered == originTextMatch) {

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide4.js:
   94  function graphIneq() {
   95:   let frac = submitInput1.data.text.replace(/\\frac{/, "("); //replaces \frac{
   96:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
   97:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
   98:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
   99:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  100:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  101:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  102:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  103:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  104:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  105:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  106:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  107:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  108    ggb1.instance.deleteObject("studentGraph");

DIDwhiteboard • IM1/M2/TC L16 - Solution Sets of Systems of Linear Inequalities/slide5.js:
   94  function graphIneq() {
   95:   let frac = submitInput1.data.text.replace(/\\frac{/, "("); //replaces \frac{
   96:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
   97:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
   98:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces \right part of parens
   99:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  100:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  101:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  102:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  103:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  104:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  105:   let lessThan = brackLeft.replace(/\\le/g, "<="); //replaces less than
  106:   let greaterThan = lessThan.replace(/\\ge/g, ">="); //replaces greater than
  107:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  108    ggb1.instance.deleteObject("studentGraph");

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide4.js:
  113    if (error) {
  114:     // what should the text do/say if students input "cabbage"?
  115      // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide5.js:
  113    if (error) {
  114:     // what should the text do/say if students input "cabbage"?
  115      // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide6.js:
  113    if (error) {
  114:     // what should the text do/say if students input "cabbage"?
  115      // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide9.js:
  18    .text.replace(
  19:     /\$/g,
  20      ""

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide10.js:
  28    .text.replace(
  29:     /\$/g,
  30      ""

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide13.js:
  61        // match def strings like Segment (-4, 4), (-3, 6)
  62:       const regEx = /Segment *\((-*\d), *(-*\d)\), *\((-*\d), *(-*\d)\)/;
  63        const coords1 = defString.match(regEx).map((strVal) => Number(strVal));

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide14.js:
  166    if (error) {
  167:     // what should the text do/say if students input "cabbage"?
  168      // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide16.js:
  61        // match def strings like Segment (-4, 4), (-3, 6)
  62:       const regEx = /Segment *\((-*\d), *(-*\d)\), *\((-*\d), *(-*\d)\)/;
  63        const coords2 = defString.match(regEx).map((strVal) => Number(strVal));

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide17.js:
  166    if (error) {
  167:     // what should the text do/say if students input "cabbage"?
  168      // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • IM1/M2/TD L19 - The Distance Formula/slide19.js:
  47        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  48:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  49      });

DIDwhiteboard • KG Penmanship Numbers/00.svg:
  1: <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><g id="Layer_3" data-name="Layer 3"><path d="M37.23,48.78a25,25,0,0,1,1-7.11A20.58,20.58,0,0,1,41,35.75a14.1,14.1,0,0,1,4.1-4,9.22,9.22,0,0,1,10,0,14.1,14.1,0,0,1,4.1,4,20.57,20.57,0,0,1,2.75,5.92,24.68,24.68,0,0,1,1,7.11,23.76,23.76,0,0,1-1,7.06,19.17,19.17,0,0,1-2.75,5.69A13.55,13.55,0,0,1,55,65.34a9.74,9.74,0,0,1-10,0A13.55,13.55,0,0,1,41,61.53a19.19,19.19,0,0,1-2.76-5.69A24.09,24.09,0,0,1,37.23,48.78Zm4.33.36a18.41,18.41,0,0,0,.68,5.06,14.94,14.94,0,0,0,1.84,4.16,9.57,9.57,0,0,0,2.73,2.82,5.91,5.91,0,0,0,3.31,1,5.8,5.8,0,0,0,3.28-1,9.51,9.51,0,0,0,2.66-2.82,14.6,14.6,0,0,0,1.79-4.16,19.22,19.22,0,0,0,.65-5.06,20.43,20.43,0,0,0-.68-5.25A17.53,17.53,0,0,0,56,39.38a11.2,11.2,0,0,0-2.73-3.16A5.32,5.32,0,0,0,49.94,35a5.22,5.22,0,0,0-3.28,1.21A11,11,0,0,0,44,39.38a17.47,17.47,0,0,0-1.78,4.51A21.33,21.33,0,0,0,41.56,49.14Z"/></g></svg>

DIDwhiteboard • KG Penmanship Numbers/1-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/2-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/3-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/4-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/5-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/6-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/7-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/8-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/9-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/10-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/11-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/12-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/13-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/14-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/15-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/16-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/17-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/18-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/19-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/20-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/21-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/22-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/23-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/24-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/25-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/26-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/27-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/28-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/29-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/30-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/31-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/32-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/33-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/34-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/35-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/36-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/37-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/38-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/39-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/40-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/41-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/42-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/43-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/44-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/45-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/46-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/47-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/48-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/49-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/50-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/51-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/52-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/53-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/54-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/55-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/56-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/57-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/58-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/59-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/60-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/61-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/62-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/63-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/64-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/65-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/66-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/67-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/68-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/69-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/70-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/71-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/72-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/73-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/74-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/75-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/76-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/77-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/78-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/79-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/80-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/81-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/82-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/83-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/84-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/85-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/86-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/87-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/88-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/89-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/90-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/91-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/92-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/93-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/94-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/95-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/96-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/97-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/98-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/99-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/100-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/101-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/102-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/103-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/104-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/105-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/106-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/107-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/108-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/109-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/110-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/111-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/112-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/113-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/114-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/115-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/116-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/117-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/118-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/119-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • KG Penmanship Numbers/120-01.svg:
  2  <!-- Generator: Adobe Illustrator 24.1.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
  3: <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
  4  	 viewBox="0 0 75 75" style="enable-background:new 0 0 75 75;" xml:space="preserve">

DIDwhiteboard • OMO/G1/M2/TC/L10/Version2/slide1.js:
   26  
   27: /////////////////////  SLIDE LOAD  /////////////////////
   28  slide.on("firstload", () => {

   70  
   71: /////////////////////  VIDEO LOAD  /////////////////////
   72  //cubes help

  225  
  226: /////////////////////  FIB INPUT  /////////////////////
  227  //unknown addend input

  232  
  233: /////////////////////  BUTTONS  /////////////////////
  234  //submit

  335  
  336: /////////////////////  REPEAT VIDEOS  /////////////////////
  337  //ggb2 text click

  368  
  369: /////////////////////  TOOL CHOICE  /////////////////////
  370  //choosing tools

  439  
  440: /////////////////////  NUMBER PATH  /////////////////////
  441  //governs number path operations

  545  
  546: /////////////////////  DRAW  /////////////////////
  547  //governs draw operations

  589  
  590: /////////////////////  CUBES  /////////////////////
  591  //governs cubes operations

  722  
  723: /////////////////////  SAVE AND GET DATA  /////////////////////
  724  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version2/slide2.js:
    3  
    4: /////////////////////  SLIDE LOAD  /////////////////////
    5  slide.on("firstload", () => {

   25  
   26: /////////////////////  VIDEO LOAD  /////////////////////
   27  //recap context and move to equations

   53  
   54: /////////////////////  7 or 12 SELECT  /////////////////////
   55  //when choice is made, move on

   64  
   65: /////////////////////  FIB INPUT  /////////////////////
   66  //unknown addend input

   71  
   72: /////////////////////  BUTTONS  /////////////////////
   73  //submit

  127  
  128: /////////////////////  TOOL CHOICE  /////////////////////
  129  //choosing tools

  173  
  174: /////////////////////  NUMBER PATH  /////////////////////
  175  //governs number path operations

  275  }
  276: /////////////////////  DRAW  /////////////////////
  277  //governs draw operations

  312  
  313: /////////////////////  CUBES  /////////////////////
  314  //governs cubes operations

  430  }
  431: /////////////////////  SAVE AND GET DATA  /////////////////////
  432  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version2/slide3.js:
    2  
    3: /////////////////////  SLIDE LOAD  /////////////////////
    4  slide.on("firstload", () => {

   19  
   20: /////////////////////  TOOL CHOICE  /////////////////////
   21  autorun(() => {

   61  
   62: /////////////////////  VIDEO LOAD  /////////////////////
   63  media1.on("ready", ({ data: vid }) => {

   69  
   70: /////////////////////  BUTTONS  /////////////////////
   71  //submit

  123  });
  124: /////////////////////  NUMBER PATH  /////////////////////
  125  //governs number path operations

  225  }
  226: /////////////////////  DRAW  /////////////////////
  227  //governs draw operations

  261  }
  262: /////////////////////  CUBES  /////////////////////
  263  //governs cubes operations

  379  }
  380: /////////////////////  SAVE AND GET DATA  /////////////////////
  381  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide1.js:
   26      text1.updateData({ visible: false, visibilityBehavior: 'hide' });
   27:     // create/update a dummy variable to keep track of whether the slide has initialized
   28      ggb1.updateData({ init: true });

  129  
  130: /////////////////////  SAVE AND GET DATA  /////////////////////
  131  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide3.js:
   29      ggb1.instance.setVisible('equalTextShown', true);
   30:     // create/update a dummy variable to keep track of whether the slide has initialized
   31      ggb1.updateData({ init: true });

  118  
  119: /////////////////////  SAVE AND GET DATA  /////////////////////
  120  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide4.js:
   30      ggb1.instance.setVisible('equalTextShown', true);
   31:     // create/update a dummy variable to keep track of whether the slide has initialized
   32      ggb1.updateData({ init: true });

  142  
  143: /////////////////////  SAVE AND GET DATA  /////////////////////
  144  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide6.js:
   38  
   39:     // create/update a dummy variable to keep track of whether the slide has initialized
   40      ggb1.updateData({ init: true });

  182  
  183: /////////////////////  SAVE AND GET DATA  /////////////////////
  184  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8.js:
   42      ggb1.instance.setValue('correctSpeed', 6);
   43:     // create/update a dummy variable to keep track of whether the slide has initialized
   44      ggb1.updateData({ init: true });

  207  
  208: /////////////////////  SAVE AND GET DATA  /////////////////////
  209  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt1.js:
   42      ggb1.instance.setValue('correctSpeed', 6);
   43:     // create/update a dummy variable to keep track of whether the slide has initialized
   44      ggb1.updateData({ init: true });

  207  
  208: /////////////////////  SAVE AND GET DATA  /////////////////////
  209  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt2.js:
   41      ggb1.instance.setVisible('equalTextShown', true);
   42:     // create/update a dummy variable to keep track of whether the slide has initialized
   43      ggb1.updateData({ init: true });

  229  
  230: /////////////////////  SAVE AND GET DATA  /////////////////////
  231  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt3.js:
   41      ggb1.instance.setVisible('equalTextShown', true);
   42:     // create/update a dummy variable to keep track of whether the slide has initialized
   43      ggb1.updateData({ init: true });

  262  
  263: /////////////////////  SAVE AND GET DATA  /////////////////////
  264  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8alt4.js:
   41      ggb1.instance.setVisible('equalTextShown', true);
   42:     // create/update a dummy variable to keep track of whether the slide has initialized
   43      ggb1.updateData({ init: true });

  249  
  250: /////////////////////  SAVE AND GET DATA  /////////////////////
  251  function saveData(dataObj = {}, target = '') {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide8new.js:
  119      });
  120:     // create/update a dummy variable to keep track of whether the slide has initialized
  121      ggb1.updateData({ init: true });

  363  
  364: /////////////////////  SAVE AND GET DATA  /////////////////////
  365  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version3/slide10.js:
  6      "url",
  7:     "https://forms.office.com/Pages/ResponsePage.aspx?id=7ZsxNFdi1Ei3epSLNgLsqA5VLtxw1mhGgFcDCGlLbkJUMlFIS1pPNVdNVkUzU0JTQjFCNDRTNEg3TS4u"
  8    );

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide1.js:
    3  
    4: ////////////////////  SLIDE LOAD  ////////////////////
    5  slide.on("firstload", () => {

   16  
   17: ////////////////////  VIDEOS  ////////////////////
   18  media1.on("ready", ({data: vid}) => {

   49  
   50: ////////////////////  BUTTON CONTROLS  ////////////////////
   51  autorun(() => {

  128  
  129: ////////////////////  GET/SAVE DATA  ////////////////////
  130  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide2.js:
   105  
   106: ////////////////////  SLIDE LOAD  ////////////////////
   107  slide.on("firstload", () => {

   161  
   162: ////////////////////  VIDEOS  ////////////////////
   163  media3.on("ready", ({ data: vid }) => {

   468  
   469: /////////////////////  7 or 12 SELECT  /////////////////////
   470  //when choice is made, move on

   493  
   494: ////////////////////  TOOL CHOICE  ////////////////////
   495  //choosing tools

   536  
   537: ////////////////////  BUTTON CONTROLS  ////////////////////
   538: ///////////////  buttonGroup1 - find the part  ///////////////
   539  //submit

   649  });
   650: ///////////////  buttonGroup2 - find the total  ///////////////
   651  //submit

   758  
   759: /////////////////////  NUMBER PATH  /////////////////////
   760  //governs number path operations

   850  
   851: /////////////////////  DRAW  /////////////////////
   852  //governs draw operations

   901  
   902: /////////////////////  CUBES  /////////////////////
   903  //governs cube operations when dragger is clicked

  1010  
  1011: ////////////////////  GET/SAVE DATA  ////////////////////
  1012  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide3.js:
   19  
   20: ////////////////////  VIDEOS  ////////////////////
   21  media6.on("ready", ({data: vid}) => {

  153  
  154: ////////////////////  GET/SAVE DATA  ////////////////////
  155  //get from slide 2

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide4.js:
   96  
   97: ////////////////////  SLIDE LOAD  ////////////////////
   98  slide.on("firstload", () => {

  133  
  134: ////////////////////  VIDEOS  ////////////////////
  135  media7.on("ready", ({ data: vid }) => {

  296  
  297: ////////////////////  BUTTON CONTROLS  ////////////////////
  298  //submit

  373  
  374: ////////////////////  TOOL CHOICE  ////////////////////
  375  //choosing tools

  407  
  408: /////////////////////  NUMBER PATH  /////////////////////
  409  //governs number path operations

  482  
  483: /////////////////////  DRAW  /////////////////////
  484  //governs draw operations

  534  
  535: /////////////////////  CUBES  /////////////////////
  536  //governs cube operations when dragger is clicked

  642  }
  643: ////////////////////  GET/SAVE DATA  ////////////////////
  644  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide5.js:
    2  	components;
    3: ////////////////////  SLIDE LOAD  ////////////////////
    4  slide.on("firstload", () => {

   25  
   26: ////////////////////  VIDEOS  ////////////////////
   27  media8.on("ready", ({ data: vid }) => {

   49  
   50: ////////////////////  BUTTON CONTROLS  ////////////////////
   51  //submit

   99  
  100: /////////////////////  NUMBER PATH  /////////////////////
  101  //governs number path operations

  180  
  181: /////////////////////  DRAW  /////////////////////
  182  //governs draw operations

  225  let click = 0;
  226: /////////////////////  CUBES  /////////////////////
  227  //governs cubes operations

  360  
  361: ////////////////////  GET/SAVE DATA  ////////////////////
  362  //get from slide 4

DIDwhiteboard • OMO/G1/M2/TC/L10/Version4/slide8.js:
  131  }
  132: ////////////////////  GET/SAVE DATA  ////////////////////
  133  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G4/M2/TB/L7/V1/newSlide8.js:
  305  	if (result.error) {
  306: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  307  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G4/M2/TB/L7/V1/newSlide9.js:
  157  	if (result.error) {
  158: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  159  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G4/M2/TB/L7/V1/newSlide11.js:
  8      "url",
  9:     "https://www.surveymonkey.com/r/XXWCDFZ"
  10    );

DIDwhiteboard • OMO/G4/M2/TB/L7/V1/pseudo.js:
  302  	if (result.error) {
  303: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  304  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G4/M2/TB/L7/V1/slide3.js:
  139  	if (result.error) {
  140: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  141  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G4/M2/TB/L7/V1/slide4.js:
  105  	if (result.error) {
  106: 		inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  107  		return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G4/M2/TB/L7/V2/slide8.js:
  115    // let horizTens =
  116:   //   Math.floor(Math.abs(ggb1.instance.getXcoord("Number")) / 10) * 10;
  117    // let horizOnes = Math.abs(ggb1.instance.getXcoord("Number")) % 10;

  394    if (result.error) {
  395:     inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  396      return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G4/M2/TB/L7/V2/slide9.js:
  157    if (result.error) {
  158:     inputComp.updateInput(position, { text: "0" }); // what should the text do/say if students input "cabbage"?
  159      return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • OMO/G6/slide1.js:
   3  
   4: ////////////////////  FIRSTLOAD  ////////////////////
   5  slide.on("firstload", () => {

  12  
  13: ////////////////////  VIDEO CONTROLS  ////////////////////
  14  media1.on("ready", ({data: vid}) => {

  33  
  34: ////////////////////  AUTORUN  ////////////////////
  35  autorun(() => {

  40  
  41: ////////////////////  PIZZA CONTROLS  ////////////////////
  42  function sharePizza(dragged) {

  51  
  52: ////////////////////  SAVE/GET DATA  ////////////////////
  53  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide2.js:
  12  
  13: ////////////////////  SLIDELOAD  ////////////////////
  14  slide.on("firstload", () => {

  22  
  23: ////////////////////  VIDEO CONTROLS  ////////////////////
  24  media1.on("ready", ({ data: vid }) => {

  33  
  34: ////////////////////  BUTTON CONTROLS  ////////////////////
  35  //submit1

DIDwhiteboard • OMO/G6/slide3.js:
  3  
  4: ////////////////////  VIDEO CONTROLS  ////////////////////
  5  media1.on("ready", ({data: vid}) => {

  7  });
  8: ////////////////////  SAVE/GET DATA  ////////////////////
  9  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide4.js:
    3  
    4: ////////////////////  SLIDELOAD  ////////////////////
    5  slide.on("firstload", () => {

   22  
   23: ////////////////////  VIDEO LOAD  ////////////////////
   24  media1.on("ready", ({ data: vid }) => {

   32  });
   33: ////////////////////  BUTTON CONTROLS  ////////////////////
   34  //buttonGroup1

   91  
   92: ////////////////////  AUTORUN  ////////////////////
   93  function handleDrag(){

  114  
  115: ////////////////////  TAPE DIAGRAM FUNCTIONS  ////////////////////
  116  

  423  
  424: ////////////////////  SAVE/GET DATA  ////////////////////
  425  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide5.js:
   18  }
   19: ////////////////////  SLIDELOAD  ////////////////////
   20  slide.on("firstload", () => {

   51  
   52: ////////////////////  VIDEO CONTROLS  ////////////////////
   53  media1.on("ready", ({data: vid}) => {

   64  
   65: ////////////////////  BUTTON CONTROLS  ////////////////////
   66  //buttonGroup1

   98  
   99: ////////////////////  AUTORUN  ////////////////////
  100  autorun(() => {

  128  
  129: ////////////////////  TAPE DIAGRAM FUNCTIONS  ////////////////////
  130  

  423  
  424: ////////////////////  SAVE/GET DATA  ////////////////////
  425  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide6.js:
   69  
   70: ////////////////////  SLIDELOAD  ////////////////////
   71  slide.on("firstload", () => {

   81  
   82: ////////////////////  VIDEO LOAD  ////////////////////
   83  media1.on("ready", ({ data: vid }) => {

   95  
   96: ////////////////////  BUTTON CONTROLS  ////////////////////
   97  //submit3

   99  	let studentResponse = input3.data;
  100: 	let regExp = /\+|\-|\/|\\frac{\\frac{|\\cdot/g;
  101  	const result3 = utils.math.evaluateLatex(input3.data.text);

  137  
  138: ////////////////////  TAPE DIAGRAM FUNCTIONS  ////////////////////
  139  

  442  
  443: ////////////////////  SAVE/GET DATA  ////////////////////
  444  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide7.js:
  12  
  13: ////////////////////  SLIDELOAD  ////////////////////
  14  slide.on("firstload", () => {

  25  
  26: ////////////////////  VIDEO CONTROLS  ////////////////////
  27  media1.on("ready", ({ data: vid }) => {

  35  
  36: ////////////////////  BUTTON CONTROLS  ////////////////////
  37  //categorization submit

  64  
  65: ////////////////////  CAT UPDATES  ////////////////////
  66  cat1.on('change', ({assigned}) => {

  76  
  77:   ////////////////////  SAVE/GET DATA  ////////////////////
  78  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide8.js:
   12  
   13: ////////////////////  SLIDELOAD  ////////////////////
   14  slide.on("firstload", () => {

   25  
   26: ////////////////////  VIDEO CONTROLS  ////////////////////
   27  media1.on("ready", ({ data: vid }) => {

   35  
   36: ////////////////////  BUTTON CONTROLS  ////////////////////
   37  //submit1

   41  	if (!result.error) {
   42: 	let regExp = /\+|\-|\/|\\frac{\\frac{|\\cdot/g;
   43  		if (!result.error && Math.round(result.value * 1000) / 1000 == 0.111) {

   58  
   59: ////////////////////  AUTORUN  ////////////////////
   60  //GGB visibility

   77  });
   78: ////////////////////  TAPE DIAGRAM FUNCTIONS  ////////////////////
   79  

  382  
  383: ////////////////////  SAVE/GET DATA  ////////////////////
  384  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide9.js:
   19  
   20: ////////////////////  SLIDELOAD  ////////////////////
   21  slide.on("firstload", () => {

   26  
   27: ////////////////////  BUTTON CONTROLS  ////////////////////
   28  

   32  
   33: ////////////////////  TAPE DIAGRAM FUNCTIONS  ////////////////////
   34  

  337  
  338: ////////////////////  SAVE/GET DATA  ////////////////////
  339  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide10.js:
   2  
   3: ////////////////////  SLIDELOAD  ////////////////////
   4  slide.on("slideload", () => {

   6  
   7: ////////////////////  VIDEO CONTROLS  ////////////////////
   8  media1.on("ready", ({ data: vid }) => {

  13  
  14: ////////////////////  SAVE/GET DATA  ////////////////////
  15  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G6/slide11.js:
   14  
   15: ////////////////////  SLIDELOAD  ////////////////////
   16  slide.on("firstload", () => {

   28  
   29: ////////////////////  VIDEO CONTROLS  ////////////////////
   30  media1.on("ready", ({ data: vid }) => {

   38  
   39: ////////////////////  BUTTON CONTROLS  ////////////////////
   40: // //submit1
   41  // submitButton1.on("click", () => {
   42  // 	let studentResponse = submitInput1.data.text;
   43: // 	let regExp = /\+|\-|\/|\\frac{\\frac{/g;
   44  // 	const result3 = utils.math.evaluateLatex(submitInput1.data.text);

   75  	
   76: // 	// if (submitInput1.data.text == "\\frac{7}{2}\\cdot\\frac{1}{4}") {
   77: // 	// 	saveData({ q5Correct: true });
   78: // 	// 	//show new components
   79: // 	// 	submitText2.updateData({ visible: true });
   80: // 	// 	submitInput2.updateData({ visible: true });
   81: // 	// 	submitButton2.updateData({ visible: true });
   82: // 	// }
   83: // 	// if (submitInput1 != "\\frac{7}{2}\\cdot\\frac{1}{4}") {
   84: // 	// 	saveData({ q5Correct: false });
   85: // 	// 	submitText1.updateData({
   86: // 	// 		text: `Your multiplication expression represents $${submitInput1.data.text}$. Instead, try to create a multiplication expression that represents $\\frac{7}{2}$ $\\div$ $4$.`,
   87: // 	// 	});
   88: //     // }
   89  //     utils.RTS.sendData("slide-70413f4e7f20", {

  100  	let studentResponse = submitInput2.data.text;
  101: 	let regExp = /\+|\-|\/|\\frac{\\frac{|\\cdot/g;
  102  	const result4 = utils.math.evaluateLatex(submitInput2.data.text);

  134  	// 		saveData({ q6Correct: true });
  135: 	// 		// setTimeout(() => {
  136: 	// 		// 	controls.next();
  137: 	// 		// }, 2000);
  138  	// 	}

  154  
  155: ////////////////////  SAVE/GET DATA  ////////////////////
  156  function saveData(dataObj = {}, target = "") {

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide1.js:
  34  });
  35: ////////////////////  BUTTON CONTROLS  ////////////////////
  36  //graphs line

  48  
  49: ////////////////////  VIDEO CONTROLS  ////////////////////
  50  media1.on("ready", ({ data: vid }) => {

  58  
  59: ////////////////////  DATA MANAGEMENT  ////////////////////
  60  //save data for slide 2

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide2.js:
  40  
  41: ////////////////////  DATA MANAGEMENT  ////////////////////
  42  

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide3.js:
  18  
  19: ////////////////////  VIDEO CONTROLS  ////////////////////
  20  //plays video when ready

  40  
  41: ////////////////////  BUTTON CONTROLS  ////////////////////
  42  buttonGroup1.on("click:1", () => {

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide4.js:
  29  });
  30: ////////////////////  VIDEO CONTROLS  ////////////////////
  31  media4.on("ready", ({data: vid}) => {

  40  
  41: ////////////////////  BUTTON CONTROLS  ////////////////////
  42  //graphs line

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide5.js:
  16  
  17: ////////////////////  VIDEO CONTROLS  ////////////////////
  18  //plays video when ready

  38  
  39: ////////////////////  BUTTON CONTROLS  ////////////////////
  40  buttonGroup1.on("click:1", () => {

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide6.js:
  12  
  13: ////////////////////  SETTING TEXT  ////////////////////
  14  const id1 = "slide-25a189f8d901";

  20  
  21: ////////////////////  BUTTON DISABLING  ////////////////////
  22  //sets initial x and y values of points

  42  
  43: ////////////////////  BUTTON CONTROLS  ////////////////////
  44  //graphs line

  86  
  87: ////////////////////  DATA MANAGEMENT  ////////////////////
  88  

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide8.js:
   76  
   77: ////////////////////  VIDEO CONTROLS  ////////////////////
   78  media8.on("ready", ({ data: vid }) => {

   85  
   86: ////////////////////  BUTTON CONTROLS  ////////////////////
   87  //graphs line

  184  
  185: ////////////////////  DATA MANAGEMENT  ////////////////////
  186  //save data for slide 2

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide9.js:
  12  
  13: ////////////////////  DATA MANAGEMENT  ////////////////////
  14  //get and set previous ggb

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide10.js:
   77  
   78: ////////////////////  BUTTON CONTROLS  ////////////////////
   79  //graphs line

  138  
  139: ////////////////////  DATA MANAGEMENT  ////////////////////
  140  //save data for slide 2

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide11.js:
  20  });
  21: ////////////////////  DATA MANAGEMENT  ////////////////////
  22  const id1 = "slide-128102c8d164";

DIDwhiteboard • OMO/G9/M2/TA/L2/Slide12.js:
  34  });
  35: ////////////////////  BUTTON CONTROLS  ////////////////////
  36  //graphs line

  53  
  54: ////////////////////  DATA MANAGEMENT  ////////////////////
  55  //save data for slide 2

DIDwhiteboard • Other/Testing Lesson/slide1.js:
   9      buttonGroup1.updateSingleButton({ outline: true, disabled: true }, 5);
  10:     // create/update a dummy variable to keep track of whether the slide has initialized
  11      text1.updateData({ init: true });

DIDwhiteboard • Print Alt/A1/M1/TA L05 - Multiplying Polynomial Expressions/Strapi/classwork.html:
    3    <li>
    4:     Consider the area model shown.<br /><br />
    5      <img
    6        alt=""
    7:       src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-7ef92f11-bb7c-4436-b6ed-f04e5ccba5c6.png"
    8        style="width: 400px; height: 241px"

   11        <li>
   12:         Determine the partial products and record them on the area model.<br /><br />
   13          <img
   14            alt=""
   15:           src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-f7f651a8-c0f8-4327-afc4-4b02986f17cb.png"
   16            style="width: 400px; height: 245px"

   20          What is the product of
   21:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>27</mn></math> and
   22:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>13</mn></math
   23:         >?<br /><br />
   24          <span class="purple student-answer"
   25:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   26:             ><mn>351</mn></math
   27            ></span

   39        alt=""
   40:       src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-03f6a4f9-cc93-4018-b713-2be2f23b0757.png"
   41        style="width: 400px; height: 262px"

   47          <span class="purple student-answer"
   48:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   49              ><mrow

   52                  ><mrow
   53:                   ><mn>2</mn><mo>&#8290;</mo><mi>x</mi><mo>+</mo
   54:                   ><mn>7</mn></mrow
   55:                 ><mo>)</mo></mrow
   56                ><mrow
   57:                 ><mo>(</mo><mrow><mi>x</mi><mo>+</mo><mn>3</mn></mrow
   58:                 ><mo>)</mo></mrow
   59                ></mrow

   68            alt=""
   69:           src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-cc1a8e55-9a7f-45ce-8306-3af47c213b1b.png"
   70            style="width: 400px; height: 270px"

   76          <span class="purple student-answer"
   77:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   78              ><mrow

   81                  ><mrow
   82:                   ><mn>2</mn><mo>&#8290;</mo><mi>x</mi><mo>+</mo
   83:                   ><mn>7</mn></mrow
   84:                 ><mo>)</mo></mrow
   85                ><mrow

   87                  ><mrow
   88:                   ><mn>1</mn><mo>&#8290;</mo><mi>x</mi><mo>+</mo
   89:                   ><mn>3</mn></mrow
   90:                 ><mo>)</mo></mrow
   91:               ><mo>=</mo><mn>2</mn><mo>&#8290;</mo
   92:               ><msup><mi>x</mi><mn>2</mn></msup
   93:               ><mo>+</mo><mn>13</mn><mo>&#8290;</mo><mi>x</mi><mo>+</mo
   94:               ><mn>21</mn></mrow
   95              ></math

  106      Use a tabular model to determine the product
  107:     <math xmlns="http://www.w3.org/1998/Math/MathML"
  108        ><mrow

  110            ><mo>(</mo
  111:           ><mrow><mn>4</mn><mo>&#8290;</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow
  112:           ><mo>)</mo></mrow
  113          ><mrow
  114            ><mo>(</mo
  115:           ><mrow><mn>2</mn><mo>&#8290;</mo><mi>x</mi><mo>−</mo><mn>5</mn></mrow
  116:           ><mo>)</mo></mrow
  117          ></mrow

  122        alt=""
  123:       src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-4be8c9a7-3770-46ff-a91c-b415ab0b72aa.png"
  124        style="width: 400px; height: 283px"
  125:     /><br />
  126      <span class="purple student-answer"
  127:       ><math xmlns="http://www.w3.org/1998/Math/MathML"
  128          ><mrow
  129:           ><mn>8</mn><mo>&#8290;</mo><msup><mi>x</mi><mn>2</mn></msup
  130:           ><mo>−</mo><mn>18</mn><mo>&#8290;</mo><mi>x</mi><mo>−</mo
  131:           ><mn>5</mn></mrow
  132          ></math

  138      Use a tabular model to determine the product
  139:     <math xmlns="http://www.w3.org/1998/Math/MathML"
  140        ><mrow
  141          ><mrow
  142:           ><mo>(</mo><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow
  143:           ><mo>)</mo></mrow
  144          ><mrow
  145            ><mo>(</mo
  146:           ><mrow><mn>3</mn><mo>&#8290;</mo><mi>x</mi><mo>−</mo><mn>7</mn></mrow
  147:           ><mo>)</mo></mrow
  148          ></mrow

  153        alt=""
  154:       src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-4c7ff1c3-64ba-404b-948e-5a5759eb49fc.png"
  155        style="width: 400px; height: 257px"
  156:     /><br />
  157      <span class="purple student-answer"
  158:       ><math xmlns="http://www.w3.org/1998/Math/MathML"
  159          ><mrow
  160:           ><mn>3</mn><mo>&#8290;</mo><msup><mi>x</mi><mn>2</mn></msup
  161:           ><mo>−</mo><mn>10</mn><mo>&#8290;</mo><mi>x</mi><mo>+</mo
  162:           ><mn>7</mn></mrow
  163          ></math

  172      Consider the expression
  173:     <math xmlns="http://www.w3.org/1998/Math/MathML"
  174        ><mrow
  175          ><mrow
  176:           ><mo>(</mo><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow
  177:           ><mo>)</mo></mrow
  178          ><mrow
  179            ><mo>(</mo
  180:           ><mrow><mn>3</mn><mo>&#8290;</mo><mi>x</mi><mo>−</mo><mn>7</mn></mrow
  181:           ><mo>)</mo></mrow
  182          ></mrow

  187          Multiply by distributing
  188:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  189:           ><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow></math
  190          >.&nbsp;<br />
  191          <span class="purple student-answer"
  192:           ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  193              ><mtable

  200                  <mtd>
  201:                   <mo stretchy="false">(</mo> <mi>x</mi> <mo>−</mo> <mn>1</mn>
  202:                   <mo stretchy="false">)</mo> <mo stretchy="false">(</mo>
  203:                   <mn>3</mn> <mi>x</mi> <mo>−</mo> <mn>7</mn>
  204                    <mo stretchy="false">)</mo>

  206                  <mtd>
  207:                   <mi></mi> <mo>=</mo> <mo stretchy="false">(</mo> <mi>x</mi>
  208:                   <mo>−</mo> <mn>1</mn> <mo stretchy="false">)</mo>
  209:                   <mo stretchy="false">(</mo> <mn>3</mn> <mi>x</mi>
  210:                   <mo stretchy="false">)</mo> <mo>+</mo>
  211:                   <mo stretchy="false">(</mo> <mi>x</mi> <mo>−</mo> <mn>1</mn>
  212:                   <mo stretchy="false">)</mo> <mo stretchy="false">(</mo>
  213:                   <mo>−</mo> <mn>7</mn> <mo stretchy="false">)</mo>
  214                  </mtd>

  218                  <mtd>
  219:                   <mi></mi> <mo>=</mo> <mn>3</mn>
  220                    <msup>
  221:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  222                    </msup>
  223:                   <mo>−</mo> <mn>3</mn> <mi>x</mi> <mo>−</mo> <mn>7</mn>
  224:                   <mi>x</mi> <mo>+</mo> <mn>7</mn>
  225                  </mtd>

  229                  <mtd>
  230:                   <mi></mi> <mo>=</mo> <mn>3</mn>
  231                    <msup>
  232:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  233                    </msup>
  234:                   <mo>−</mo> <mn>10</mn> <mi>x</mi> <mo>+</mo> <mn>7</mn>
  235                  </mtd>
  236                </mtr>
  237:             </mtable></math
  238            ></span

  242          Multiply by distributing
  243:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  244            ><mrow
  245:             ><mn>3</mn><mo>&#8290;</mo><mi>x</mi><mo>−</mo><mn>7</mn></mrow
  246            ></math

  248          <span class="purple student-answer"
  249:           ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  250              ><mtable

  257                  <mtd>
  258:                   <mo stretchy="false">(</mo> <mi>x</mi> <mo>−</mo> <mn>1</mn>
  259:                   <mo stretchy="false">)</mo> <mo stretchy="false">(</mo>
  260:                   <mn>3</mn> <mi>x</mi> <mo>−</mo> <mn>7</mn>
  261                    <mo stretchy="false">)</mo>

  263                  <mtd>
  264:                   <mi></mi> <mo>=</mo> <mi>x</mi> <mo stretchy="false">(</mo>
  265:                   <mn>3</mn> <mi>x</mi> <mo>−</mo> <mn>7</mn>
  266:                   <mo stretchy="false">)</mo> <mo>+</mo>
  267:                   <mo stretchy="false">(</mo> <mo>−</mo> <mn>1</mn>
  268:                   <mo stretchy="false">)</mo> <mo stretchy="false">(</mo>
  269:                   <mn>3</mn> <mi>x</mi> <mo>−</mo> <mn>7</mn>
  270                    <mo stretchy="false">)</mo>

  275                  <mtd>
  276:                   <mi></mi> <mo>=</mo> <mn>3</mn>
  277                    <msup>
  278:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  279                    </msup>
  280:                   <mo>−</mo> <mn>7</mn> <mi>x</mi> <mo>−</mo> <mn>3</mn>
  281:                   <mi>x</mi> <mo>+</mo> <mn>7</mn>
  282                  </mtd>

  286                  <mtd>
  287:                   <mi></mi> <mo>=</mo> <mn>3</mn>
  288                    <msup>
  289:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  290                    </msup>
  291:                   <mo>−</mo> <mn>10</mn> <mi>x</mi> <mo>+</mo> <mn>7</mn>
  292                  </mtd>
  293                </mtr>
  294:             </mtable></math
  295            ></span

  305      Consider the expression
  306:     <math xmlns="http://www.w3.org/1998/Math/MathML"
  307        ><mrow
  308          ><mrow
  309:           ><mo>(</mo><mrow><mi>x</mi><mo>+</mo><mn>2</mn></mrow
  310:           ><mo>)</mo></mrow
  311          ><mrow

  313            ><mrow
  314:             ><msup><mi>x</mi><mn>2</mn></msup
  315:             ><mo>−</mo><mi>x</mi><mo>−</mo><mn>5</mn></mrow
  316:           ><mo>)</mo></mrow
  317          ></mrow

  322          Multiply by distributing
  323:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  324:           ><mrow><mi>x</mi><mo>+</mo><mn>2</mn></mrow></math
  325          >.&nbsp;<br />
  326          <span class="purple student-answer"
  327:           ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  328              ><mtable

  335                  <mtd>
  336:                   <mo stretchy="false">(</mo> <mi>x</mi> <mo>+</mo> <mn>2</mn>
  337                    <mo stretchy="false">)</mo>

  340                      <msup>
  341:                       <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  342                      </msup>
  343:                     <mo>−</mo> <mi>x</mi> <mo>−</mo> <mn>5</mn>
  344                      <mo data-mjx-texclass="CLOSE">)</mo>

  347                  <mtd>
  348:                   <mi></mi> <mo>=</mo> <mo stretchy="false">(</mo> <mi>x</mi>
  349:                   <mo>+</mo> <mn>2</mn> <mo stretchy="false">)</mo>
  350                    <mrow data-mjx-texclass="INNER">

  352                      <msup>
  353:                       <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  354                      </msup>

  356                    </mrow>
  357:                   <mo>+</mo> <mo stretchy="false">(</mo> <mi>x</mi> <mo>+</mo>
  358:                   <mn>2</mn> <mo stretchy="false">)</mo>
  359:                   <mo stretchy="false">(</mo> <mo>−</mo> <mi>x</mi>
  360:                   <mo stretchy="false">)</mo> <mo>+</mo>
  361:                   <mo stretchy="false">(</mo> <mi>x</mi> <mo>+</mo> <mn>2</mn>
  362:                   <mo stretchy="false">)</mo> <mo stretchy="false">(</mo>
  363:                   <mo>−</mo> <mn>5</mn> <mo stretchy="false">)</mo>
  364                  </mtd>

  368                  <mtd>
  369:                   <mi></mi> <mo>=</mo>
  370                    <msup>
  371:                     <mi>x</mi> <mrow> <mn>3</mn> </mrow>
  372                    </msup>
  373:                   <mo>+</mo> <mn>2</mn>
  374                    <msup>
  375:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  376                    </msup>

  378                    <msup>
  379:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  380                    </msup>
  381:                   <mo>−</mo> <mn>2</mn> <mi>x</mi> <mo>−</mo> <mn>5</mn>
  382:                   <mi>x</mi> <mo>−</mo> <mn>10</mn>
  383                  </mtd>

  387                  <mtd>
  388:                   <mi></mi> <mo>=</mo>
  389                    <msup>
  390:                     <mi>x</mi> <mrow> <mn>3</mn> </mrow>
  391                    </msup>

  393                    <msup>
  394:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  395                    </msup>
  396:                   <mo>−</mo> <mn>7</mn> <mi>x</mi> <mo>−</mo> <mn>10</mn>
  397                  </mtd>
  398                </mtr>
  399:             </mtable></math
  400            ></span

  404          Multiply by distributing
  405:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  406            ><mrow
  407:             ><msup><mi>x</mi><mn>2</mn></msup
  408:             ><mo>−</mo><mi>x</mi><mo>−</mo><mn>5</mn></mrow
  409            ></math

  411          <span class="purple student-answer"
  412:           ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  413              ><mtable

  420                  <mtd>
  421:                   <mo stretchy="false">(</mo> <mi>x</mi> <mo>+</mo> <mn>2</mn>
  422                    <mo stretchy="false">)</mo>

  425                      <msup>
  426:                       <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  427                      </msup>
  428:                     <mo>−</mo> <mi>x</mi> <mo>−</mo> <mn>5</mn>
  429                      <mo data-mjx-texclass="CLOSE">)</mo>

  432                  <mtd>
  433:                   <mi></mi> <mo>=</mo> <mi>x</mi>
  434                    <mrow data-mjx-texclass="INNER">

  436                      <msup>
  437:                       <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  438                      </msup>
  439:                     <mo>−</mo> <mi>x</mi> <mo>−</mo> <mn>5</mn>
  440                      <mo data-mjx-texclass="CLOSE">)</mo>
  441                    </mrow>
  442:                   <mo>+</mo> <mn>2</mn>
  443                    <mrow data-mjx-texclass="INNER">

  445                      <msup>
  446:                       <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  447                      </msup>
  448:                     <mo>−</mo> <mi>x</mi> <mo>−</mo> <mn>5</mn>
  449                      <mo data-mjx-texclass="CLOSE">)</mo>

  455                  <mtd>
  456:                   <mi></mi> <mo>=</mo>
  457                    <msup>
  458:                     <mi>x</mi> <mrow> <mn>3</mn> </mrow>
  459                    </msup>

  461                    <msup>
  462:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  463                    </msup>
  464:                   <mo>−</mo> <mn>5</mn> <mi>x</mi> <mo>+</mo> <mn>2</mn>
  465                    <msup>
  466:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  467                    </msup>
  468:                   <mo>−</mo> <mn>2</mn> <mi>x</mi> <mo>−</mo> <mn>10</mn>
  469                  </mtd>

  473                  <mtd>
  474:                   <mi></mi> <mo>=</mo>
  475                    <msup>
  476:                     <mi>x</mi> <mrow> <mn>3</mn> </mrow>
  477                    </msup>

  479                    <msup>
  480:                     <mi>x</mi> <mrow> <mn>2</mn> </mrow>
  481                    </msup>
  482:                   <mo>−</mo> <mn>7</mn> <mi>x</mi> <mo>−</mo> <mn>10</mn>
  483                  </mtd>
  484                </mtr>
  485:             </mtable></math
  486            ></span

DIDwhiteboard • Print Alt/A1/M1/TB L11 - Writing and Solving Equations in One Variable/Strapi/classwork.html:
    5      freshmen and sophomores. At the end of the first semester,
    6:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>3</mn></math>
    7      sophomores left the choir. After that, the ratio of the number of sophomores
    8      to the number of freshmen became
    9:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   10:       ><mrow><mn>3</mn><mo separator="true">:</mo><mn>4</mn></mrow></math
   11      >. How many sophomores remained in the choir?

   18      >Let
   19:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math> represent
   20      the number of sophomores in the choir at the beginning of the year.<br />
   21:     Then <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math> also
   22      represents the number of freshmen in the choir.<br />
   23      And
   24:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   25:       ><mrow><mi>s</mi><mo>−</mo><mn>3</mn></mrow></math
   26      >

   28      Using the ratio of
   29:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   30:       ><mrow><mn>3</mn><mo separator="true">:</mo><mn>4</mn></mrow></math
   31      >, the number of sophomores remaining must equal
   32:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   33:       ><mfrac><mn>3</mn><mn>4</mn></mfrac></math
   34      >
   35      times the number of freshmen.<br />
   36:     <math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   37        ><mtable

   43          <mtr>
   44:           <mtd> <mi>s</mi> <mo>−</mo> <mn>3</mn> </mtd>
   45            <mtd>
   46:             <mi></mi> <mo>=</mo> <mfrac> <mn>3</mn> <mn>4</mn> </mfrac>
   47              <mi>s</mi>

   51            <mtd>
   52:             <mi>s</mi> <mo>−</mo> <mn>3</mn> <mo>−</mo>
   53:             <mfrac> <mn>3</mn> <mn>4</mn> </mfrac> <mi>s</mi>
   54            </mtd>
   55:           <mtd> <mi></mi> <mo>=</mo> <mn>0</mn> </mtd>
   56          </mtr>

   58            <mtd>
   59:             <mfrac> <mn>1</mn> <mn>4</mn> </mfrac> <mi>s</mi>
   60            </mtd>
   61:           <mtd> <mi></mi> <mo>=</mo> <mn>3</mn> </mtd>
   62          </mtr>
   63          <mtr>
   64:           <mtd> <mi>s</mi> </mtd> <mtd> <mi></mi> <mo>=</mo> <mn>12</mn> </mtd>
   65          </mtr>
   66:       </mtable></math
   67      ><br />
   68      Substituting
   69:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math> for
   70:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math
   71      >:</span

   76    <span class="purple student-answer"
   77:     ><math xmlns="http://www.w3.org/1998/Math/MathML"
   78        ><mrow
   79:         ><mi>s</mi><mo>−</mo><mn>3</mn><mo>=</mo><mn>12</mn><mo>−</mo><mn>3</mn
   80:         ><mo>=</mo><mn>9</mn></mrow
   81        ></math

   88      >The number of sophomores remaining in the choir is
   89:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>9</mn></math
   90      >.</span

  100      Angel has <span class="alternatives">$</span
  101:     ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5.45</mn></math> in
  102      quarters and dimes. He has
  103:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> fewer
  104      dimes than quarters. How many of each coin does Angel have?

  118        <td style="text-align: left">
  119:         <p><span class="purple student-answer">Approach 1:</span></p>
  120  

  123              >Let
  124:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math>
  125              represent the number of quarters.</span

  131              >The expression
  132:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  133:               ><mrow><mi>x</mi><mo>−</mo><mn>5</mn></mrow></math
  134              >

  141              >Then
  142:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  143:               ><mrow><mn>0.25</mn><mo>⁢</mo><mi>x</mi></mrow></math
  144              >

  151              >Then
  152:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  153                ><mrow

  155                  ><mrow
  156:                   ><mo>(</mo><mrow><mi>x</mi><mo>−</mo><mn>5</mn></mrow
  157:                   ><mo>)</mo></mrow
  158                  ></mrow

  161              represents the amount of money in dollars from the dimes.<br />
  162:             <math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  163                ><mtable

  170                    <mtd>
  171:                     <mn>0.25</mn> <mi>x</mi> <mo>+</mo> <mn>0.10</mn>
  172:                     <mo stretchy="false">(</mo> <mi>x</mi> <mo>−</mo>
  173:                     <mn>5</mn> <mo stretchy="false">)</mo>
  174                    </mtd>
  175:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.45</mn> </mtd>
  176                  </mtr>

  178                    <mtd>
  179:                     <mn>0.25</mn> <mi>x</mi> <mo>+</mo> <mn>0.10</mn>
  180:                     <mi>x</mi> <mo>−</mo> <mn>0.50</mn>
  181                    </mtd>
  182:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.45</mn> </mtd>
  183                  </mtr>
  184                  <mtr>
  185:                   <mtd> <mn>0.35</mn> <mi>x</mi> <mo>−</mo> <mn>0.50</mn> </mtd>
  186:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.45</mn> </mtd>
  187                  </mtr>
  188                  <mtr>
  189:                   <mtd> <mn>0.35</mn> <mi>x</mi> </mtd>
  190:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.95</mn> </mtd>
  191                  </mtr>
  192                  <mtr>
  193:                   <mtd> <mi>x</mi> </mtd>
  194:                   <mtd> <mi></mi> <mo>=</mo> <mn>17</mn> </mtd>
  195                  </mtr>
  196:               </mtable></math
  197              ><br />
  198              When we substitute
  199:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>17</mn></math>
  200              for
  201:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math
  202              >, the number of dimes is
  203:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
  204              since
  205:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  206                ><mrow
  207:                 ><mrow><mo>(</mo><mn>17</mn><mo>)</mo></mrow
  208:                 ><mo>−</mo><mn>5</mn><mo>=</mo><mn>12</mn></mrow
  209                ></math

  216              >Angel has
  217:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>17</mn></math>
  218              quarters and
  219:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
  220              dimes.</span

  224        <td style="text-align: left">
  225:         <p><span class="purple student-answer">Approach 2:&nbsp;</span></p>
  226  

  229              >Let
  230:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math>
  231              represent the number of dimes.</span

  237              >The expression
  238:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  239:               ><mrow><mi>x</mi><mo>+</mo><mn>5</mn></mrow></math
  240              >

  247              >Then
  248:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  249:               ><mrow><mn>0.10</mn><mo>⁢</mo><mi>x</mi></mrow></math
  250              >

  257              >Then
  258:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  259                ><mrow

  261                  ><mrow
  262:                   ><mo>(</mo><mrow><mi>x</mi><mo>+</mo><mn>5</mn></mrow
  263:                   ><mo>)</mo></mrow
  264                  ></mrow

  267              represents the amount of money in dollars from the quarters.<br />
  268:             <math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  269                ><mtable

  276                    <mtd>
  277:                     <mn>0.10</mn> <mi>x</mi> <mo>+</mo> <mn>0.25</mn>
  278:                     <mo stretchy="false">(</mo> <mi>x</mi> <mo>+</mo>
  279:                     <mn>5</mn> <mo stretchy="false">)</mo>
  280                    </mtd>
  281:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.45</mn> </mtd>
  282                  </mtr>

  284                    <mtd>
  285:                     <mn>0.10</mn> <mi>x</mi> <mo>+</mo> <mn>0.25</mn>
  286:                     <mi>x</mi> <mo>+</mo> <mn>1.25</mn>
  287                    </mtd>
  288:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.45</mn> </mtd>
  289                  </mtr>
  290                  <mtr>
  291:                   <mtd> <mn>0.35</mn> <mi>x</mi> <mo>+</mo> <mn>1.25</mn> </mtd>
  292:                   <mtd> <mi></mi> <mo>=</mo> <mn>5.45</mn> </mtd>
  293                  </mtr>
  294                  <mtr>
  295:                   <mtd> <mn>0.35</mn> <mi>x</mi> </mtd>
  296:                   <mtd> <mi></mi> <mo>=</mo> <mn>4.20</mn> </mtd>
  297                  </mtr>
  298                  <mtr>
  299:                   <mtd> <mi>x</mi> </mtd>
  300:                   <mtd> <mi></mi> <mo>=</mo> <mn>12</mn> </mtd>
  301                  </mtr>
  302:               </mtable></math
  303              ><br />
  304              When we substitute
  305:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
  306              for
  307:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math
  308              >, the number of quarters is
  309:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>17</mn></math>
  310              since
  311:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  312                ><mrow
  313:                 ><mrow><mo>(</mo><mn>12</mn><mo>)</mo></mrow
  314:                 ><mo>+</mo><mn>5</mn><mo>=</mo><mn>17</mn></mrow
  315                ></math

  322              >Angel has
  323:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
  324              dimes and
  325:             <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>17</mn></math>
  326              quarters.</span

  338      Sixteen years from now, Tiah’s age will be twice her age
  339:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math> years
  340      ago. What is Tiah’s current age?&nbsp;<br />

  343        >Let
  344:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>t</mi></math>
  345        represent Tiah’s current age in years.&nbsp;<br />

  347        Then,
  348:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  349:         ><mrow><mi>t</mi><mo>+</mo><mn>16</mn></mrow></math
  350        >
  351        represents Tiah’s age
  352:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>16</mn></math> years
  353        from now, and
  354:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  355:         ><mrow><mi>t</mi><mo>−</mo><mn>12</mn></mrow></math
  356        >
  357        represents Tiah’s age
  358:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math> years
  359        ago, in years.<br />
  360:       <math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  361          ><mtable

  367            <mtr>
  368:             <mtd> <mi>t</mi> <mo>+</mo> <mn>16</mn> </mtd>
  369              <mtd>
  370:               <mi></mi> <mo>=</mo> <mn>2</mn> <mo stretchy="false">(</mo>
  371:               <mi>t</mi> <mo>−</mo> <mn>12</mn> <mo stretchy="false">)</mo>
  372              </mtd>

  374            <mtr>
  375:             <mtd> <mi>t</mi> <mo>+</mo> <mn>16</mn> </mtd>
  376              <mtd>
  377:               <mi></mi> <mo>=</mo> <mn>2</mn> <mi>t</mi> <mo>−</mo> <mn>24</mn>
  378              </mtd>

  380            <mtr>
  381:             <mtd> <mn>16</mn> </mtd>
  382:             <mtd> <mi></mi> <mo>=</mo> <mi>t</mi> <mo>−</mo> <mn>24</mn> </mtd>
  383            </mtr>
  384            <mtr>
  385:             <mtd> <mn>40</mn> </mtd>
  386:             <mtd> <mi></mi> <mo>=</mo> <mi>t</mi> </mtd>
  387            </mtr>
  388:         </mtable></math
  389        ><br />
  390        Tiah is
  391:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>40</mn></math> years
  392        old.</span

  400          &nbsp;&nbsp; &nbsp;Huan filled
  401:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>25</mn></math
  402          ><span class="alternatives">%</span> more bags of popcorn than Bahar.

  405          &nbsp;&nbsp; &nbsp;After the game,
  406:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>15</mn></math
  407          ><span class="alternatives">%</span> of the combined total of their bags

  411          &nbsp;&nbsp; &nbsp;The bags sold for <span class="alternatives">$</span
  412:         ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>0.75</mn></math>
  413          each.

  417          <span class="alternatives">$</span
  418:         ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>114.75</mn></math>
  419          selling bags of popcorn.

  425        >Let
  426:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>b</mi></math>
  427        represent the number of bags of popcorn Bahar filled.<br />

  429        Then
  430:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  431          ><mrow
  432:           ><mi>b</mi><mo>+</mo><mn>0.25</mn><mo>⁢</mo><mi>b</mi></mrow
  433          ></math
  434        >, or
  435:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  436:         ><mrow><mn>1.25</mn><mo>⁢</mo><mi>b</mi></mrow></math
  437        >, represents the number of bags of popcorn Huan filled.&nbsp;<br />

  439        Together they filled
  440:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  441          ><mrow
  442:           ><mi>b</mi><mo>+</mo><mn>1.25</mn><mo>⁢</mo><mi>b</mi></mrow
  443          ></math

  445        bags of popcorn. If
  446:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>15</mn></math
  447        ><span class="alternatives">%</span> of the bags were not sold, Bahar and
  448        Huan sold
  449:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>100</mn></math
  450        ><span class="alternatives">%</span
  451:       ><math xmlns="http://www.w3.org/1998/Math/MathML"
  452:         ><mrow><mo>−</mo><mn>15</mn></mrow></math
  453        ><span class="alternatives">%</span>, or
  454:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>85</mn></math
  455:       ><span class="alternatives">%</span>.<br />
  456        <br />
  457        Then
  458:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  459          ><mrow

  462              ><mo>(</mo
  463:             ><mrow><mi>b</mi><mo>+</mo><mn>1.25</mn><mo>⁢</mo><mi>b</mi></mrow
  464:             ><mo>)</mo></mrow
  465            ></mrow

  470        Therefore,
  471:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  472          ><mrow

  480                  ><mrow
  481:                   ><mi>b</mi><mo>+</mo><mn>1.25</mn><mo>⁢</mo><mi>b</mi></mrow
  482:                 ><mo>)</mo></mrow
  483                ></mrow
  484:             ><mo>)</mo></mrow
  485            ></mrow

  488        represents the amount of money they made.<br />
  489:       <math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  490          ><mtable

  497              <mtd>
  498:               <mn>0.75</mn> <mo stretchy="false">(</mo> <mn>0.85</mn>
  499:               <mo stretchy="false">(</mo> <mi>b</mi> <mo>+</mo> <mn>1.25</mn>
  500:               <mi>b</mi> <mo stretchy="false">)</mo> <mo stretchy="false">)</mo>
  501              </mtd>
  502:             <mtd> <mi></mi> <mo>=</mo> <mn>114.75</mn> </mtd>
  503            </mtr>

  505              <mtd>
  506:               <mn>0.75</mn> <mo stretchy="false">(</mo> <mn>0.85</mn>
  507:               <mo stretchy="false">(</mo> <mn>2.25</mn> <mi>b</mi>
  508:               <mo stretchy="false">)</mo> <mo stretchy="false">)</mo>
  509              </mtd>
  510:             <mtd> <mi></mi> <mo>=</mo> <mn>114.75</mn> </mtd>
  511            </mtr>
  512            <mtr>
  513:             <mtd> <mn>1.434375</mn> <mi>b</mi> </mtd>
  514:             <mtd> <mi></mi> <mo>=</mo> <mn>114.75</mn> </mtd>
  515            </mtr>
  516            <mtr>
  517:             <mtd> <mi>b</mi> </mtd>
  518:             <mtd> <mi></mi> <mo>=</mo> <mn>80</mn> </mtd>
  519            </mtr>
  520:         </mtable></math
  521        ><br />
  522        Substituting
  523:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>80</mn></math> for
  524:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>b</mi></math
  525        >:</span

  527      <span class="purple student-answer"
  528:       ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
  529          ><mrow
  530:           ><mn>1.25</mn><mo>⁢</mo><mi>b</mi><mo>=</mo><mn>1.25</mn
  531:           ><mrow><mo>(</mo><mn>80</mn><mo>)</mo></mrow
  532:           ><mo>=</mo><mn>100</mn></mrow
  533          ></math

  537        >Bahar filled
  538:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>80</mn></math> bags
  539        of popcorn, and Huan filled
  540:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>100</mn></math> bags
  541        of popcorn.</span

DIDwhiteboard • Print Alt/A1/M1/TC L15 - Solving and Graphing Compound Inequalities/Strapi/launch-1of1.html:
   3      Consider the compound inequality
   4:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   5:       ><mrow><mo>−</mo><mn>5</mn><mo>&lt;</mo><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mn>4</mn></mrow></math
   6      >.

   8        <li>
   9:         Rewrite the inequality as a compound statement separated by <em>and</em> or <em>or</em>.<br />
  10          <span class="purple student-answer"
  11:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
  12:             ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&gt;</mo><mo>−</mo><mn>5</mn></mrow></math
  13            >
  14            and
  15:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  16:             ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mn>4</mn></mrow></math
  17            ></span

  22          <span class="purple student-answer"
  23:           >Sample: <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>0</mn></math
  24            >,
  25:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  26              ><mrow

  28                  ><mtr
  29:                   ><mtd><mo>−</mo></mtd></mtr
  30                  ></mtable
  31:               ><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow
  32              ></math

  34            ,
  35:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  36:             ><mrow><mo>−</mo><mn>2</mn></mrow></math
  37:           >, <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1.4</mn></math></span
  38          >

DIDwhiteboard • Print Alt/A1/M1/TC L15 - Solving and Graphing Compound Inequalities/Strapi/learn1-1of2.html:
    5      <span
    6:       ><math xmlns="http://www.w3.org/1998/Math/MathML"
    7          ><mtable columnalign="right left "

    9              ><mtd
   10:               ><mrow><mo>−</mo><mn>5</mn><mo>&lt;</mo><mn>2</mn><mo>&#8290;</mo><mi>⁢</mi><mo>&#8290;</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mn>4</mn></mrow></mtd
   11              ></mtr

   22        <span class="purple student-answer"
   23:         ><math xmlns="http://www.w3.org/1998/Math/MathML"
   24:           ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&gt;</mo><mo>−</mo><mn>5</mn></mrow></math
   25          >
   26          and
   27:         <math xmlns="http://www.w3.org/1998/Math/MathML"
   28:           ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mn>4</mn></mrow></math
   29          ></span

   46                <span class="purple student-answer"
   47:                 ><math xmlns="http://www.w3.org/1998/Math/MathML"
   48:                   ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&gt;</mo><mn>5</mn></mrow></math
   49                  ></span

   52                  <span class="purple student-answer"
   53:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
   54:                     ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>&gt;</mo><mo>−</mo><mn>6</mn></mrow></math
   55                    ><br />
   56:                   <math xmlns="http://www.w3.org/1998/Math/MathML"
   57:                     ><mrow><mi>x</mi><mo>&gt;</mo><mo>−</mo><mn>3</mn></mrow></math
   58                    ></span

   71            <span class="purple student-answer"
   72:             ><math xmlns="http://www.w3.org/1998/Math/MathML"
   73:               ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>&lt;</mo><mn>4</mn></mrow></math
   74              ></span

   76            <span class="purple student-answer"
   77:             ><math xmlns="http://www.w3.org/1998/Math/MathML"
   78:               ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>&lt;</mo><mn>3</mn></mrow></math
   79              ></span

   81            <span class="purple student-answer"
   82:             ><math xmlns="http://www.w3.org/1998/Math/MathML"
   83                ><mrow
   84:                 ><mi>x</mi><mo>&lt;</mo><mfrac><mn>3</mn><mn>2</mn></mfrac></mrow
   85                ></math

   95        >The solution set is
   96:       <math xmlns="http://www.w3.org/1998/Math/MathML"
   97          ><mrow

  103                ><mrow
  104:                 ><mo>−</mo><mn>3</mn><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><mfrac><mn>3</mn><mn>2</mn></mfrac></mrow
  105:               ><mo>}</mo></mrow
  106              ></mrow

  112  
  113:   <p><img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-db5b43b2-f7b1-4913-b7d4-026745f9820e.png" style="width: 900px; height: 161px;" /></p>
  114  </div>

DIDwhiteboard • Print Alt/A1/M1/TC L15 - Solving and Graphing Compound Inequalities/Strapi/learn1-2of2.html:
    3      <span
    4:       ><math xmlns="http://www.w3.org/1998/Math/MathML"
    5:         ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>≤</mo><mo>−</mo><mn>5</mn></mrow></math
    6:       >&nbsp;or&nbsp;<math xmlns="http://www.w3.org/1998/Math/MathML"
    7:         ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>≥</mo><mn>4</mn></mrow></math
    8        ></span

   33                      ><mn
   34:                       ><math xmlns="http://www.w3.org/1998/Math/MathML"
   35:                         ><mrow><mn>2</mn><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>≤</mo><mo>−</mo><mn>5</mn></mrow></math
   36                        ></mn

   44              <span class="purple student-answer"
   45:               ><math xmlns="http://www.w3.org/1998/Math/MathML"
   46                  ><mtable columnalign="right left "

   48                      ><mtd
   49:                       ><mrow><mn>2</mn><mi>⁢</mi><mi>x</mi><mo>≤</mo><mo>−</mo><mn>6</mn></mrow></mtd
   50                      ></mtr

   53                ><br />
   54:               <math xmlns="http://www.w3.org/1998/Math/MathML"
   55                  ><mtable columnalign="right left "

   57                      ><mtd
   58:                       ><mrow><mi>x</mi><mo>≤</mo><mo>−</mo><mn>3</mn></mrow></mtd
   59                      ></mtr

   73            <span class="purple student-answer"
   74:             ><math xmlns="http://www.w3.org/1998/Math/MathML"
   75                ><mtable columnalign="right left "

   77                    ><mtd
   78:                     ><mrow><mn>2</mn><mo>⁢</mo><mi>⁢</mi><mo>⁢</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>≥</mo><mn>4</mn></mrow></mtd
   79                    ></mtr

   84            <span class="purple student-answer"
   85:             ><math xmlns="http://www.w3.org/1998/Math/MathML"
   86                ><mtable columnalign="right left "

   88                    ><mtd
   89:                     ><mrow><mn>2</mn><mo>⁢</mo><mi>⁢</mi><mo>⁢</mo><mi>x</mi><mo>≥</mo><mn>3</mn></mrow></mtd
   90                    ></mtr

   95            <span class="purple student-answer"
   96:             ><math xmlns="http://www.w3.org/1998/Math/MathML"
   97                ><mtable columnalign="right left "

  100                      ><mrow
  101:                       ><mi>x</mi><mo>≥</mo><mfrac><mn>3</mn><mn>2</mn></mfrac></mrow
  102                      ></mtd

  115        >The solution set is
  116:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  117          ><mtable columnalign="right left "

  120                ><mrow
  121:                 ><mrow><mo>{⁢</mo></mrow
  122:                 ><mi>x</mi><mrow><mo>|</mo></mrow
  123:                 ><mi>x</mi><mo>≤</mo><mo>−</mo><mn>3</mn></mrow
  124                ></mtd

  128        >or
  129:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  130          ><mrow
  131:           ><mi>x</mi><mo>≥</mo><mfrac><mn>3</mn><mn>2</mn></mfrac></mrow
  132:         ><mo>}⁢</mo></math
  133        >.</span

  136  
  137:   <p><img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-e77866ee-d489-4f17-94ad-4b667746a7af.png" style="width: 900px; height: 161px;" /></p>
  138  </div>

DIDwhiteboard • Print Alt/A1/M1/TC L15 - Solving and Graphing Compound Inequalities/Strapi/learn2-1of1.html:
   16  			<ol type="A">
   17: 				<li style="text-align: left;">When I take a third of my number and then add <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>, the result is less than or equal to <math xmlns="http://www.w3.org/1998/Math/MathML"><mfrac><mn>4</mn><mn>3</mn></mfrac></math> or greater than or equal to <math xmlns="http://www.w3.org/1998/Math/MathML"><mfrac><mn>10</mn><mn>3</mn></mfrac></math>.</li>
   18  			</ol>
   19  
   20: 			<p><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac><mi>x</mi><mo>+</mo><mn>2</mn><mo>≤</mo><mfrac><mn>4</mn><mn>3</mn></mfrac></mrow></math>&nbsp;or <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac><mi>x</mi><mo>+</mo><mn>2</mn><mo>≥</mo><mfrac><mn>10</mn><mn>3</mn></mfrac></mrow></math></p>
   21  

   24  					<tr>
   25: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>x</mi><mo>≤</mo><mo>−</mo><mn>2</mn></mrow></math></span></td>
   26  						<td></td>
   27: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>x</mi><mo>≥</mo><mn>4</mn></mrow></math></span></td>
   28  					</tr>

   31  
   32: 			<p style="text-align: left;"><span class="purple student-answer">The solution set is <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>{</mo><mrow><mi>x</mi><mo>∣</mo><mi>x</mi><mo>≤</mo><mo>−</mo><mn>2</mn><mtext> or </mtext><mo>⁢</mo><mi>x</mi><mo>≥</mo><mn>4</mn></mrow><mo>}</mo></mrow></math>.</span></p>
   33  			</td>
   34: 			<td><img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-3c45eb36-c711-4500-aa21-a228cbbdd212.png" style="width: 200px; height: 27px;" /></td>
   35: 			<td><span class="purple student-answer">Sample: <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>2</mn></mrow></math></span></td>
   36  		</tr>

   39  			<ol start="2" type="A">
   40: 				<li>When I subtract <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math> from my number and then triple that difference, the result is strictly between <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>21</mn></mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>.</li>
   41  			</ol>
   42  
   43: 			<p style="text-align: center;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>21</mn><mo>&lt;</mo><mn>3</mn><mrow><mo>(</mo><mrow><mi>x</mi><mo>−</mo><mn>2</mn></mrow><mo>)</mo></mrow><mo>&lt;</mo><mn>12</mn></mrow></math><br />
   44  			&nbsp;</p>

   48  					<tr>
   49: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtable columnalign="right left "><mtr><mtd><mrow><mn>3</mn><mo>⁢</mo><mrow><mo>(</mo><mrow><mi>x</mi><mo>−</mo><mn>2</mn></mrow><mo>)</mo></mrow></mrow></mtd><mtd><mrow><mo>&gt;</mo><mo>−</mo><mn>21</mn></mrow></mtd></mtr><mtr><mtd><mrow><mi>x</mi><mo>−</mo><mn>2</mn></mrow></mtd><mtd><mrow><mo>&gt;</mo><mo>−</mo><mn>7</mn></mrow></mtd></mtr><mtr><mtd><mi>x</mi></mtd><mtd><mrow><mo>&gt;</mo><mo>−</mo><mn>5</mn></mrow></mtd></mtr></mtable></math></span></td>
   50: 						<td><span class="purple student-answer">and</span></td>
   51: 						<td><math xmlns="http://www.w3.org/1998/Math/MathML"><mtable columnalign="right left "><mtr><mtd><mrow><mn>3</mn><mo>⁢</mo><mrow><mo>(</mo><mrow><mi>x</mi><mo>−</mo><mn>2</mn></mrow><mo>)</mo></mrow></mrow></mtd><mtd><mrow><mo>&lt;</mo><mn>12</mn></mrow></mtd></mtr><mtr><mtd><mrow><mi>x</mi><mo>−</mo><mn>2</mn></mrow></mtd><mtd><mrow><mo>&lt;</mo><mn>4</mn></mrow></mtd></mtr><mtr><mtd><mi>x</mi></mtd><mtd><mrow><mo>&lt;</mo><mn>6</mn></mrow></mtd></mtr></mtable></math><br />
   52  						&nbsp;</td>

   56  
   57: 			<p><span class="purple student-answer">The solution set is <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>{</mo><mrow><mi>x</mi><mo>∣</mo><mo>−</mo><mn>5</mn><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><mn>6</mn></mrow><mo>}</mo></mrow></math>.</span></p>
   58  			</td>
   59: 			<td><img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-822b94a3-fa6b-41c2-8438-65ec8643c1d0.png" style="width: 200px; height: 30px;" /></td>
   60: 			<td><span class="purple student-answer">Sample: <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>2</mn></mrow></math></span></td>
   61  		</tr>

   64  			<ol start="3" type="A">
   65: 				<li>Half the sum of the opposite of my number and <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> is less than <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>3</mn></math> or greater than <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math>.</li>
   66  			</ol>
   67  
   68: 			<p style="text-align: center;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mfrac><mrow><mo>−</mo><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mn>2</mn></mfrac><mo>&lt;</mo><mn>3</mn></mrow></math> or&nbsp;<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mfrac><mrow><mo>−</mo><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mn>2</mn></mfrac><mo>&gt;</mo><mn>4</mn></mrow></math><br />
   69  			&nbsp;</p>

   73  					<tr>
   74: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtable columnalign="right left "><mtr><mtd><mfrac><mrow><mo>−</mo><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mn>2</mn></mfrac></mtd><mtd><mrow><mo>&lt;</mo><mn>3</mn></mrow></mtd></mtr><mtr><mtd><mrow><mo>−</mo><mi>x</mi><mo>+</mo><mn>5</mn></mrow></mtd><mtd><mrow><mo>&lt;</mo><mn>6</mn></mrow></mtd></mtr><mtr><mtd><mrow><mo>−</mo><mi>x</mi></mrow></mtd><mtd><mrow><mo>&lt;</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd><mi>x</mi></mtd><mtd><mrow><mo>&gt;</mo><mo>−</mo><mn>1</mn></mrow></mtd></mtr></mtable></math></span></td>
   75  						<td></td>
   76: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtable columnalign="right left "><mtr><mtd><mfrac><mrow><mo>−</mo><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mn>2</mn></mfrac></mtd><mtd><mrow><mo>&gt;</mo><mn>4</mn></mrow></mtd></mtr><mtr><mtd><mrow><mo>−</mo><mi>x</mi><mo>+</mo><mn>5</mn></mrow></mtd><mtd><mrow><mo>&gt;</mo><mn>8</mn></mrow></mtd></mtr><mtr><mtd><mrow><mo>−</mo><mi>x</mi></mrow></mtd><mtd><mrow><mo>&gt;</mo><mn>3</mn></mrow></mtd></mtr><mtr><mtd><mi>x</mi></mtd><mtd><mrow><mo>&lt;</mo><mo>−</mo><mn>3</mn></mrow></mtd></mtr></mtable></math></span></td>
   77  					</tr>

   80  
   81: 			<p><span class="purple student-answer">The solution set is <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>{</mo><mrow><mi>x</mi><mo>∣</mo><mi>x</mi><mo>≤</mo><mo>−</mo><mn>3</mn><mtext> or </mtext><mo>&#8290;</mo><mi>x</mi><mo>&gt;</mo><mo>−</mo><mn>1</mn></mrow><mo>}</mo></mrow></math>.</span></p>
   82  			</td>
   83: 			<td><img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-ea2b4c1a-5073-4816-8596-3bc8598de2c3.png" style="width: 200px; height: 30px;" /></td>
   84: 			<td><span class="purple student-answer">Sample: <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math></span></td>
   85  		</tr>

   88  			<ol start="4" type="A">
   89: 				<li style="text-align: left;">The difference between my number and one-third of my number is at least <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>4</mn></mrow></math> and at most <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>.</li>
   90  			</ol>
   91  
   92: 			<p><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>4</mn><mo>≤</mo><mi>x</mi><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mi>x</mi><mo>≤</mo><mn>2</mn></mrow></math><br />
   93  			&nbsp;</p>

   97  					<tr>
   98: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtable columnalign="right left "><mtr><mtd><mrow><mi>x</mi><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow></mtd><mtd><mrow><mo>≥</mo><mo>−</mo><mn>4</mn></mrow></mtd></mtr><mtr><mtd><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>x</mi></mrow></mtd><mtd><mrow><mo>&lt;</mo><mo>−</mo><mn>4</mn></mrow></mtd></mtr><mtr><mtd><mi>x</mi></mtd><mtd><mrow><mo>≥</mo><mo>−</mo><mn>6</mn></mrow></mtd></mtr></mtable></math></span></td>
   99: 						<td><span class="purple student-answer">and</span></td>
  100: 						<td><span class="purple student-answer"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtable columnalign="right left "><mtr><mtd><mrow><mi>x</mi><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow></mtd><mtd><mrow><mo>≤</mo><mn>2</mn></mrow></mtd></mtr><mtr><mtd><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac><mi>x</mi></mrow></mtd><mtd><mrow><mo>≤</mo><mn>2</mn></mrow></mtd></mtr><mtr><mtd><mi>x</mi></mtd><mtd><mrow><mo>≤</mo><mn>3</mn></mrow></mtd></mtr></mtable></math></span></td>
  101  					</tr>

  104  
  105: 			<p style="text-align: left;"><span class="purple student-answer">The solution set is <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>{</mo><mrow><mi>x</mi><mo>∣</mo><mo>−</mo><mn>6</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>3</mn></mrow><mo>}</mo></mrow></math>.</span></p>
  106  			</td>
  107: 			<td><img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-a2e354bc-6da8-4d2b-bd84-6e5f103cb7c5.png" style="width: 200px; height: 33px;" /></td>
  108: 			<td><span class="purple student-answer">Sample: <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>4</mn></mrow></math></span></td>
  109  		</tr>

  113  <p>What is the mystery integer?<br />
  114: <span class="purple student-answer">The mystery integer is <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mo>−</mo><mn>4</mn></mrow></math>.</span></p>

DIDwhiteboard • Print Alt/A1/M2/TB L12 - Solution Sets of Systems of Linear Inequalities/slide8.js:
  171  function formatInput(a) {
  172:   let frac = a.replace(/\\frac{/, '('); //replaces \frac{
  173:   let fracMid = frac.replace(/\}\{/, ')/('); //replaces }{ from \frac{}{}
  174:   let leftParen = fracMid.replace(/\\left/g, ''); //replaces \left part of parens
  175:   let rightParen = leftParen.replace(/\\right/g, ''); //replaces \right part of parens
  176:   let absLeft = rightParen.replace(/\|/, 'abs('); //replaces left bar for absolute value
  177:   let absRight = absLeft.replace(/\|/, ')'); //replaces right bar for absolute value
  178:   let squirtLeft = absRight.replace(/\\sqrt\{/, 'sqrt('); //replaces \sqrt for square root function
  179:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, 'cbrt('); //replaces \sqrt[3]{} for cube root function
  180:   let brackRight = cbrtLeft.replace(/\}/g, ')'); //replaces the right side brackets
  181:   let brackLeft = brackRight.replace(/\{/g, '('); //replaces any remaining left side brackets
  182:   let lessThan = brackLeft.replace(/\\le/g, '<='); //replaces less than
  183:   let greaterThan = lessThan.replace(/\\ge/g, '>='); //replaces greater than
  184:   let finalAnswer = greaterThan; /*.replace(//,"");*/ //empty in case of additions
  185    return finalAnswer;

  188  function convertToEquation(a) {
  189:   let removeGreaterThan = a.replace(/>/, '=');
  190:   let removeLessThan = removeGreaterThan.replace(/</, '=');
  191:   let convertedToEquation = removeLessThan.replace(/==/g, '=');
  192    return convertedToEquation;

DIDwhiteboard • Print Alt/A1/M3/TC l13 Modeling Elevation as a Function of Time/slide12.js:
   44    const plainText = undoLaTeX(submitInput1.data.text);
   45:   let pattern = /(f\(x\)|f\(t\)|y)=(.*)/;
   46    if (!pattern.test(plainText)) {

  181  function undoLaTeX(inp) {
  182:   let frac = inp.replace(/\\frac{/, "(");
  183:   let fracMid = frac.replace(/\}\{/, ")/(");
  184:   let leftParen = fracMid.replace(/\\left/g, "");
  185:   let rightParen = leftParen.replace(/\\right/g, "");
  186:   let absLeft = rightParen.replace(/\|/, "abs(");
  187:   let absRight = absLeft.replace(/\|/, ")");
  188:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  189:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  190:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  191:   let brackLeft = brackRight.replace(/\{/g, "(");
  192:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  193:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  194:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  195    let finalAnswer = cDot;

DIDwhiteboard • Print Alt/A1/M3/TC l13 Modeling Elevation as a Function of Time/slide13.js:
  159  function undoLaTeX(inp) {
  160:   let frac = inp.replace(/\\frac{/, "(");
  161:   let fracMid = frac.replace(/\}\{/, ")/(");
  162:   let leftParen = fracMid.replace(/\\left/g, "");
  163:   let rightParen = leftParen.replace(/\\right/g, "");
  164:   let absLeft = rightParen.replace(/\|/, "abs(");
  165:   let absRight = absLeft.replace(/\|/, ")");
  166:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  167:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  168:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  169:   let brackLeft = brackRight.replace(/\{/g, "(");
  170:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  171:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  172:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  173    let finalAnswer = cDot;

DIDwhiteboard • Print Alt/A1/M3/TC l13 Modeling Elevation as a Function of Time/slide14.js:
  116  function expressYourself(str) {
  117:   const pattern = /If\((.*), (.*)\)/;
  118    if (!str || !pattern.test(str)) {

  165        .replaceAll(` `, "");
  166:     let pattern = /(y)=(.+)/;
  167      // console.log("eqNoLatex", eqNoLatex);

  182        .replaceAll(` `, "");
  183:     let pattern2 = /(.+)(<=|<)(x|t)(<=|<)(.+)/;
  184      // console.log("ineqNoLatex", ineqNoLatex);

  224        disabled: !entries.every((value) => !!value), // use this for enabling only after all cells are filled
  225:       //disabled: !entries.some((value) => !!value), // use this for enabling after any cell is filled
  226      });

  245  function undoLaTeX(inp) {
  246:   let frac = inp.replace(/\\frac{/, "(");
  247:   let fracMid = frac.replace(/\}\{/, ")/(");
  248:   let leftParen = fracMid.replace(/\\left/g, "");
  249:   let rightParen = leftParen.replace(/\\right/g, "");
  250:   let absLeft = rightParen.replace(/\|/, "abs(");
  251:   let absRight = absLeft.replace(/\|/, ")");
  252:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  253:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  254:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  255:   let brackLeft = brackRight.replace(/\{/g, "(");
  256:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  257:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  258:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  259    let finalAnswer = cDot;

DIDwhiteboard • Print Alt/A1/M3/TD l18 Exploring Transformations of the Graphs of Functions/const {text1, ggb1, ggb2, buttongroup1}=.js:
  60  // autorun(() => {
  61: //   let Count2 = ggb1.innerData["count"]; //this just makes it so the autorun fires when the point is moved - there may be a better way
  62  //   ggb2.instance.setValue("count", ggb1.instance.getValue("count"));

DIDwhiteboard • Print Alt/A1/M4/TC L20-Art with Transformations/slide2.js:
  35  button1.on("click", () => {
  36:   let frac = input1.data.text.replace(/\\frac{/, "("); //replaces \frac{
  37:   let fracMid = frac.replace(/\}\{/, ")/("); //replaces }{ from \frac{}{}
  38:   let leftParen = fracMid.replace(/\\left/g, ""); //replaces \left part of parens
  39:   let rightParen = leftParen.replace(/\\right/g, ""); //replaces\right part of parens
  40:   let absLeft = rightParen.replace(/\|/, "abs("); //replaces left bar for absolute value
  41:   let absRight = absLeft.replace(/\|/, ")"); //replaces right bar for absolute value
  42:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt("); //replaces \sqrt for square root function
  43:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt("); //replaces \sqrt[3]{} for cube root function
  44:   let brackRight = cbrtLeft.replace(/\}/g, ")"); //replaces the right side brackets
  45:   let brackLeft = brackRight.replace(/\{/g, "("); //replaces any remaining left side brackets
  46:   let finalAnswer = brackLeft.replace(/ /, ""); //empty in case of additions
  47    ggb1.instance.setTextValue("studentFunction", finalAnswer);

DIDwhiteboard • Print Alt/A1/M4/TD L23 Creating Equations of Quadratic Functions to Model Contexts/slide4.js:
  121    const inputPlain = undoLaTeX(input1.data.text);
  122:   const expression = inputPlain.replace(/f\(x\)=/, "");
  123    ggb1.instance.setErrorDialogsActive(false);

  137  function undoLaTeX(inp) {
  138:   let frac = inp.replace(/\\frac{/, "(");
  139:   let fracMid = frac.replace(/\}\{/, ")/(");
  140:   let leftParen = fracMid.replace(/\\left/g, "");
  141:   let rightParen = leftParen.replace(/\\right/g, "");
  142:   let absLeft = rightParen.replace(/\|/, "abs(");
  143:   let absRight = absLeft.replace(/\|/, ")");
  144:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  145:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  146:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  147:   let brackLeft = brackRight.replace(/\{/g, "(");
  148:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  149:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  150:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  151    let finalAnswer = cDot;

DIDwhiteboard • Print Alt/A1/M4/TD L23 Creating Equations of Quadratic Functions to Model Contexts/slide5.js:
  18    const inputPlain = undoLaTeX(equa);
  19:   const expression = inputPlain.replace(/f\(x\)=/, "");
  20    ggb1.instance.setErrorDialogsActive(false);

  32  function undoLaTeX(inp) {
  33:   let frac = inp.replace(/\\frac{/, "(");
  34:   let fracMid = frac.replace(/\}\{/, ")/(");
  35:   let leftParen = fracMid.replace(/\\left/g, "");
  36:   let rightParen = leftParen.replace(/\\right/g, "");
  37:   let absLeft = rightParen.replace(/\|/, "abs(");
  38:   let absRight = absLeft.replace(/\|/, ")");
  39:   let squirtLeft = absRight.replace(/\\sqrt\{/, "sqrt(");
  40:   let cbrtLeft = squirtLeft.replace(/\\sqrt\[3\]\{/, "cbrt(");
  41:   let brackRight = cbrtLeft.replace(/\}/g, ")");
  42:   let brackLeft = brackRight.replace(/\{/g, "(");
  43:   let lessThan = brackLeft.replace(/\\le/g, "<=");
  44:   let greaterThan = lessThan.replace(/\\ge/g, ">=");
  45:   let cDot = greaterThan.replace(/\\cdot/g, "*");
  46    let finalAnswer = cDot;

DIDwhiteboard • Print Alt/A1/M5/TB L08 - Exponential Functions/slide3.js:
  47    if (result.error) {
  48:     submitInput1.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  49      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • Print Alt/A1/M5/TB L08 - Exponential Functions/slide5.js:
  41  //   if (result.error) {
  42: //     submitInput1.updateData({ text: "20" }); // what should the text do/say if students input "cabbage"?
  43: //     return 20; // whatever you go with here, make sure it's inside of your min and max!
  44  //   } else if (result.value < min) {

DIDwhiteboard • Print Alt/A1/M5/TC L16 - Exponential Growth/slide4.js:
  31    console.log(ggb1.instance.getValue("gen"));
  32: }); */ // CW commented out

DIDwhiteboard • Print Alt/A1/M6/TA L01- Analyzing Paint Splatters/slide6.js:
  24  //   return register
  25: //     .sort((a, b) => b.info.timestamp - a.info.timestamp) // Sort by timestamp (descending)
  26  //     .filter(({ info: { device } }) => {
  27: //       const deviceHasPreviousAnswer = devices.has(device); // Has device appeared before?
  28: //       devices.add(device); // Mark device as appeared
  29  

DIDwhiteboard • Print Alt/A1/M6/TA L01- Analyzing Paint Splatters/slide7.js:
  24      });
  25:     // create/update a dummy variable to keep track of whether the slide has initialized
  26      saveData({ init: true });

DIDwhiteboard • Print Alt/G6/M1/TA L4/Strapi/learn1-1of1.html:
   17        <td>
   18:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math>
   19        </td>

   21          <span class="purple student-answer"
   22:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math></span
   23          >

   26          <span class="purple student-answer"
   27:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>7</mn></math></span
   28          >

   31          <span class="purple student-answer"
   32:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math></span
   33          >

   36          <span class="purple student-answer"
   37:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   38:             ><mrow><mn>5</mn><mo separator="true">:</mo><mn>7</mn></mrow></math
   39            ></span

   44        <td>
   45:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>
   46        </td>

   48          <span class="purple student-answer"
   49:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math></span
   50          >

   53          <span class="purple student-answer"
   54:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>14</mn></math></span
   55          >

   58          <span class="purple student-answer"
   59:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>24</mn></math></span
   60          >

   63          <span class="purple student-answer"
   64:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   65:             ><mrow><mn>10</mn><mo separator="true">:</mo><mn>14</mn></mrow></math
   66            ></span

   71        <td>
   72:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>3</mn></math>
   73        </td>

   75          <span class="purple student-answer"
   76:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>15</mn></math></span
   77          >

   80          <span class="purple student-answer"
   81:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>21</mn></math></span
   82          >

   85          <span class="purple student-answer"
   86:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>36</mn></math></span
   87          >

   90          <span class="purple student-answer"
   91:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   92:             ><mrow><mn>15</mn><mo separator="true">:</mo><mn>21</mn></mrow></math
   93            ></span

   98        <td>
   99:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math>
  100        </td>

  102          <span class="purple student-answer"
  103:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math></span
  104          >

  107          <span class="purple student-answer"
  108:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>28</mn></math></span
  109          >

  112          <span class="purple student-answer"
  113:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>48</mn></math></span
  114          >

  117          <span class="purple student-answer"
  118:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
  119:             ><mrow><mn>20</mn><mo separator="true">:</mo><mn>28</mn></mrow></math
  120            ></span

DIDwhiteboard • Print Alt/G6/M1/TA L4/Strapi/learn2-1of2.html:
   5        <li>
   6:         Draw tape diagrams to represent the ratio of the number of cups of red paint to the number of cups of blue paint in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> batches of purple paint.<br />
   7:         <img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-53653a30-3d4f-43f1-9cc1-805006566730.png" style="width: 606px; height: 86px;" />
   8        </li>
   9        <li>
  10:         Write a ratio that relates the number of cups of red paint to the number of cups of blue paint in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> batches of purple paint.<br />
  11          <span class="purple student-answer"
  12:           >A ratio that relates the number of cups of red paint to the number of cups of blue paint in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> batches of purple paint is
  13:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  14:             ><mrow><mn>15</mn><mo separator="true">:</mo><mn>20</mn></mrow></math
  15            >.</span

  18        <li>
  19:         How did you determine the ratio of the number of cups of red paint to the number of cups of blue paint in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> batches of purple paint?<br />
  20          <span class="purple student-answer"
  21:           >There are <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>3</mn></math> cups of red paint for every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math> cups of blue paint. To find the number of cups of red paint in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> batches of purple paint, I calculated
  22:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  23:             ><mrow><mn>3</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>3</mn></mrow></math
  24:           >. To find the number of cups of blue paint in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math> batches, I calculated
  25:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  26:             ><mrow><mn>4</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn></mrow></math
  27            >. So the ratio of the number of cups of red paint to the number of cups of blue paint in 5 batches of purple paint is
  28:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  29:             ><mrow><mn>15</mn><mo separator="true">:</mo><mn>20</mn></mrow></math
  30            >.</span

DIDwhiteboard • Print Alt/G6/M1/TA L4/Strapi/learn2-2of2.html:
   4    <li>
   5:     A bucket has <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math> cups of red paint in it. How many cups of blue paint do you need to add to the bucket to create the&nbsp;correct shade of purple paint? Draw a tape diagram to show your thinking.<br />
   6:     <img alt="" src="https://dev-dp-cms-api.s3.amazonaws.com/ck-image-5014a7d2-de93-48bb-8949-b6d734d55ea7.png" style="width: 284px; height: 266px;" />
   7      <p>
   8        <span class="purple student-answer"
   9:         >I need to add <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>16</mn></math> cups of blue paint to the bucket of red paint to create the correct shade of purple paint.&nbsp;</span
  10        >

  14      <p>
  15:       A bucket has <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>24</mn></math> cups of blue paint in it. How many cups of red paint do you need to add to the bucket to create the correct shade of purple paint?<br />
  16        <span class="purple student-answer"
  17:         >I need to add <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>18</mn></math> cups of red paint to the bucket of blue paint to create the correct shade of purple paint.</span
  18        >

  22      <p>
  23:       A barrel holds <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>42</mn></math> cups of paint. How many cups of red paint and how many cups of blue paint do you need to create <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>42</mn></math> cups of the correct shade of purple paint?<br />
  24        <span class="purple student-answer"
  25:         >I need <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>18</mn></math> cups of red paint and <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>24</mn></math> cups of blue paint to create <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>42</mn></math> cups of the correct shade of purple paint.</span
  26        >

DIDwhiteboard • Print Alt/G6/M1/TD l18/slide2.js:
  13      updateSingleButtonGroup(2, { disabled: true }, buttonGroup1);
  14:     // create/update a dummy variable to keep track of whether the screen has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M1/TD l18/slide3.js:
  14      ggb1.instance.setValue("speed", 0.5);
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TA l1/slide5.js:
  10      ggb1.instance.setValue("sideLength", 1);
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TA l1/slide6.js:
  10      ggb1.instance.setValue("sideLength", 1);
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TA l1/slide7.js:
  10      ggb1.instance.setValue("sideLength", 1);
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TA l1/slide8.js:
  10      ggb1.instance.setValue("sideLength", 1);
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TB L6/slide3.js:
   9      ggb1.updateInnerData({ speed: 12 });
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TB L6/slide4.js:
  16      });
  17:     // create/update a dummy variable to keep track of whether the screen has initialized
  18      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TB L6/slide5.js:
  14      });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M2/TE L17/slide5.js:
  145    //   ggb1.instance.setValue("number" + (i + 1), varArray[i].value);
  146:   //  // console.log(table1.getCell(i, 4, { value: rowsContent[i][4].value }));
  147    // }

DIDwhiteboard • Print Alt/G6/M2/TE L17/slide6.js:
  164    //   ggb1.instance.setValue("number" + (i + 1), varArray[i].value);
  165:   //  // console.log(table1.getCell(i, 4, { value: rowsContent[i][4].value }));
  166    // }

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide2.js:
  12  
  13:     // create/update a dummy variable to keep track of whether the screen has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide3.js:
  13      button1.updateData({ disabled: true });
  14:     // create/update a dummy variable to keep track of whether the screen has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide4.js:
  13      button1.updateData({ disabled: true });
  14:     // create/update a dummy variable to keep track of whether the screen has initialized
  15      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide6.js:
  7      ggb1.instance.setPointSize('movingCenterPoint', 9);
  8:     // create/update a dummy variable to keep track of whether the slide has initialized
  9      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide7.js:
  19      buttonGroup1.updateSingleButton({ disabled: true }, 1);
  20:     // create/update a dummy variable to keep track of whether the slide has initialized
  21      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide8.js:
  17      //button2.updateData({visible: false, text: `Next Number $(\\frac{${counter}}{10})$`});
  18:     // create/update a dummy variable to keep track of whether the slide has initialized
  19      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide10.js:
   9      ggb1.instance.setPointSize('center', 9);
  10:     // create/update a dummy variable to keep track of whether the slide has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide11.js:
  15      ggb1.instance.setValue('submitted', true);
  16:     // create/update a dummy variable to keep track of whether the slide has initialized
  17      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide12.js:
  18      ggb1.instance.setValue('submitted', true);
  19:     // create/update a dummy variable to keep track of whether the slide has initialized
  20      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TA L2/slide13.js:
  20      ggb1.instance.setLayer('C', 6);
  21:     // create/update a dummy variable to keep track of whether the slide has initialized
  22      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TB L7/slide5.js:
   9      ggb1.instance.setValue("state", 4);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M3/TB L7/slide6.js:
   9      ggb1.instance.setValue("state", 6);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      let num = ggb1.instance.getValue("val1");

DIDwhiteboard • Print Alt/G6/M4/TB L11 Modeling Real-World Situations and Expressions/slide5.js:
  50    //update values in table
  51:   let regexTest = /([a-l]|[n-z])/;
  52  

DIDwhiteboard • Print Alt/G6/M4/TE L23 Graphs of Ratio Relationships/slide5.js:
  49  /*autorun(() => {
  50: console.log(!/[abdefhijklmnopqrstuvwxyz]/.test(input1.data.text));
  51: if((!/[abdefhijklmnopqrstuvwxyz]/.test(input1.data.text))==true){
  52  button1.updateData({disabled: false});

  67  button1.on("click", () => {
  68:   if (!/[bdehijklmnopqstuvwxyz]/.test(input1.data.text) == true) {
  69      button1.updateData({ disabled: true });

  71      const ggbready =
  72:       "f:" + rawinput.replace(/\\/g, "\\").replace(/c/, "y").replace(/g/g, "x");
  73      ggb1.instance.evalLaTeX(ggbready, 0);

DIDwhiteboard • Print Alt/G6/M5/TB L07-Areas of Trapezoids and Other Polygons/slide2.js:
   9      ggb1.instance.setValue("state", 1);
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M5/TD L15-Exploring Volume of Fractional Cubes/slide6.js:
  16  /* autorun(()=>{
  17: let pattern2 = /frac{\d+}{\d+}/;
  18  if(pattern2.test(table1.getCell(0,0).value)){

  24  autorun(()=>{
  25: let pattern3 = /frac{\d+}{\d+}/;
  26    if(pattern3.test(table1.getCell(0,1).value)){

  32  autorun(()=>{
  33: let pattern4 = /frac{\d+}{\d+}/;
  34  if(pattern4.test(table1.getCell(0,2).value)){

  39    autorun(()=>{
  40:   let pattern5 = /frac{\d+}{\d+}/;
  41  if(pattern5.test(table1.getCell(0,3).value)){

DIDwhiteboard • Print Alt/G6/M6/TA L04 - Creating a Histogram/slide10.js:
  14      });
  15:     // create/update a dummy variable to keep track of whether the screen has initialized
  16      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M6/TC L15 - More Practice with Box Plots/slide3.js:
  21      timeDiff =
  22:       (Math.round((runTime - buttonClickTime) / 1000) * 1) / 1 + pauseTime;
  23:     //let smoothTime = (runTime - buttonClickTime) / 1000;
  24      ggb1.instance.evalCommand(`countdown1=60 - ${timeDiff}`);

DIDwhiteboard • Print Alt/G6/M6/TD L20 - Choosing a Measure of Center/slide2.js:
   9      button1.updateData({ disabled: true });
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G6/M6/TD L20 - Choosing a Measure of Center/slide4.js:
   9      button1.updateData({ disabled: true });
  10:     // create/update a dummy variable to keep track of whether the screen has initialized
  11      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M1/TA L01 - An Experiment with Ratios and Rates/Strapi/learn1-1of1.html:
    5        <li>
    6:         Machine A sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math> seconds.
    7        </li>
    8        <li>
    9:         Machine B sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>33</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math> seconds.
   10        </li>

   31                <td>
   32:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math>
   33                </td>
   34                <td>
   35:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math>
   36                </td>

   39                <td>
   40:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>
   41                </td>

   43                  <span class="purple student-answer"
   44:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math></span
   45                  >

   50                  <span class="purple student-answer"
   51:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>16</mn></math></span
   52                  >

   54                <td>
   55:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>80</mn></math>
   56                </td>

   59                <td>
   60:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math>
   61                </td>

   63                  <span class="purple student-answer"
   64:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>40</mn></math></span
   65                  >

   70                  <span class="purple student-answer"
   71:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math></span
   72                  >

   74                <td>
   75:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>100</mn></math>
   76                </td>

   79                <td>
   80:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
   81                </td>

   83                  <span class="purple student-answer"
   84:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>60</mn></math></span
   85                  >

  104                <td>
  105:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math>
  106                </td>
  107                <td>
  108:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>33</mn></math>
  109                </td>

  112                <td>
  113:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
  114                </td>

  116                  <span class="purple student-answer"
  117:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>66</mn></math></span
  118                  >

  123                  <span class="purple student-answer"
  124:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math></span
  125                  >

  127                <td>
  128:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>22</mn></math>
  129                </td>

  132                <td>
  133:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>18</mn></math>
  134                </td>

  136                  <span class="purple student-answer"
  137:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>99</mn></math></span
  138                  >

  143                  <span class="purple student-answer"
  144:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math></span
  145                  >

  147                <td>
  148:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>44</mn></math>
  149                </td>

  153                  <span class="purple student-answer"
  154:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math></span
  155                  >

  157                <td>
  158:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>11</mn></math>
  159                </td>

  169    <li>
  170:     Does machine A or machine B sort more coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds? Explain how you found your answer.<br />
  171      <span class="purple student-answer"
  172:       >Machine B does because machine A sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>50</mn></math> coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds and machine B sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>55</mn></math> coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds. To find the number of coins sorted in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds for each machine, I multiplied the number of coins sorted in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math> seconds by <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math
  173:       >. Machine A sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math> seconds, so it can sort <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>50</mn></math> coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds. Machine B sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>11</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math> seconds, so it can sort <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>55</mn></math> coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds.</span
  174      >

  179        <li>
  180:         Machine C sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>36</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math> seconds.
  181        </li>
  182        <li>
  183:         Machine D sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>9</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1.5</mn></math> seconds.&nbsp;
  184        </li>

  205                <td>
  206:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math>
  207                </td>
  208                <td>
  209:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>36</mn></math>
  210                </td>

  213                <td>
  214:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>
  215                </td>

  217                  <span class="purple student-answer"
  218:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>9</mn></math></span
  219                  >

  224                  <span class="purple student-answer"
  225:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>16</mn></math></span
  226                  >

  228                <td>
  229:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>72</mn></math>
  230                </td>

  233                <td>
  234:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math>
  235                </td>

  237                  <span class="purple student-answer"
  238:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>27</mn></math></span
  239                  >

  243                <td>
  244:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>14</mn></math>
  245                </td>

  247                  <span class="purple student-answer"
  248:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>63</mn></math></span
  249                  >

  268                <td>
  269:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1.5</mn></math>
  270                </td>
  271                <td>
  272:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>9</mn></math>
  273                </td>

  276                <td>
  277:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn></math>
  278                </td>

  280                  <span class="purple student-answer"
  281:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>72</mn></math></span
  282                  >

  287                  <span class="purple student-answer"
  288:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>3</mn></math></span
  289                  >

  291                <td>
  292:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>18</mn></math>
  293                </td>

  297                  <span class="purple student-answer"
  298:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>16.5</mn></math></span
  299                  >

  301                <td>
  302:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>99</mn></math>
  303                </td>

  306                <td>
  307:                 <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math>
  308                </td>

  310                  <span class="purple student-answer"
  311:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>60</mn></math></span
  312                  >

  323    <li>
  324:     Does machine C or machine D sort more coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math> seconds? Explain how you found your answer.<br />
  325      <span class="purple student-answer"
  326:       >Machine D sorts more coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math> seconds. I know machine C sorts <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>9</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math> seconds, and at that constant rate the machine can sort <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>90</mn></math> coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math> seconds because
  327:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  328:         ><mrow><mn>10</mn><mo>⋅</mo><mn>9</mn><mo>=</mo><mn>90</mn></mrow></math
  329:       >. Machine D can sort <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>60</mn></math> coins every <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math> seconds, so it can sort <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>120</mn></math> coins in <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math> seconds because
  330:       <math xmlns="http://www.w3.org/1998/Math/MathML"
  331:         ><mrow><mn>2</mn><mo>⋅</mo><mn>60</mn><mo>=</mo><mn>120</mn></mrow></math
  332        >.&nbsp;</span

DIDwhiteboard • Print Alt/G7/M1/TA L01 - An Experiment with Ratios and Rates/Strapi/learn2-1of2.html:
  17        <td>
  18:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>20</mn></math>
  19        </td>
  20        <td>
  21:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn></math>
  22        </td>

  24          <span class="purple student-answer"
  25:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5</mn></math></span
  26          >

  31        <td>
  32:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>33</mn></math>
  33        </td>
  34        <td>
  35:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math>
  36        </td>

  38          <span class="purple student-answer"
  39:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>5.5</mn></math></span
  40          >

  45        <td>
  46:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>36</mn></math>
  47        </td>
  48        <td>
  49:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math>
  50        </td>

  52          <span class="purple student-answer"
  53:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4.5</mn></math></span
  54          >

  59        <td>
  60:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>9</mn></math>
  61        </td>
  62        <td>
  63:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1.5</mn></math>
  64        </td>

  66          <span class="purple student-answer"
  67:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math></span
  68          >

DIDwhiteboard • Print Alt/G7/M1/TA L01 - An Experiment with Ratios and Rates/Strapi/learn2-2of2.html:
  17        <td>
  18:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>42</mn></math>
  19        </td>
  20        <td>
  21:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math>
  22        </td>

  24          <span class="purple student-answer"
  25:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>7</mn></math></span
  26          >

  31        <td>
  32:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>36</mn></math>
  33        </td>

  35          <span class="purple student-answer"
  36:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math></span
  37          >

  39        <td>
  40:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math>
  41        </td>

  45        <td>
  46:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>27</mn></math>
  47        </td>
  48        <td>
  49:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4.5</mn></math>
  50        </td>

  52          <span class="purple student-answer"
  53:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6</mn></math></span
  54          >

  60          <span class="purple student-answer"
  61:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>35</mn></math></span
  62          >

  64        <td>
  65:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>3.5</mn></math>
  66        </td>
  67        <td>
  68:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math>
  69        </td>

  74          <span class="purple student-answer"
  75:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>320</mn></math></span
  76          >

  78        <td>
  79:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>40</mn></math>
  80        </td>
  81        <td>
  82:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math>
  83        </td>

  87        <td>
  88:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>52</mn></math>
  89        </td>

  91          <span class="purple student-answer"
  92:           ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>8</mn></math></span
  93          >

  95        <td>
  96:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6.5</mn></math>
  97        </td>

DIDwhiteboard • Print Alt/G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide2.js:
  10      ggb1.updateData({ balloonNum: 0, pumpNumbers: [] });
  11:     // create/update a dummy variable to keep track of whether the slide has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M3/TD L18 - Understanding Inequalities and Their Solutions/slide14.js:
   26  
   27:   //hide yes/no buttons and text
   28    text2.updateData({ visible: false });

  165  autorun(() => {
  166:   //runs button script for yes/no
  167    //if yes...

  191  
  192:   //register variables determining how many yes/no buttons selected and which number chosen
  193    let count = ggb1.innerData['counter'];

DIDwhiteboard • Print Alt/G7/M4/TC L11 The Inside of a Circle/slide3.js:
  21      updateSingleButtonGroup(2, { disabled: true }, buttonGroup1);
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L11 The Inside of a Circle/slide4.js:
  21      updateSingleButtonGroup(2, { disabled: true }, buttonGroup1);
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L11 The Inside of a Circle/slide10.js:
  11      ggb1.instance.setValue("showOuterQuads", false);
  12:     // create/update a dummy variable to keep track of whether the screen has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L11 The Inside of a Circle/slide11.js:
  11      ggb1.instance.setValue("showOuterQuads", true);
  12:     // create/update a dummy variable to keep track of whether the screen has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L11 The Inside of a Circle/slide12.js:
  12      ggb2.instance.setValue("showOuterQuads", true);
  13:     // create/update a dummy variable to keep track of whether the screen has initialized
  14      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L11 The Inside of a Circle/slide13.js:
   9    //ggb1.instance.setValue("trip", 2);
  10:   // create/update a dummy variable to keep track of whether the screen has initialized
  11    ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L15 Watering a Lawn/slide3.js:
  10      ggb1.updateData({ initialState: ggb1.instance.getBase64() });
  11:     // create/update a dummy variable to keep track of whether the screen has initialized
  12      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TC L15 Watering a Lawn/slide4.js:
  22      }
  23:     // create/update a dummy variable to keep track of whether the screen has initialized
  24      //ggb1.updateData({"init": true});

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide2.js:
  15    }
  16:   // create/update a dummy variable to keep track of whether the screen has initialized
  17    ggb2.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/OLD-slide3.js:
  17    ggb2.instance.setValue('showPrismPyramidBool', false);
  18:   // create/update a dummy variable to keep track of whether the screen has initialized
  19    ggb2.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/slide2.js:
  18    }
  19:   // create/update a dummy variable to keep track of whether the screen has initialized
  20    ggb2.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/slide3.js:
  21    }
  22:   // create/update a dummy variable to keep track of whether the screen has initialized
  23    ggb2.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M4/TE L23 - Cross Section Scavenger Hunt/slide4.js:
  23    }
  24:   // create/update a dummy variable to keep track of whether the screen has initialized
  25    ggb2.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M5/TD L19 Applying Percent Error/slide6.js:
  29    // console.log("All Responses");
  30:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
  31  

  60    // console.log("Ranked Students");
  61:   // console.table(rankedStudents); // For illustrative purposes only
  62  

  64    const tableRows = createTableRowsData(rankedStudents);
  65:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  66  

DIDwhiteboard • Print Alt/G7/M5/TD L19 Applying Percent Error/slide8.js:
  29    // console.log("All Responses");
  30:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
  31  

  71    // console.log("Ranked Students");
  72:   // console.table(rankedStudents); // For illustrative purposes only
  73  

  75    const tableRows = createTableRowsData(rankedStudents);
  76:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  77  

DIDwhiteboard • Print Alt/G7/M5/TD L19 Applying Percent Error/slide9.js:
   37    // console.log("All Responses");
   38:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
   39  

   44    //   console.log({ ...data }, { ...info })
   45:   // ); // For illustrative purposes only
   46  

   86          percent,
   87:         //(Math.abs(actualValue - data.estimate) / actualValue).toFixed(2) * 100,
   88        ];

   93    // console.log("Ranked Students");
   94:   // console.table(rankedStudents); // For illustrative purposes only
   95  

   97    const tableRows = createTableRowsData(rankedStudents);
   98:   // console.log("Table Rows", tableRows); // For illustrative purposes only
   99  

  101    const tableRows2 = createTableRowsData2(rankedStudents2);
  102:   // console.log("Table Rows2", tableRows2); // For illustrative purposes only
  103  

DIDwhiteboard • Print Alt/G7/M5/TD L19 Applying Percent Error/slide10.js:
   36    // console.log("All Responses");
   37:   // register.forEach(({ data, info }) => console.log({ ...data }, { ...info })); // For illustrative purposes only
   38  

   43    //   console.log({ ...data }, { ...info })
   44:   // ); // For illustrative purposes only
   45  

  104          percent,
  105:         //((Math.abs(actualValue - data.estimate) / actualValue) * 100).toFixed(
  106          // 0

  113    // console.log("Ranked Students");
  114:   // console.table(rankedStudents); // For illustrative purposes only
  115    console.log(rankedStudents, rankedStudents2);

  117    const tableRows = createTableRowsData(rankedStudents);
  118:   // console.log("Table Rows", tableRows); // For illustrative purposes only
  119  

  121    const tableRows2 = createTableRowsData2(rankedStudents2);
  122:   // console.log("Table Rows2", tableRows2); // For illustrative purposes only
  123  

DIDwhiteboard • Print Alt/G7/M6/TD L19 - Memory Games/slide3.js:
  12    ggb1.instance.startAnimation();
  13:   // create/update a dummy variable to keep track of whether the screen has initialized
  14    ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M6/TD L19 - Memory Games/slide4.js:
  13    ggb1.instance.startAnimation();
  14:   // create/update a dummy variable to keep track of whether the screen has initialized
  15    ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G7/M6/TD L19 - Memory Games/slide6.js:
  8    ggb1.instance.setValue("state", 1);
  9:   // create/update a dummy variable to keep track of whether the screen has initialized
  10    ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M1/TB L06 - More Properties of Exponents/classwork.html:
    7          >Assume
    8:         <math xmlns="http://www.w3.org/1998/Math/MathML"
    9:           ><mrow><mn>4</mn><mo>⋅</mo><mn>3</mn></mrow></math
   10          >

   16            alt=""
   17:           src="https://prod-dp-cms-api.s3.amazonaws.com/EM_2_0801_SE_B_L06_PA_mustard_spot_V2_01_9a47fd0ff6.svg"
   18            style="width: 100px; height: 90px"

   26              >If
   27:             <math xmlns="http://www.w3.org/1998/Math/MathML"
   28:               ><mrow><mn>4</mn><mo>⋅</mo><mn>3</mn></mrow></math
   29              >
   30              is under the mustard spot, then
   31:             <math xmlns="http://www.w3.org/1998/Math/MathML"
   32:               ><mrow><mn>4</mn><mo>⋅</mo><mn>3</mn></mrow></math
   33              >
   34:             is repeated <span class="alternatives">5</span> times.</span
   35            >

   75                          alt=""
   76:                         src="https://prod-dp-cms-api.s3.amazonaws.com/EM_2_0801_TE_B_L06_PA_problem_8a_EM_2_PA_24_c8e1b856b2.svg"
   77                          style="width: 200px; height: 103px"

   88                            ><math
   89:                             ><mo stretchy="false">(</mo> <mn>4</mn> <mo>⋅</mo>
   90                              <mn>3</mn>

   92                                <mo stretchy="false">)</mo>
   93:                               <mrow> <mn>7</mn> </mrow>
   94:                             </msup></math
   95                            ></span

  115                          alt=""
  116:                         src="https://prod-dp-cms-api.s3.amazonaws.com/EM_2_0801_TE_B_L06_PA_problem_8b_EM_2_PA_25_002411de19.svg"
  117                          style="width: 200px; height: 89px"

  131                            <span class="purple student-answer"
  132:                             ><math xmlns="http://www.w3.org/1998/Math/MathML"
  133                                ><mrow
  134:                                 ><msup><mn>4</mn><mn>7</mn></msup
  135                                  ><mo>⋅</mo
  136:                                 ><msup><mn>3</mn><mn>7</mn></msup></mrow
  137                                ></math

  159          >Assume
  160:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  161:           ><mrow><mn>4</mn><mo>⋅</mo><mn>3</mn></mrow></math
  162          >

  168            alt=""
  169:           src="https://prod-dp-cms-api.s3.amazonaws.com/EM_2_0801_SE_B_L06_PA_mustard_spot_V2_01_9a47fd0ff6.svg"
  170            style="width: 100px; height: 90px"

  178              >If
  179:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  180:               ><mrow><mn>4</mn><mo>⋅</mo><mn>3</mn></mrow></math
  181              >
  182              is under the mustard spot, then
  183:             <math xmlns="http://www.w3.org/1998/Math/MathML"
  184:               ><mrow><mn>4</mn><mo>⋅</mo><mn>3</mn></mrow></math
  185              >
  186:             is repeated <span class="alternatives">5</span> times.</span
  187            >

  227                          alt=""
  228:                         src="https://prod-dp-cms-api.s3.amazonaws.com/EM_2_0801_TE_B_L06_PA_problem_8a_EM_2_PA_24_c8e1b856b2.svg"
  229                          style="width: 200px; height: 103px"

  248                          alt=""
  249:                         src="https://prod-dp-cms-api.s3.amazonaws.com/EM_2_0801_TE_B_L06_PA_problem_8b_EM_2_PA_25_002411de19.svg"
  250                          style="width: 200px; height: 89px"

  262                ><math
  263:                 xmlns="http://www.w3.org/1998/Math/MathML"
  264                  display="inline"

  273                  </msup>
  274:               </math></span
  275              >

  279                ><math
  280:                 xmlns="http://www.w3.org/1998/Math/MathML"
  281                  display="inline"

  291                  </msup>
  292:               </math></span
  293              >

DIDwhiteboard • Print Alt/G8/M1/TC L13 - Applications with Numbers in Scientific Notation/slide5.js:
  28    if (result.error) {
  29:     inputComp.updateData({ text: `${min}` }); // what should the text do/say if students input "cabbage"?
  30      return min; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • Print Alt/G8/M1/TC L13 - Applications with Numbers in Scientific Notation/Strapi/classwork.html:
     4      On average, an eighth grader’s lungs can hold
     5:     <math xmlns="http://www.w3.org/1998/Math/MathML"
     6        ><mrow
     7:         ><mn>3.6</mn><mo>×</mo
     8          ><msup
     9:           ><mn>10</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup
    10          ></mrow

    16          What volume of air is in
    17:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>
    18          breaths? Write your answer in scientific notation.

    20            <span class="purple student-answer"
    21:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
    22                ><mtable

    30                      <mrow data-mjx-texclass="INNER">
    31:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>3.6</mn>
    32                        <mo>×</mo>
    33                        <msup>
    34:                         <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
    35                        </msup>

    39                      <mrow data-mjx-texclass="INNER">
    40:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>3.6</mn>
    41                        <mo>×</mo>
    42                        <msup>
    43:                         <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
    44                        </msup>

    48                    <mtd>
    49:                     <mi></mi> <mo>=</mo> <mo stretchy="false">(</mo>
    50:                     <mn>3.6</mn> <mo>+</mo> <mn>3.6</mn>
    51:                     <mo stretchy="false">)</mo> <mo>×</mo>
    52                      <msup>
    53:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
    54                      </msup>

    59                    <mtd>
    60:                     <mi></mi> <mo>=</mo> <mn>7.2</mn> <mo>×</mo>
    61                      <msup>
    62:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
    63                      </msup>

    65                  </mtr>
    66:               </mtable></math
    67              >

    71            >There are
    72:           <math xmlns="http://www.w3.org/1998/Math/MathML"
    73              ><mrow
    74:               ><mn>7.2</mn><mo>×</mo
    75                ><msup
    76:                 ><mn>10</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup
    77                ></mrow

    80            cubic meters of air in
    81:           <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>2</mn></math>
    82            breaths.</span

    88          What volume of air is in
    89:         <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math>
    90          breaths? Write your answer in scientific notation.

    92            <span class="purple student-answer"
    93:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
    94                ><mtable

   103                      <mrow data-mjx-texclass="INNER">
   104:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>3.6</mn>
   105                        <mo>×</mo>
   106                        <msup>
   107:                         <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   108                        </msup>

   112                    <mtd>
   113:                     <mi></mi> <mo>=</mo> <mn>10</mn>
   114:                     <mo stretchy="false">(</mo> <mn>3.6</mn>
   115:                     <mo stretchy="false">)</mo> <mo>×</mo>
   116                      <msup>
   117:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   118                      </msup>

   123                    <mtd>
   124:                     <mi></mi> <mo>=</mo> <mn>36</mn> <mo>×</mo>
   125                      <msup>
   126:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   127                      </msup>

   132                    <mtd>
   133:                     <mi></mi> <mo>=</mo> <mn>3.6</mn> <mo>×</mo>
   134                      <msup>
   135:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>2</mn> </mrow>
   136                      </msup>

   138                  </mtr>
   139:               </mtable></math
   140              >

   144            >There are
   145:           <math xmlns="http://www.w3.org/1998/Math/MathML"
   146              ><mrow
   147:               ><mn>3.6</mn><mo>×</mo
   148                ><msup
   149:                 ><mn>10</mn><mrow><mo>−</mo><mn>2</mn></mrow></msup
   150                ></mrow

   153            cubic meters of air in
   154:           <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn></math>
   155            breaths.</span

   165      The volume of each breath is about
   166:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   167        ><mrow
   168:         ><mn>3.6</mn><mo>&#215;</mo
   169          ><msup
   170:           ><mn>10</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup
   171          ></mrow

   175      balloon with
   176:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   177        ><mrow
   178:         ><mn>3.6</mn><mo>&#215;</mo><msup><mn>10</mn><mn>0</mn></msup></mrow
   179        ></math

   183        <span class="purple student-answer"
   184:         ><math xmlns="http://www.w3.org/1998/Math/MathML" display="block">
   185            <mtable

   313            </mtable>
   314:         </math></span
   315        >

   319        >It takes
   320:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1000</mn></math>
   321        breaths to reach the goal.</span

   332    <span class="purple student-answer underline"
   333:     ><math xmlns="http://www.w3.org/1998/Math/MathML"
   334        ><mrow
   335:         ><mn>3.6</mn><mo>&#215;</mo><msup><mn>10</mn><mn>0</mn></msup></mrow
   336        ></math

   340    <span class="purple student-answer underline"
   341:     ><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1000</mn></math></span
   342    >

   344    <span class="purple student-answer underline"
   345:     ><math xmlns="http://www.w3.org/1998/Math/MathML"
   346        ><mrow
   347:         ><mn>3.6</mn><mo>&#215;</mo
   348          ><msup
   349:           ><mn>10</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup
   350          ></mrow

   359      On average, an eighth grader breathes
   360:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>14</mn></math> times
   361      per minute. Assume you have been breathing at about the same rate your whole

   366          About how many breaths have you taken so far in your life? Write your
   367:         answer in scientific notation.<br /><br />
   368          <span class="purple student-answer"

   370            I am
   371:           <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>13</mn></math>
   372            years old.</span

   376            <span class="purple student-answer"
   377:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   378                ><mtable

   385                    <mtd>
   386:                     <mn>13</mn> <mo stretchy="false">(</mo> <mn>365</mn>
   387                      <mo stretchy="false">)</mo>
   388                    </mtd>
   389:                   <mtd> <mi></mi> <mo>=</mo> <mn>4745</mn> </mtd>
   390                  </mtr>

   393                    <mtd>
   394:                     <mi></mi> <mo>=</mo> <mn>4.745</mn> <mo>×</mo>
   395                      <msup>
   396:                       <mn>10</mn> <mrow> <mn>3</mn> </mrow>
   397                      </msup>

   399                  </mtr>
   400:               </mtable></math
   401              >

   405            >I have been alive for
   406:           <math xmlns="http://www.w3.org/1998/Math/MathML"
   407              ><mrow
   408:               ><mn>4.745</mn><mo>×</mo><msup><mn>10</mn><mn>3</mn></msup></mrow
   409              ></math

   411            days. There are
   412:           <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1440</mn></math>
   413            minutes in a day.</span

   417            <span class="purple student-answer"
   418:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   419                ><mtable

   427                      <mrow data-mjx-texclass="INNER">
   428:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>1.44</mn>
   429                        <mo>×</mo>
   430                        <msup>
   431:                         <mn>10</mn> <mrow> <mn>3</mn> </mrow>
   432                        </msup>

   435                      <mrow data-mjx-texclass="INNER">
   436:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>4.745</mn>
   437                        <mo>×</mo>
   438                        <msup>
   439:                         <mn>10</mn> <mrow> <mn>3</mn> </mrow>
   440                        </msup>

   444                    <mtd>
   445:                     <mi></mi> <mo>=</mo> <mo stretchy="false">(</mo>
   446:                     <mn>1.44</mn> <mo>⋅</mo> <mn>4.745</mn>
   447:                     <mo stretchy="false">)</mo> <mo>×</mo>
   448                      <mrow data-mjx-texclass="INNER">

   450                        <msup>
   451:                         <mn>10</mn> <mrow> <mn>3</mn> </mrow>
   452                        </msup>

   454                        <msup>
   455:                         <mn>10</mn> <mrow> <mn>3</mn> </mrow>
   456                        </msup>

   463                    <mtd>
   464:                     <mi></mi> <mo>=</mo> <mn>6.8328</mn> <mo>×</mo>
   465                      <msup>
   466:                       <mn>10</mn> <mrow> <mn>6</mn> </mrow>
   467                      </msup>

   469                  </mtr>
   470:               </mtable></math
   471              ></span

   475            >I have been alive for
   476:           <math xmlns="http://www.w3.org/1998/Math/MathML"
   477              ><mrow
   478:               ><mn>6.8328</mn><mo>×</mo><msup><mn>10</mn><mn>6</mn></msup></mrow
   479              ></math

   481            minutes. I assume I take
   482:           <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>14</mn></math>
   483            breaths per minute.</span

   487            <span class="purple student-answer"
   488:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   489                ><mtable

   498                      <mrow data-mjx-texclass="INNER">
   499:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>6.8328</mn>
   500                        <mo>×</mo>
   501                        <msup>
   502:                         <mn>10</mn> <mrow> <mn>6</mn> </mrow>
   503                        </msup>

   507                    <mtd>
   508:                     <mi></mi> <mo>=</mo> <mn>95.6592</mn> <mo>×</mo>
   509                      <msup>
   510:                       <mn>10</mn> <mrow> <mn>6</mn> </mrow>
   511                      </msup>

   516                    <mtd>
   517:                     <mi></mi> <mo>=</mo> <mn>9.56592</mn> <mo>×</mo>
   518                      <msup>
   519:                       <mn>10</mn> <mrow> <mn>7</mn> </mrow>
   520                      </msup>

   522                  </mtr>
   523:               </mtable></math
   524              ></span

   528            >I have taken about
   529:           <math xmlns="http://www.w3.org/1998/Math/MathML"
   530              ><mrow
   531:               ><mn>9.6</mn><mo>×</mo><msup><mn>10</mn><mn>7</mn></msup></mrow
   532              ></math

   540          If the volume of one breath is about
   541:         <math xmlns="http://www.w3.org/1998/Math/MathML"
   542            ><mrow
   543:             ><mn>3.6</mn><mo>×</mo
   544              ><msup
   545:               ><mn>10</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup
   546              ></mrow

   552            <span class="purple student-answer"
   553:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   554                ><mtable

   562                      <mrow data-mjx-texclass="INNER">
   563:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>9.6</mn>
   564                        <mo>×</mo>
   565                        <msup>
   566:                         <mn>10</mn> <mrow> <mn>7</mn> </mrow>
   567                        </msup>

   570                      <mrow data-mjx-texclass="INNER">
   571:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>3.6</mn>
   572                        <mo>×</mo>
   573                        <msup>
   574:                         <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   575                        </msup>

   579                    <mtd>
   580:                     <mi></mi> <mo>=</mo> <mo stretchy="false">(</mo>
   581:                     <mn>9.6</mn> <mo>⋅</mo> <mn>3.6</mn>
   582:                     <mo stretchy="false">)</mo> <mo>×</mo>
   583                      <mrow data-mjx-texclass="INNER">

   585                        <msup>
   586:                         <mn>10</mn> <mrow> <mn>7</mn> </mrow>
   587                        </msup>

   589                        <msup>
   590:                         <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   591                        </msup>

   598                    <mtd>
   599:                     <mi></mi> <mo>=</mo> <mn>34.56</mn> <mo>×</mo>
   600                      <msup>
   601:                       <mn>10</mn> <mrow> <mn>4</mn> </mrow>
   602                      </msup>

   607                    <mtd>
   608:                     <mi></mi> <mo>=</mo> <mn>3.456</mn> <mo>×</mo>
   609                      <msup>
   610:                       <mn>10</mn> <mrow> <mn>5</mn> </mrow>
   611                      </msup>

   613                  </mtr>
   614:               </mtable></math
   615              >

   619            >The total volume of breaths I have taken so far in my life is about
   620:           <math xmlns="http://www.w3.org/1998/Math/MathML"
   621              ><mrow
   622:               ><mn>3.5</mn><mo>×</mo><msup><mn>10</mn><mn>5</mn></msup></mrow
   623              ></math

   635      A dollar bill is
   636:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>0.11</mn></math>
   637      millimeters thick. About how many dollar bills will it take to make a stack
   638:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math> meter
   639      tall? Write your answer in scientific notation.

   641        <span class="purple student-answer"
   642:         ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   643            ><mtable

   650                <mtd>
   651:                 <mn>1</mn> <mo>×</mo>
   652                  <msup>
   653:                   <mn>10</mn> <mrow> <mn>0</mn> </mrow>
   654                  </msup>

   656                <mtd>
   657:                 <mi></mi> <mo>=</mo>
   658                  <munder>
   659                    <mrow>
   660:                     <mphantom> <mi>W</mi> <mi>W</mi> <mi>W</mi> </mphantom>
   661                    </mrow>

   665                  <mrow data-mjx-texclass="INNER">
   666:                   <mo data-mjx-texclass="OPEN">(</mo> <mn>0.11</mn> <mo>×</mo>
   667                    <msup>
   668:                     <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   669                    </msup>

   677                    <mrow>
   678:                     <mn>1</mn> <mo>×</mo>
   679                      <msup>
   680:                       <mn>10</mn> <mrow> <mn>0</mn> </mrow>
   681                      </msup>

   683                    <mrow>
   684:                     <mn>0.11</mn> <mo>×</mo>
   685                      <msup>
   686:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   687                      </msup>

   691                <mtd>
   692:                 <mi></mi> <mo>=</mo>
   693                  <mrow data-mjx-texclass="INNER">
   694                    <mo data-mjx-texclass="OPEN">(</mo>
   695:                   <mfrac> <mn>1</mn> <mn>0.11</mn> </mfrac>
   696                    <mo data-mjx-texclass="CLOSE">)</mo>

   702                      <msup>
   703:                       <mn>10</mn> <mrow> <mn>0</mn> </mrow>
   704                      </msup>
   705                      <msup>
   706:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   707                      </msup>

   715                <mtd>
   716:                 <mi></mi> <mo>≈</mo> <mn>9.09</mn> <mo>×</mo>
   717                  <msup>
   718:                   <mn>10</mn> <mrow> <mn>3</mn> </mrow>
   719                  </msup>

   721              </mtr>
   722:           </mtable></math
   723          >

   728        >It will take about
   729:       <math xmlns="http://www.w3.org/1998/Math/MathML"
   730          ><mrow
   731:           ><mn>9.1</mn><mo>&#215;</mo><msup><mn>10</mn><mn>3</mn></msup></mrow
   732          ></math

   734        dollar bills to make a stack
   735:       <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math> meter
   736        tall.</span

   744      The moon is approximately
   745:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   746        ><mrow
   747:         ><mn>3.84</mn><mo>&#215;</mo><msup><mn>10</mn><mn>8</mn></msup></mrow
   748        ></math

   750      meters away from the earth. One dollar bill is
   751:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>0.11</mn></math>
   752      millimeters thick. About how many dollar bills will it take to make a stack

   755        <span class="purple student-answer"
   756:         ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   757            ><mtable

   764                <mtd>
   765:                 <mn>3.84</mn> <mo>×</mo>
   766                  <msup>
   767:                   <mn>10</mn> <mrow> <mn>8</mn> </mrow>
   768                  </msup>

   770                <mtd>
   771:                 <mi></mi> <mo>=</mo>
   772                  <munder>
   773                    <mrow>
   774:                     <mphantom> <mi>W</mi> <mi>W</mi> <mi>W</mi> </mphantom>
   775                    </mrow>

   779                  <mrow data-mjx-texclass="INNER">
   780:                   <mo data-mjx-texclass="OPEN">(</mo> <mn>0.11</mn> <mo>×</mo>
   781                    <msup>
   782:                     <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   783                    </msup>

   791                    <mrow>
   792:                     <mn>3.84</mn> <mo>×</mo>
   793                      <msup>
   794:                       <mn>10</mn> <mrow> <mn>8</mn> </mrow>
   795                      </msup>

   797                    <mrow>
   798:                     <mn>0.11</mn> <mo>×</mo>
   799                      <msup>
   800:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   801                      </msup>

   805                <mtd>
   806:                 <mi></mi> <mo>=</mo>
   807                  <mrow data-mjx-texclass="INNER">
   808                    <mo data-mjx-texclass="OPEN">(</mo>
   809:                   <mfrac> <mn>3.84</mn> <mn>0.11</mn> </mfrac>
   810                    <mo data-mjx-texclass="CLOSE">)</mo>

   816                      <msup>
   817:                       <mn>10</mn> <mrow> <mn>8</mn> </mrow>
   818                      </msup>
   819                      <msup>
   820:                       <mn>10</mn> <mrow> <mo>−</mo> <mn>3</mn> </mrow>
   821                      </msup>

   829                <mtd>
   830:                 <mi></mi> <mo>≈</mo> <mn>34.91</mn> <mo>×</mo>
   831                  <msup>
   832:                   <mn>10</mn> <mrow> <mn>11</mn> </mrow>
   833                  </msup>

   838                <mtd>
   839:                 <mi></mi> <mo>=</mo> <mn>3.491</mn> <mo>×</mo>
   840                  <msup>
   841:                   <mn>10</mn> <mrow> <mn>12</mn> </mrow>
   842                  </msup>

   844              </mtr>
   845:           </mtable></math
   846          >

   850        >It will take about
   851:       <math xmlns="http://www.w3.org/1998/Math/MathML"
   852          ><mrow
   853:           ><mn>3.49</mn><mo>&#215;</mo><msup><mn>10</mn><mn>12</mn></msup></mrow
   854          ></math

   862      In February 2019, the US national debt was about
   863:     <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>22</mn></math> trillion
   864      dollars, or
   865:     <math xmlns="http://www.w3.org/1998/Math/MathML"
   866        ><mrow
   867:         ><mn>2.2</mn><mo>&#215;</mo><msup><mn>10</mn><mn>13</mn></msup></mrow
   868        ></math

   870      dollars. Make a comparison statement between the earth-to-moon stack of
   871:     dollar bills in problem 6 and the national debt.<br /><br />
   872      <span class="purple student-answer">Samples:</span>

   888            <span class="purple student-answer"
   889:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   890                ><mtable

   897                    <mtd>
   898:                     <mn>2.2</mn> <mo>×</mo>
   899                      <msup>
   900:                       <mn>10</mn> <mrow> <mn>13</mn> </mrow>
   901                      </msup>

   903                    <mtd>
   904:                     <mi></mi> <mo>=</mo>
   905                      <munder>
   906                        <mrow>
   907:                         <mphantom> <mi>W</mi> <mi>W</mi> <mi>W</mi> </mphantom>
   908                        </mrow>

   912                      <mrow data-mjx-texclass="INNER">
   913:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>3.49</mn>
   914                        <mo>×</mo>
   915                        <msup>
   916:                         <mn>10</mn> <mrow> <mn>12</mn> </mrow>
   917                        </msup>

   925                        <mrow>
   926:                         <mn>2.2</mn> <mo>×</mo>
   927                          <msup>
   928:                           <mn>10</mn> <mrow> <mn>13</mn> </mrow>
   929                          </msup>

   931                        <mrow>
   932:                         <mn>3.49</mn> <mo>×</mo>
   933                          <msup>
   934:                           <mn>10</mn> <mrow> <mn>12</mn> </mrow>
   935                          </msup>

   939                    <mtd>
   940:                     <mi></mi> <mo>=</mo>
   941                      <mrow data-mjx-texclass="INNER">
   942                        <mo data-mjx-texclass="OPEN">(</mo>
   943:                       <mfrac> <mn>2.2</mn> <mn>3.49</mn> </mfrac>
   944                        <mo data-mjx-texclass="CLOSE">)</mo>

   950                          <msup>
   951:                           <mn>10</mn> <mrow> <mn>13</mn> </mrow>
   952                          </msup>
   953                          <msup>
   954:                           <mn>10</mn> <mrow> <mn>12</mn> </mrow>
   955                          </msup>

   963                    <mtd>
   964:                     <mi></mi> <mo>≈</mo> <mn>0.63</mn> <mo>×</mo> <mn>10</mn>
   965                    </mtd>

   967                  <mtr>
   968:                   <mtd></mtd> <mtd> <mi></mi> <mo>=</mo> <mn>6.3</mn> </mtd>
   969                  </mtr>
   970:               </mtable></math
   971              >

   976            >The US national debt is equivalent to
   977:           <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>6.3</mn></math>
   978            earth-to-moon stacks of dollar bills.</span

   983            <span class="purple student-answer"
   984:             ><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"
   985                ><mtable

   993                      <mrow data-mjx-texclass="INNER">
   994:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>2.2</mn>
   995                        <mo>×</mo>
   996                        <msup>
   997:                         <mn>10</mn> <mrow> <mn>13</mn> </mrow>
   998                        </msup>

  1002                      <mrow data-mjx-texclass="INNER">
  1003:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>3.49</mn>
  1004                        <mo>×</mo>
  1005                        <msup>
  1006:                         <mn>10</mn> <mrow> <mn>12</mn> </mrow>
  1007                        </msup>

  1011                    <mtd>
  1012:                     <mi></mi> <mo>=</mo>
  1013                      <mrow data-mjx-texclass="INNER">
  1014:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>2.2</mn>
  1015                        <mo>×</mo>
  1016                        <msup>
  1017:                         <mn>10</mn> <mrow> <mn>13</mn> </mrow>
  1018                        </msup>

  1022                      <mrow data-mjx-texclass="INNER">
  1023:                       <mo data-mjx-texclass="OPEN">(</mo> <mn>0.349</mn>
  1024                        <mo>×</mo>
  1025                        <msup>
  1026:                         <mn>10</mn> <mrow> <mn>13</mn> </mrow>
  1027                        </msup>

  1034                    <mtd>
  1035:                     <mi></mi> <mo>=</mo> <mo stretchy="false">(</mo>
  1036:                     <mn>2.2</mn> <mo>−</mo> <mn>0.349</mn>
  1037:                     <mo stretchy="false">)</mo> <mo>×</mo>
  1038                      <msup>
  1039:                       <mn>10</mn> <mrow> <mn>13</mn> </mrow>
  1040                      </msup>

  1045                    <mtd>
  1046:                     <mi></mi> <mo>=</mo> <mn>1.851</mn> <mo>×</mo>
  1047                      <msup>
  1048:                       <mn>10</mn> <mrow> <mn>13</mn> </mrow>
  1049                      </msup>

  1051                  </mtr>
  1052:               </mtable></math
  1053              >

  1058            >The US national debt has
  1059:           <math xmlns="http://www.w3.org/1998/Math/MathML"
  1060              ><mrow
  1061:               ><mn>1.85</mn><mo>&#215;</mo
  1062:               ><msup><mn>10</mn><mn>13</mn></msup></mrow
  1063              ></math

DIDwhiteboard • Print Alt/G8/M1/TD L18 - The Pythagorean Theorem/slide4.js:
  50    if (result.error) {
  51:     //input1.updateData({ text: "0" }); // what should the text do/say if students input "cabbage"?
  52      return 0; // whatever you go with here, make sure it's inside of your min and max!

DIDwhiteboard • Print Alt/G8/M1/TE L21 Approximate Values of Roots and Pi Squared/Strapi/classwork.html:
    4      Approximate the value of
    5:     <math xmlns="http://www.w3.org/1998/Math/MathML"
    6:       ><msqrt><mn>2</mn></msqrt></math
    7      >

   30          <span class="purple student-answer"
   31:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   32:             ><mn>1</mn></math
   33            ></span

   40          <span class="purple student-answer"
   41:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   42:             ><mn>1.4</mn></math
   43            ></span

   50          <span class="purple student-answer"
   51:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   52:             ><mn>1.41</mn></math
   53            ></span

   65      Approximate the value of&nbsp;<math
   66:       xmlns="http://www.w3.org/1998/Math/MathML"
   67:       ><mroot><mn>18</mn><mn>3</mn></mroot></math
   68      >&nbsp;by rounding to the nearest given place value. Use the number lines

   90          <span class="purple student-answer"
   91:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
   92:             ><mn>3</mn></math
   93            ></span

  100          <span class="purple student-answer"
  101:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
  102              ><mtable columnalign="right left "
  103                ><mtr
  104:                 ><mtd><mn>2.6</mn></mtd></mtr
  105                ></mtable

  114          <span class="purple student-answer"
  115:           ><math xmlns="http://www.w3.org/1998/Math/MathML"
  116:             ><mn>2.62</mn></math
  117            ></span

  132          Determine the intervals that contain
  133:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  134:           ><mn>&#x03c0;</mn></math
  135          >
  136          and
  137:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  138:           ><msup><mn>&#x03c0;</mn><mn>2</mn></msup></math
  139          >.<br />
  140          &nbsp;
  141:         <br /><br />
  142          <table

  152                  Interval That Contains&nbsp;<math
  153:                   xmlns="http://www.w3.org/1998/Math/MathML"
  154:                   ><mn>&#x03c0;</mn></math
  155                  >

  158                  Interval That Contains&nbsp;<math
  159:                   xmlns="http://www.w3.org/1998/Math/MathML"
  160:                   ><msup><mn>&#x03c0;</mn><mn>2</mn></msup></math
  161                  >

  168                  <span class="purple student-answer underline"
  169:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  170:                     ><mn>3</mn></math
  171                    ></span

  174                  <span class="purple student-answer underline"
  175:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  176:                     ><mn>4</mn></math
  177                    ></span

  181                  <span class="purple student-answer underline"
  182:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  183:                     ><mn>9</mn></math
  184                    ></span

  187                  <span class="purple student-answer underline"
  188:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  189:                     ><mn>16</mn></math
  190                    ></span

  196                  <span class="purple student-answer underline"
  197:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  198:                     ><mn>3.1</mn></math
  199                    ></span

  202                  <span class="purple student-answer underline"
  203:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  204:                     ><mn>3.2</mn></math
  205                    ></span

  209                  <span class="purple student-answer underline"
  210:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  211:                     ><mn>9.61</mn></math
  212                    ></span

  215                  <span class="purple student-answer underline"
  216:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  217:                     ><mn>10.24</mn></math
  218                    ></span

  224                  <span class="purple student-answer underline"
  225:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  226:                     ><mn>3.14</mn></math
  227                    ></span

  230                  <span class="purple student-answer underline"
  231:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  232:                     ><mn>3.15</mn></math
  233                    ></span

  237                  <span class="purple student-answer underline"
  238:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  239:                     ><mn>9.8596</mn></math
  240                    ></span

  243                  <span class="purple student-answer underline"
  244:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  245:                     ><mn>9.9225</mn></math
  246                    ></span

  252                  <span class="purple student-answer underline"
  253:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  254:                     ><mn>3.141</mn></math
  255                    ></span

  258                  <span class="purple student-answer underline"
  259:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  260:                     ><mn>3.142</mn></math
  261                    ></span

  265                  <span class="purple student-answer underline"
  266:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  267:                     ><mn>9.865881</mn></math
  268                    ></span

  271                  <span class="purple student-answer underline"
  272:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  273:                     ><mn>9.872164</mn></math
  274                    ></span

  283          Use your results from part (a) to approximate the value of
  284:         <math xmlns="http://www.w3.org/1998/Math/MathML"
  285:           ><msup><mn>&#x03c0;</mn><mn>2</mn></msup></math
  286          >

  288          &nbsp;
  289:         <br /><br />
  290          <table

  307                  <span class="purple student-answer"
  308:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  309:                     ><mn>10</mn></math
  310                    ></span

  317                  <span class="purple student-answer"
  318:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  319:                     ><mn>9.9</mn></math
  320                    ></span

  327                  <span class="purple student-answer"
  328:                   ><math xmlns="http://www.w3.org/1998/Math/MathML"
  329:                     ><mn>9.87</mn></math
  330                    ></span

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide3.js:
  64      });
  65:     // create/update a dummy variable to keep track of whether the screen has initialized
  66      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide4.js:
  62      buttonGroup1.updateSingleButton({ disabled: true }, 1);
  63:     // create/update a dummy variable to keep track of whether the screen has initialized
  64      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide4prev.js:
  67      });
  68:     // create/update a dummy variable to keep track of whether the screen has initialized
  69      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide6.js:
  11  
  12:     // create/update a dummy variable to keep track of whether the screen has initialized
  13      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide7.js:
  21      button1.updateData({ disabled: true });
  22:     // create/update a dummy variable to keep track of whether the screen has initialized
  23      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M5/TC L12-Solving Historical Problems with Systems of Equations/slide7prev.js:
  24      button1.updateData({ disabled: true });
  25:     // create/update a dummy variable to keep track of whether the screen has initialized
  26      ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M6/TC L11 - Scatter Plots/slide5.js:
  12    ggb1.instance.startAnimation();
  13:   // create/update a dummy variable to keep track of whether the screen has initialized
  14    ggb1.updateData({ init: true });

DIDwhiteboard • Print Alt/G8/M6/TE L22 - Volume of Cylinders/slide4.js:
  16      button4.updateData({ visible: false });
  17:     // create/update a dummy variable to keep track of whether the screen has initialized
  18      ggb1.updateData({ init: true });
