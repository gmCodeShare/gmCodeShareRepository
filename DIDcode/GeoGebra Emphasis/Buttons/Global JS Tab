function button1Click() {
  // button 1 code here
  enableButton(1, false); //use this structure to enable or disable any of the (up to) 5 buttons
}

function button2Click() {
  // button 2 code here
}

function button3Click() {
  // button 3 code here
}

function button4Click() {
  // button 4 code here
}

function button5Click() {
  // button 5 code here
}

ggbObject.registerClientListener(focusIndicatorsAndErrorMessages);
ggbObject.registerClickListener(buttonAndIconClicks);

var barButtons = ["ggbButton1", "ggbButton2", "ggbButton3", "ggbButton4", "ggbButton5"];

function focusIndicatorsAndErrorMessages(a) {
  switch (a.type) {
    case "select":
      switch (a.target) {
        case "instructionsIcon":
          ggbObject.setVisible("instructionsIconFocusIndicator", true);
          // ggbObject.setVisible("displayedGGBButtonMessage", false);
          break;
        case "xIcon":
          ggbObject.setVisible("xIconFocusIndicator", true);
          // ggbObject.setVisible("displayedGGBButtonMessage", false);
          break;
        default:
          if (barButtons.includes(a.target) && !ggbObject.getValue(a.target + "Enabled")) {
            disabledButtonDisplayMessage();
          } else {
            // ggbObject.setVisible("displayedGGBButtonMessage", false);
          }
      }
      break;
    case "deselect":
      ggbObject.setVisible("instructionsIconFocusIndicator", false);
      ggbObject.setVisible("xIconFocusIndicator", false);
  }
}

function buttonAndIconClicks(a) {
  switch (a) {
    case "instructionsIcon":
      ggbObject.setValue("showInstructions", true);
      ggbObject.evalCommand("ReadText(instructionsText)");
      break;
    case "xIcon":
      ggbObject.setVisible("xIconFocusIndicator", false);
      ggbObject.setValue("showInstructions", false);
      ggbObject.evalCommand('ReadText("The instructions have been closed.")');
      break;
    default:
      if (barButtons.includes(a)) {
        var buttonFunctions = {
          ggbButton1: button1Click,
          ggbButton2: button2Click,
          ggbButton3: button3Click,
          ggbButton4: button4Click,
          ggbButton5: button5Click,
        };
        if (buttonFunctions[a] && ggbObject.getValue(a + "Enabled")) {
          buttonFunctions[a]();
        } else {
          disabledButtonDisplayMessage();
        }
      }
  }
}

function enableButton(buttonNum, boolean) {
  ggbObject.setValue("ggbButton" + buttonNum + "Enabled", boolean);
  var color = boolean ? "0/255, 11/255, 92/255" : "118/255, 118/255,118/255";
  ggbObject.evalCommand("SetBackgroundColor(ggbButton" + buttonNum + ", " + color + ")");
}

function disabledButtonDisplayMessage() {
  // ggbObject.setVisible("displayedGGBButtonMessage", true);
  // ggbObject.evalCommand("ReadText(displayedGGBButtonMessage)");
}
